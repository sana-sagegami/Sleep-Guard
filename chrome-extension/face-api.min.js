/**
 * Minified by jsDelivr using Terser v5.37.0.
 * Original file: /npm/@vladmandic/face-api@1.7.12/dist/face-api.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";var faceapi=(()=>{var e,t=Object.defineProperty,n=Object.getOwnPropertyDescriptor,r=Object.getOwnPropertyNames,a=Object.prototype.hasOwnProperty,s=(e=function(e){if("undefined"!=typeof require)return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')},"undefined"!=typeof require?require:"undefined"!=typeof Proxy?new Proxy(e,{get:(e,t)=>("undefined"!=typeof require?require:e)[t]}):e),i=(e,n)=>{for(var r in n)t(e,r,{get:n[r],enumerable:!0})},o={};i(o,{AgeGenderNet:()=>RQ,BoundingBox:()=>UZ,Box:()=>VZ,ComposableTask:()=>_0,ComputeAllFaceDescriptorsTask:()=>p1,ComputeFaceDescriptorsTaskBase:()=>u1,ComputeSingleFaceDescriptorTask:()=>d1,DetectAllFaceLandmarksTask:()=>c1,DetectAllFacesTask:()=>g1,DetectFaceLandmarksTaskBase:()=>h1,DetectFacesTaskBase:()=>m1,DetectSingleFaceLandmarksTask:()=>f1,DetectSingleFaceTask:()=>y1,Dimensions:()=>TZ,FACE_EXPRESSION_LABELS:()=>mQ,FaceDetection:()=>HZ,FaceDetectionNet:()=>p0,FaceExpressionNet:()=>yQ,FaceExpressions:()=>gQ,FaceLandmark68Net:()=>MQ,FaceLandmark68TinyNet:()=>LQ,FaceLandmarkNet:()=>zQ,FaceLandmarks:()=>nJ,FaceLandmarks5:()=>rJ,FaceLandmarks68:()=>aJ,FaceMatch:()=>sJ,FaceMatcher:()=>S1,FaceRecognitionNet:()=>jQ,Gender:()=>FQ,LabeledBox:()=>iJ,LabeledFaceDescriptors:()=>oJ,NetInput:()=>LJ,NeuralNetwork:()=>XJ,ObjectDetection:()=>GZ,Point:()=>WZ,PredictedBox:()=>lJ,Rect:()=>tJ,SsdMobilenetv1:()=>o0,SsdMobilenetv1Options:()=>i0,TinyFaceDetector:()=>F0,TinyFaceDetectorOptions:()=>T0,TinyYolov2:()=>S0,TinyYolov2Options:()=>v0,allFaces:()=>k1,allFacesSsdMobilenetv1:()=>w1,allFacesTinyYolov2:()=>v1,awaitMediaLoaded:()=>EJ,bufferToImage:()=>$J,computeFaceDescriptor:()=>P0,createCanvas:()=>FJ,createCanvasFromMedia:()=>RJ,createFaceDetectionNet:()=>u0,createFaceRecognitionNet:()=>qQ,createSsdMobilenetv1:()=>l0,createTinyFaceDetector:()=>N1,createTinyYolov2:()=>N0,detectAllFaces:()=>x1,detectFaceLandmarks:()=>L0,detectFaceLandmarksTiny:()=>z0,detectLandmarks:()=>J0,detectSingleFace:()=>b1,draw:()=>IZ,env:()=>bJ,euclideanDistance:()=>I1,extendWithAge:()=>YQ,extendWithFaceDescriptor:()=>KQ,extendWithFaceDetection:()=>pJ,extendWithFaceExpressions:()=>xQ,extendWithFaceLandmarks:()=>kQ,extendWithGender:()=>JQ,extractFaceTensors:()=>BJ,extractFaces:()=>PJ,fetchImage:()=>VJ,fetchJson:()=>UJ,fetchNetWeights:()=>GJ,fetchOrThrow:()=>WJ,fetchVideo:()=>HJ,getContext2dOrThrow:()=>wJ,getMediaDimensions:()=>AJ,imageTensorToCanvas:()=>DJ,imageToSquare:()=>OJ,inverseSigmoid:()=>QZ,iou:()=>jZ,isMediaElement:()=>MJ,isMediaLoaded:()=>CJ,isWithAge:()=>XQ,isWithFaceDetection:()=>uJ,isWithFaceExpressions:()=>bQ,isWithFaceLandmarks:()=>vQ,isWithGender:()=>ZQ,loadAgeGenderModel:()=>X0,loadFaceDetectionModel:()=>Y0,loadFaceExpressionModel:()=>K0,loadFaceLandmarkModel:()=>H0,loadFaceLandmarkTinyModel:()=>j0,loadFaceRecognitionModel:()=>q0,loadSsdMobilenetv1Model:()=>V0,loadTinyFaceDetectorModel:()=>U0,loadTinyYolov2Model:()=>G0,loadWeightMap:()=>qJ,locateFaces:()=>Z0,matchDimensions:()=>KJ,minBbox:()=>qZ,nets:()=>R0,nonMaxSuppression:()=>KZ,normalize:()=>XZ,padToSquare:()=>YZ,predictAgeAndGender:()=>W0,recognizeFaceExpressions:()=>B0,resizeResults:()=>T1,resolveInput:()=>xJ,shuffleArray:()=>ZZ,sigmoid:()=>JZ,ssdMobilenetv1:()=>D0,tf:()=>l,tinyFaceDetector:()=>M0,tinyYolov2:()=>O0,toNetInput:()=>zJ,utils:()=>NZ,validateConfig:()=>m0,version:()=>_1});var l={};i(l,{Abs:()=>Ge,Acos:()=>He,Acosh:()=>je,AdadeltaOptimizer:()=>Sc,AdagradOptimizer:()=>Nc,AdamOptimizer:()=>Tc,AdamaxOptimizer:()=>_c,Add:()=>qe,AddN:()=>Ke,All:()=>Xe,Any:()=>Ye,ArgMax:()=>Ze,ArgMin:()=>Je,Asin:()=>Qe,Asinh:()=>et,Atan:()=>tt,Atan2:()=>rt,Atanh:()=>nt,AvgPool:()=>at,AvgPool3D:()=>it,AvgPool3DGrad:()=>ot,AvgPoolGrad:()=>st,BackendWasm:()=>sZ,BatchMatMul:()=>lt,BatchToSpaceND:()=>ut,Bincount:()=>pt,BitwiseAnd:()=>dt,BroadcastArgs:()=>ct,BroadcastTo:()=>ht,Callback:()=>tT,CallbackList:()=>Pw,Cast:()=>ft,Ceil:()=>mt,ClipByValue:()=>gt,Complex:()=>yt,ComplexAbs:()=>bt,Concat:()=>xt,Conv2D:()=>wt,Conv2DBackpropFilter:()=>vt,Conv2DBackpropInput:()=>kt,Conv3D:()=>It,Conv3DBackpropFilterV2:()=>St,Conv3DBackpropInputV2:()=>Nt,Cos:()=>Tt,Cosh:()=>_t,CropAndResize:()=>$t,Cumprod:()=>Ct,Cumsum:()=>Et,CustomCallback:()=>Vw,DataStorage:()=>P,DenseBincount:()=>At,DepthToSpace:()=>Ft,DepthwiseConv2dNative:()=>Rt,DepthwiseConv2dNativeBackpropFilter:()=>Dt,DepthwiseConv2dNativeBackpropInput:()=>Mt,Diag:()=>Ot,Dilation2D:()=>Lt,Dilation2DBackpropFilter:()=>Pt,Dilation2DBackpropInput:()=>zt,Draw:()=>Bt,ENV:()=>We,EarlyStopping:()=>aT,Einsum:()=>Vt,Elu:()=>Ut,EluGrad:()=>Gt,Environment:()=>Le,Equal:()=>jt,Erf:()=>Ht,Exp:()=>qt,ExpandDims:()=>Kt,Expm1:()=>Xt,FFT:()=>Yt,Fill:()=>Zt,FlipLeftRight:()=>Jt,Floor:()=>Qt,FloorDiv:()=>en,FromPixels:()=>aa,FusedBatchNorm:()=>tn,FusedConv2D:()=>oa,FusedDepthwiseConv2D:()=>la,GPGPUContext:()=>rz,GatherNd:()=>rn,GatherV2:()=>nn,GraphModel:()=>j_,Greater:()=>an,GreaterEqual:()=>sn,History:()=>Ww,IFFT:()=>ln,Identity:()=>on,Imag:()=>un,InputSpec:()=>Wx,IsFinite:()=>pn,IsInf:()=>dn,IsNan:()=>hn,KernelBackend:()=>B,LRN:()=>Nn,LRNGrad:()=>Tn,LayerVariable:()=>zx,LayersModel:()=>Uv,LeakyRelu:()=>cn,Less:()=>fn,LessEqual:()=>mn,LinSpace:()=>gn,Log:()=>yn,Log1p:()=>bn,LogSoftmax:()=>In,LogicalAnd:()=>xn,LogicalNot:()=>wn,LogicalOr:()=>vn,LogicalXor:()=>kn,LowerBound:()=>Sn,MathBackendCPU:()=>dE,MathBackendWebGL:()=>bP,MatrixBandPart:()=>_n,Max:()=>Cn,MaxPool:()=>$n,MaxPool3D:()=>Fn,MaxPool3DGrad:()=>Rn,MaxPoolGrad:()=>An,MaxPoolWithArgmax:()=>Dn,Maximum:()=>En,Mean:()=>Mn,Min:()=>On,Minimum:()=>Ln,MirrorPad:()=>zn,Mod:()=>Pn,MomentumOptimizer:()=>Ec,Multinomial:()=>Bn,Multiply:()=>Wn,Neg:()=>Vn,NonMaxSuppressionV3:()=>Gn,NonMaxSuppressionV4:()=>Hn,NonMaxSuppressionV5:()=>jn,NotEqual:()=>Un,OP_SCOPE_SUFFIX:()=>Ps,OneHot:()=>Kn,OnesLike:()=>qn,Optimizer:()=>Ic,OptimizerConstructors:()=>Mf,Pack:()=>Xn,PadV2:()=>Yn,Pool:()=>Zn,Pow:()=>Jn,Prelu:()=>Qn,Prod:()=>er,RMSPropOptimizer:()=>$c,RNN:()=>Xk,RaggedGather:()=>tr,RaggedRange:()=>nr,RaggedTensorToTensor:()=>rr,Range:()=>ar,Rank:()=>is,Real:()=>sr,RealDiv:()=>Wt,Reciprocal:()=>ir,Reduction:()=>qh,Relu:()=>or,Relu6:()=>cr,Reshape:()=>lr,ResizeBilinear:()=>dr,ResizeBilinearGrad:()=>hr,ResizeNearestNeighbor:()=>ur,ResizeNearestNeighborGrad:()=>pr,Reverse:()=>fr,RotateWithOffset:()=>sa,Round:()=>mr,Rsqrt:()=>gr,SGDOptimizer:()=>Cc,ScatterNd:()=>yr,SearchSorted:()=>xr,Select:()=>wr,Selu:()=>vr,Sequential:()=>qv,Sigmoid:()=>Tr,Sign:()=>Nr,Sin:()=>Ir,Sinh:()=>Sr,Slice:()=>kr,Softmax:()=>Fr,Softplus:()=>_r,SpaceToBatchND:()=>$r,SparseFillEmptyRows:()=>Rr,SparseReshape:()=>Dr,SparseSegmentMean:()=>Mr,SparseSegmentSum:()=>Or,SparseToDense:()=>Lr,SplitV:()=>Ar,Sqrt:()=>Cr,Square:()=>Pr,SquaredDifference:()=>zr,StaticRegexReplace:()=>Br,Step:()=>ra,StridedSlice:()=>Wr,StringNGrams:()=>Vr,StringSplit:()=>Ur,StringToHashBucketFast:()=>Gr,Sub:()=>Hr,Sum:()=>Er,SymbolicTensor:()=>Vx,Tan:()=>jr,Tanh:()=>qr,Tensor:()=>rs,TensorBuffer:()=>es,TensorScatterUpdate:()=>br,Tile:()=>Kr,TopK:()=>Xr,Transform:()=>Yr,Transpose:()=>Zr,Unique:()=>Jr,Unpack:()=>Qr,UnsortedSegmentSum:()=>ea,UpperBound:()=>ta,Variable:()=>ss,ZerosLike:()=>na,_FusedMatMul:()=>ia,abs:()=>mo,acos:()=>go,acosh:()=>yo,add:()=>po,addN:()=>bo,all:()=>xo,any:()=>wo,argMax:()=>vo,argMin:()=>ko,asin:()=>Io,asinh:()=>So,atan:()=>No,atan2:()=>To,atanh:()=>_o,avgPool:()=>Go,avgPool3d:()=>Ho,backend:()=>lo,backend_util:()=>Bf,basicLSTMCell:()=>Zo,batchNorm:()=>el,batchNorm2d:()=>tl,batchNorm3d:()=>nl,batchNorm4d:()=>rl,batchToSpaceND:()=>Jo,bincount:()=>al,bitwiseAnd:()=>sl,booleanMaskAsync:()=>Xd,broadcastArgs:()=>il,broadcastTo:()=>ol,broadcast_util:()=>Al,browser:()=>tf,buffer:()=>Pi,callbacks:()=>oT,cast:()=>Bi,ceil:()=>ll,clipByValue:()=>pl,clone:()=>Wi,complex:()=>Ws,concat:()=>jo,concat1d:()=>dl,concat2d:()=>hl,concat3d:()=>cl,concat4d:()=>fl,constraints:()=>rw,conv1d:()=>gl,conv2d:()=>ml,conv2dTranspose:()=>bl,conv3d:()=>xl,conv3dTranspose:()=>vl,copyRegisteredKernels:()=>wa,cos:()=>kl,cosh:()=>Il,cosineWindow:()=>rh,cumprod:()=>Sl,cumsum:()=>Nl,customGrad:()=>Ru,data:()=>Y_,denseBincount:()=>Tl,deprecationWarn:()=>ji,depthToSpace:()=>_l,depthwiseConv2d:()=>Cl,deregisterOp:()=>dT,device_util:()=>Es,diag:()=>El,dilation2d:()=>$l,disableDeprecationWarnings:()=>Hi,dispose:()=>Ji,disposeVariables:()=>qi,div:()=>co,divNoNan:()=>zl,dot:()=>Pl,dropout:()=>th,einsum:()=>Bl,elu:()=>Wl,enableDebugMode:()=>Gi,enableProdMode:()=>Ui,enclosingPowerOfTwo:()=>nh,engine:()=>Ki,ensureShape:()=>Vl,env:()=>Pe,equal:()=>Ml,erf:()=>Ul,euclideanNorm:()=>ou,exp:()=>lu,expandDims:()=>uu,expm1:()=>pu,eye:()=>hu,fft:()=>bd,fill:()=>ul,findBackend:()=>so,findBackendFactory:()=>io,floor:()=>cu,floorDiv:()=>ho,forceHalfFloat:()=>wP,fused:()=>sh,gather:()=>fu,gatherND:()=>eh,gather_util:()=>hf,getBackend:()=>ro,getGradient:()=>fa,getKernel:()=>ca,getKernelsForBackend:()=>ma,getThreadsCount:()=>xZ,gpgpu_util:()=>DL,grad:()=>Cu,grads:()=>Eu,greater:()=>mu,greaterEqual:()=>gu,ifft:()=>xd,imag:()=>yu,image:()=>fc,inTopKAsync:()=>ah,initializers:()=>bw,input:()=>Yv,io:()=>Fc,irfft:()=>wd,isFinite:()=>bu,isInf:()=>xu,isNaN:()=>wu,keep:()=>Qi,kernel_impls:()=>jm,layers:()=>Mw,leakyRelu:()=>vu,less:()=>ku,lessEqual:()=>Iu,linalg:()=>mc,linspace:()=>Su,loadGraphModel:()=>q_,loadGraphModelSync:()=>K_,loadLayersModel:()=>jv,localResponseNormalization:()=>Nu,log:()=>Tu,log1p:()=>_u,logSigmoid:()=>Lu,logSoftmax:()=>Pu,logSumExp:()=>Bu,logicalAnd:()=>Wu,logicalNot:()=>Vu,logicalOr:()=>Uu,logicalXor:()=>Gu,losses:()=>gc,lowerBound:()=>qu,matMul:()=>qo,math:()=>Qc,max:()=>Jl,maxPool:()=>Ku,maxPool3d:()=>Xu,maxPoolWithArgmax:()=>Yu,maximum:()=>Zu,mean:()=>Ju,memory:()=>Xi,meshgrid:()=>tp,metrics:()=>DN,min:()=>Ql,minimum:()=>np,mirrorPad:()=>rp,mod:()=>ap,model:()=>Kv,models:()=>YN,moments:()=>sp,movingAverage:()=>Zd,mul:()=>fo,multiRNNCell:()=>ip,multinomial:()=>op,neg:()=>Mu,nextFrame:()=>zf,norm:()=>iu,notEqual:()=>lp,oneHot:()=>up,ones:()=>ep,onesLike:()=>pp,op:()=>Bs,outerProduct:()=>dp,pad:()=>hp,pad1d:()=>cp,pad2d:()=>fp,pad3d:()=>mp,pad4d:()=>gp,pool:()=>bp,pow:()=>eu,prelu:()=>xp,print:()=>Vi,prod:()=>wp,profile:()=>Yi,raggedGather:()=>vp,raggedRange:()=>kp,raggedTensorToTensor:()=>Ip,rand:()=>Sp,randomGamma:()=>Gp,randomNormal:()=>Hp,randomStandardNormal:()=>jp,randomUniform:()=>qp,randomUniformInt:()=>Kp,range:()=>Xp,ready:()=>no,real:()=>Yp,reciprocal:()=>Zp,registerBackend:()=>oo,registerCallbackConstructor:()=>Zv,registerGradient:()=>ya,registerKernel:()=>ga,registerOp:()=>uT,regularizers:()=>ZN,relu:()=>Jp,relu6:()=>Qp,removeBackend:()=>ao,reshape:()=>Uo,reverse:()=>ed,reverse1d:()=>td,reverse2d:()=>nd,reverse3d:()=>rd,reverse4d:()=>ad,rfft:()=>kd,round:()=>sd,rsqrt:()=>id,scalar:()=>tu,scatterND:()=>Jd,scatter_util:()=>Md,searchSorted:()=>ju,selu:()=>od,separableConv2d:()=>ld,sequential:()=>Xv,serialization:()=>xc,setBackend:()=>to,setPlatform:()=>uo,setThreadsCount:()=>bZ,setWasmPath:()=>fZ,setWasmPaths:()=>mZ,setWebGLContext:()=>JM,setdiff1dAsync:()=>ud,shared:()=>hE,sigmoid:()=>Ko,sign:()=>pd,signal:()=>cc,sin:()=>dd,sinh:()=>hd,slice:()=>Xo,slice1d:()=>cd,slice2d:()=>fd,slice3d:()=>md,slice4d:()=>gd,slice_util:()=>ff,softmax:()=>yd,softplus:()=>Ou,spaceToBatchND:()=>yp,sparse:()=>yc,sparseToDense:()=>Qd,spectral:()=>hc,split:()=>vd,sqrt:()=>nu,square:()=>ru,squaredDifference:()=>Id,squeeze:()=>Sd,stack:()=>Nd,step:()=>Td,stridedSlice:()=>_d,string:()=>bc,sub:()=>zu,sum:()=>au,sumOutType:()=>fs,tan:()=>Cd,tanh:()=>Yo,tensor:()=>Us,tensor1d:()=>Ed,tensor2d:()=>$d,tensor3d:()=>Ad,tensor4d:()=>Fd,tensor5d:()=>Rd,tensor6d:()=>Dd,tensorScatterUpdate:()=>Pd,tensor_util:()=>ds,test_util:()=>Tp,tidy:()=>Zi,tile:()=>du,time:()=>eo,topk:()=>Bd,train:()=>Of,transpose:()=>Yd,truncatedNormal:()=>Wd,unique:()=>Vd,unregisterGradient:()=>xa,unregisterKernel:()=>ba,unsortedSegmentSum:()=>Ud,unstack:()=>Gd,upcastType:()=>cs,upperBound:()=>Hd,util:()=>ka,valueAndGrad:()=>$u,valueAndGrads:()=>Au,variable:()=>jd,variableGrads:()=>Fu,version:()=>kZ,version_converter:()=>X_,version_core:()=>Df,version_cpu:()=>PA,version_layers:()=>Sv,version_wasm:()=>wZ,version_webgl:()=>xP,webgl:()=>vP,webgl_util:()=>jM,where:()=>Ol,whereAsync:()=>Kd,zeros:()=>Qu,zerosLike:()=>Ll});var u=Object.create,p=Object.defineProperty,d=Object.getOwnPropertyDescriptor,h=Object.getOwnPropertyNames,c=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty,m=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),g=(e,t)=>{for(var n in t)p(e,n,{get:t[n],enumerable:!0})},y=(e,t,n)=>(n=null!=e?u(c(e)):{},((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of h(t))!f.call(e,a)&&a!==n&&p(e,a,{get:()=>t[a],enumerable:!(r=d(t,a))||r.enumerable});return e})(!t&&e&&e.__esModule?n:p(n,"default",{value:e,enumerable:!0}),e)),b=m(((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=u(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function l(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=f)return I}else{if(e<=-m)return S;if(e+1>=m)return k}return e<0?l(-e,t).neg():u(e%c|0,e/c|0,t)}function u(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=l,r.fromBits=u;var p=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,n).neg();for(var a=l(p(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var h=l(p(n,o));s=s.mul(h).add(l(u))}else s=(s=s.mul(a)).add(l(u))}return s.unsigned=t,s}function h(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?d(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=d,r.fromValue=h;var c=4294967296,f=c*c,m=f/2,g=o(1<<24),y=o(0);r.ZERO=y;var b=o(0,!0);r.UZERO=b;var x=o(1);r.ONE=x;var w=o(1,!0);r.UONE=w;var v=o(-1);r.NEG_ONE=v;var k=u(-1,2147483647,!1);r.MAX_VALUE=k;var I=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=I;var S=u(0,-2147483648,!1);r.MIN_VALUE=S;var N=r.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*c+(this.low>>>0):this.high*c+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=l(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=l(p(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),u=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return!(1&~this.low)},N.isEven=function(){return!(1&this.low)},N.equals=function(e){return a(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(a(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},N.neg=N.negate,N.add=function(e){a(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,p=0,d=0,c=0,f=0;return c+=(f+=s+(65535&e.low))>>>16,d+=(c+=r+l)>>>16,p+=(d+=n+o)>>>16,p+=t+i,u((c&=65535)<<16|(f&=65535),(p&=65535)<<16|(d&=65535),this.unsigned)},N.subtract=function(e){return a(e)||(e=h(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return y;if(a(e)||(e=h(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(S))return e.isOdd()?S:y;if(e.eq(S))return this.isOdd()?S:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,p=65535&e.high,d=e.low>>>16,c=65535&e.low,f=0,m=0,b=0,x=0;return b+=(x+=i*c)>>>16,m+=(b+=s*c)>>>16,b&=65535,m+=(b+=i*d)>>>16,f+=(m+=r*c)>>>16,m&=65535,f+=(m+=s*d)>>>16,m&=65535,f+=(m+=i*p)>>>16,f+=t*c+r*d+s*p+i*o,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(a(e)||(e=h(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return w;s=b}else{if(this.eq(S))return e.eq(x)||e.eq(v)?S:e.eq(S)?x:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?x:v:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(S))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:p(2,i-48),d=l(t),c=d.mul(e);c.isNegative()||c.gt(r);)c=(d=l(t-=o,this.unsigned)).mul(e);d.isZero()&&(d=x),s=s.add(d),r=r.sub(c)}return s},N.div=N.divide,N.modulo=function(e){return a(e)||(e=h(e)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return u(~this.low,~this.high,this.unsigned)},N.and=function(e){return a(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return a(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return a(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}})),x=m((()=>{})),w=m((()=>{})),v=m(((e,t)=>{!function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),k=m(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),I=m(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),S=m(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),N=m(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),T=m(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),_=m((()=>{})),C=m(((e,t)=>{!function(e,n,r){var a,s=256,i="random",o=r.pow(s,6),l=r.pow(2,52),u=2*l,p=255;function d(t,p,d){var y=[],b=m(f((p=1==p?{entropy:!0}:p||{}).entropy?[t,g(n)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(s):(t=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(t)),g(t)}catch(t){var r=e.navigator,i=r&&r.plugins;return[+new Date,e,i,e.screen,g(n)]}}():t,3),y),x=new h(y),w=function(){for(var e=x.g(6),t=o,n=0;e<l;)e=(e+n)*s,t*=s,n=x.g(1);for(;e>=u;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|x.g(4)},w.quick=function(){return x.g(4)/4294967296},w.double=w,m(g(x.S),n),(p.pass||d||function(e,t,n,a){return a&&(a.S&&c(a,x),e.state=function(){return c(x,{})}),n?(r[i]=e,t):e})(w,b,"global"in p?p.global:this==r,p.state)}function h(e){var t,n=e.length,r=this,a=0,i=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<s;)o[a]=a++;for(a=0;a<s;a++)o[a]=o[i=p&i+e[a%n]+(t=o[a])],o[i]=t;(r.g=function(e){for(var t,n=0,a=r.i,i=r.j,o=r.S;e--;)t=o[a=p&a+1],n=n*s+o[p&(o[a]=o[i=p&i+t])+(o[i]=t)];return r.i=a,r.j=i,n})(s)}function c(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(m(r.random(),n),"object"==typeof t&&t.exports){t.exports=d;try{a=_()}catch(e){}}else"function"==typeof define&&define.amd?define((function(){return d})):r["seed"+i]=d}("undefined"!=typeof self?self:e,[],Math)})),E=m(((e,t)=>{var n=v(),r=k(),a=I(),s=S(),i=N(),o=T(),l=C();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l})),$=m((()=>{})),A=m((()=>{})),F=m((()=>{})),R=m((()=>{})),D=m((()=>{})),M=m((()=>{})),O=m(((e,t)=>{var n,r=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(n=n||__filename),function(e){function t(){return $.buffer!=z&&K($.buffer),B}function r(){return $.buffer!=z&&K($.buffer),W}function a(){return $.buffer!=z&&K($.buffer),V}function s(){return $.buffer!=z&&K($.buffer),U}var i,o,l,u=void 0!==(e=e||{})?e:{};u.ready=new Promise((function(e,t){i=e,o=t})),"undefined"!=typeof process&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p,d,h,c=Object.assign({},u),f=[],m=(e,t)=>{throw t},g="object"==typeof window,y="function"==typeof importScripts,b="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,x=u.ENVIRONMENT_IS_PTHREAD||!1,w="";function v(e){return u.locateFile?u.locateFile(e,w):w+e}if(b){var k=A(),I=F();let e;w=y?I.dirname(w)+"/":__dirname+"/",p=(e,t)=>(e=le(e)?new URL(e):I.normalize(e),k.readFileSync(e,t?void 0:"utf8")),h=e=>{var t=p(e,!0);return t.buffer||(t=new Uint8Array(t)),t},d=(e,t,n)=>{e=le(e)?new URL(e):I.normalize(e),k.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),f=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof de))throw e})),process.on("unhandledRejection",(function(e){throw e})),m=(e,t)=>{if(ee())throw process.exitCode=e,t;(function(e){e instanceof de||C("exiting due to exception: "+e)})(t),process.exit(e)},u.inspect=function(){return"[Emscripten Module object]"};try{e=R()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=e.Worker}else(g||y)&&(y?w=self.location.href:"undefined"!=typeof document&&document.currentScript&&(w=document.currentScript.src),void 0!==n&&n&&(w=n),w=0!==w.indexOf("blob:")?w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):"",b||(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(h=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),d=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));b&&"undefined"==typeof performance&&(global.performance=D().performance);var S=console.log.bind(console),N=console.warn.bind(console);b&&(S=e=>k.writeSync(1,e+"\n"),N=e=>k.writeSync(2,e+"\n"));var T,_=u.print||S,C=u.printErr||N;Object.assign(u,c),c=null,u.arguments&&(f=u.arguments),u.thisProgram&&u.thisProgram,u.quit&&(m=u.quit),Atomics.load,Atomics.store,Atomics.compareExchange,u.wasmBinary&&(T=u.wasmBinary);var E=u.noExitRuntime||!0;"object"!=typeof WebAssembly&&ie("no native wasm support detected");var $,O,L,z,P,B,W,V,U,G=!1,H="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function j(e,t,n){for(var r=(t>>>=0)+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.buffer&&H)return H.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,a):e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function q(e,n){return(e>>>=0)?j(t(),e,n):""}function K(e){z=e,u.HEAP8=P=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAP32=W=new Int32Array(e),u.HEAPU8=B=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAPU32=V=new Uint32Array(e),u.HEAPF32=new Float32Array(e),u.HEAPF64=U=new Float64Array(e)}x&&(z=u.buffer);var X=u.INITIAL_MEMORY||16777216;if(x)$=u.wasmMemory,z=u.buffer;else if(u.wasmMemory)$=u.wasmMemory;else if(!(($=new WebAssembly.Memory({initial:X/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw C("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&C("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");$&&(z=$.buffer),X=z.byteLength,K(z);var Y,Z=[],J=[],Q=[];function ee(){return E}function te(){!x&&ye(J)}var ne,re=0,ae=null,se=null;function ie(e){u.onAbort&&u.onAbort(e),C(e="Aborted("+e+")"),G=!0,L=1,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw o(t),t}function oe(e){return e.startsWith("data:application/octet-stream;base64,")}function le(e){return e.startsWith("file://")}function ue(e){try{if(e==ne&&T)return new Uint8Array(T);if(h)return h(e);throw"both async and sync fetching of the wasm failed"}catch(e){ie(e)}}oe(ne="tfjs-backend-wasm-threaded-simd.wasm")||(ne=v(ne));var pe={};function de(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function he(e){var t=ge.pthreads[e];(function(e,t){e||ie(t)})(t),ge.returnWorkerToPool(t)}function ce(e){var t=ge.getNewWorker();if(!t)return 6;ge.runningWorkers.push(t),ge.pthreads[e.pthread_ptr]=t,t.pthread_ptr=e.pthread_ptr;var n={cmd:"run",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return t.runPthread=()=>{b&&t.ref(),t.postMessage(n,e.transferList),delete t.runPthread},t.loaded&&t.runPthread(),0}function fe(e){if(x)return Ne(1,1,e);L=e,ee()||(ge.terminateAllThreads(),u.onExit&&u.onExit(e),G=!0),m(e,new de(e))}var me=function(e,t){if(L=e,!t&&x)throw be(e),"unwind";fe(e)},ge={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){x?ge.initWorker():ge.initMainThread()},initMainThread:function(){for(var e=8;e--;)ge.allocateUnusedWorker()},initWorker:function(){E=!1},setExitStatus:function(e){L=e},terminateAllThreads:function(){for(var e of Object.values(ge.pthreads))ge.returnWorkerToPool(e);for(var e of ge.unusedWorkers)e.terminate();ge.unusedWorkers=[]},returnWorkerToPool:function(e){var t=e.pthread_ptr;delete ge.pthreads[t],ge.unusedWorkers.push(e),ge.runningWorkers.splice(ge.runningWorkers.indexOf(e),1),e.pthread_ptr=0,b&&e.unref(),He(t)},receiveObjectTransfer:function(e){},threadInitTLS:function(){ge.tlsInitFunctions.forEach((e=>e()))},loadWasmModuleToWorker:function(e,t){e.onmessage=n=>{var r=n.data,a=r.cmd;if(e.pthread_ptr&&(ge.currentProxiedOperationCallerThread=e.pthread_ptr),r.targetThread&&r.targetThread!=We()){var s=ge.pthreads[r.targetThread];return s?s.postMessage(r,r.transferList):C('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(ge.currentProxiedOperationCallerThread=void 0)}"processProxyingQueue"===a?Ie(r.queue):"spawnThread"===a?ce(r):"cleanupThread"===a?he(r.thread):"killThread"===a?function(e){var t=ge.pthreads[e];delete ge.pthreads[e],t.terminate(),He(e),ge.runningWorkers.splice(ge.runningWorkers.indexOf(t),1),t.pthread_ptr=0}(r.thread):"cancelThread"===a?function(e){ge.pthreads[e].postMessage({cmd:"cancel"})}(r.thread):"loaded"===a?(e.loaded=!0,b&&e.unref(),t&&t(e),e.runPthread&&e.runPthread()):"print"===a?_("Thread "+r.threadId+": "+r.text):"printErr"===a?C("Thread "+r.threadId+": "+r.text):"alert"===a?alert("Thread "+r.threadId+": "+r.text):"setimmediate"===r.target?e.postMessage(r):"callHandler"===a?u[r.handler](...r.args):a&&C("worker sent an unknown command "+a),ge.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw C("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},b&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){})));var r=[];for(var a of["onExit","onAbort","print","printErr"])u.hasOwnProperty(a)&&r.push(a);e.postMessage({cmd:"load",handlers:r,urlOrBlob:u.mainScriptUrlOrBlob||n,wasmMemory:$,wasmModule:O})},allocateUnusedWorker:function(){var e,t=v("tfjs-backend-wasm-threaded-simd.worker.js");e=new Worker(t),ge.unusedWorkers.push(e)},getNewWorker:function(){return 0==ge.unusedWorkers.length&&(ge.allocateUnusedWorker(),ge.loadWasmModuleToWorker(ge.unusedWorkers[0])),ge.unusedWorkers.pop()}};function ye(e){for(;e.length>0;)e.shift()(u)}function be(e){if(x)return Ne(2,0,e);try{me(e)}catch(e){!function(e){if(e instanceof de||"unwind"==e)return L;m(1,e)}(e)}}u.PThread=ge,u.establishStackSpace=function(){var e=We(),t=r()[e+52>>>2],n=r()[e+56>>>2];qe(t,t-n),Xe(t)};var xe,we=[];function ve(e,t,n,r){return x?Ne(3,1,e,t,n,r):ke(e,t,n,r)}function ke(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return C("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];if(x&&0===a.length)return ve(e,t,n,r);var s={startRoutine:n,pthread_ptr:e,arg:r,transferList:a};return x?(s.cmd="spawnThread",postMessage(s,a),0):ce(s)}function Ie(e){Atomics.store(r(),e>>2,1),We()&&Ge(e),Atomics.compareExchange(r(),e>>2,1,0)}function Se(e){Se.shown||(Se.shown={}),Se.shown[e]||(Se.shown[e]=1,b&&(e="warning: "+e),C(e))}function Ne(e,t){var n=arguments.length-2,r=arguments;return function(e){var t=Ke(),n=e();return Xe(t),n}((()=>{for(var a=n,i=Ye(8*a),o=i>>3,l=0;l<n;l++){var u=r[2+l];s()[o+l>>>0]=u}return Ue(e,a,i,t)}))}u.invokeEntryPoint=function(e,t){var n=function(e){var t=we[e];return t||(e>=we.length&&(we.length=e+1),we[e]=t=Y.get(e)),t}(e)(t);ee()?ge.setExitStatus(n):je(n)},u.executeNotifiedProxyingQueue=Ie,xe=b?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var Te=[];function _e(e){try{return $.grow(e-z.byteLength+65535>>>16),K($.buffer),1}catch(e){}}function Ce(e){return x?Ne(4,1,e):52}function Ee(e,t,n,r,a){return x?Ne(5,1,e,t,n,r,a):70}var $e=[null,[],[]];function Ae(e,t){var n=$e[e];0===t||10===t?((1===e?_:C)(j(n,0)),n.length=0):n.push(t)}function Fe(e,n,r,s){if(x)return Ne(6,1,e,n,r,s);for(var i=0,o=0;o<r;o++){var l=a()[n>>>2],u=a()[n+4>>>2];n+=8;for(var p=0;p<u;p++)Ae(e,t()[l+p>>>0]);i+=u}return a()[s>>>2]=i,0}function Re(e){return u["_"+e]}function De(e,t){($.buffer!=z&&K($.buffer),P).set(e,t>>>0)}function Me(e,n,r,a,s){var i={string:e=>{var n=0;if(null!=e&&0!==e){var r=1+(e.length<<2);!function(e,n,r){!function(e,t,n,r){if(!(r>0))return 0;n>>>=0;for(var a=n+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++>>>0]=i}else if(i<=2047){if(n+1>=a)break;t[n++>>>0]=192|i>>6,t[n++>>>0]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++>>>0]=224|i>>12,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}else{if(n+3>=a)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}}t[n>>>0]=0}(e,t(),n,r)}(e,n=Ye(r),r)}return n},array:e=>{var t=Ye(e.length);return De(e,t),t}},o=Re(e),l=[],u=0;if(a)for(var p=0;p<a.length;p++){var d=i[r[p]];d?(0===u&&(u=Ke()),l[p]=d(a[p])):l[p]=a[p]}var h,c=o.apply(null,l);return h=c,0!==u&&Xe(u),c=function(e){return"string"===n?q(e):"boolean"===n?!!e:e}(h),c}ge.init();var Oe,Le,ze,Pe=[null,fe,be,ve,Ce,Ee,Fe],Be={__emscripten_init_main_thread_js:function(e){Ve(e,!y,1,!g),ge.threadInitTLS()},__emscripten_thread_cleanup:function(e){x?postMessage({cmd:"cleanupThread",thread:e}):he(e)},__pthread_create_js:ke,_emscripten_default_pthread_stack_size:function(){return 65536},_emscripten_get_now_is_monotonic:function(){return!0},_emscripten_notify_task_queue:function(e,t,n,r){if(e==t)setTimeout((()=>Ie(r)));else if(x)postMessage({targetThread:e,cmd:"processProxyingQueue",queue:r});else{var a=ge.pthreads[e];if(!a)return;a.postMessage({cmd:"processProxyingQueue",queue:r})}return 1},_emscripten_set_offscreencanvas_size:function(e,t,n){return-1},abort:function(){ie("")},emscripten_check_blocking_allowed:function(){b||y||Se("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_date_now:function(){return Date.now()},emscripten_get_heap_max:function(){return 4294901760},emscripten_get_now:xe,emscripten_memcpy_big:function(e,n,r){t().copyWithin(e>>>0,n>>>0,n+r>>>0)},emscripten_num_logical_cores:function(){return b?M().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){Te.length=t;for(var r=n>>3,a=0;a<t;a++)Te[a]=s()[r+a>>>0];return(e<0?pe[-e-1]:Pe[e]).apply(null,Te)},emscripten_resize_heap:function(e){var n=t().length;if((e>>>=0)<=n)return!1;var r,a,s=4294901760;if(e>s)return!1;for(var i=1;i<=4;i*=2){var o=n*(1+.2/i);if(o=Math.min(o,e+100663296),_e(Math.min(s,(r=Math.max(e,o))+((a=65536)-r%a)%a)))return!0}return!1},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},exit:me,fd_close:Ce,fd_seek:Ee,fd_write:Fe,memory:$||u.wasmMemory},We=(function(){var e={env:Be,wasi_snapshot_preview1:Be};function t(e,t){var n=e.exports;if(u.asm=n,function(e){ge.tlsInitFunctions.push(e)}(u.asm._emscripten_tls_init),Y=u.asm.__indirect_function_table,function(e){J.unshift(e)}(u.asm.__wasm_call_ctors),O=t,!x){var r=ge.unusedWorkers.length;ge.unusedWorkers.forEach((function(e){ge.loadWasmModuleToWorker(e,(function(){--r||function(){if(re--,u.monitorRunDependencies&&u.monitorRunDependencies(re),0==re&&(null!==ae&&(clearInterval(ae),ae=null),se)){var e=se;se=null,e()}}()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return function(){if(!T&&(g||y)){if("function"==typeof fetch&&!le(ne))return fetch(ne,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ne+"'";return e.arrayBuffer()})).catch((function(){return ue(ne)}));if(d)return new Promise((function(e,t){d(ne,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return ue(ne)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){C("failed to asynchronously prepare wasm: "+e),ie(e)}))}if(x||(re++,u.monitorRunDependencies&&u.monitorRunDependencies(re)),u.instantiateWasm)try{return u.instantiateWasm(e,t)}catch(e){C("Module.instantiateWasm callback failed with error: "+e),o(e)}(T||"function"!=typeof WebAssembly.instantiateStreaming||oe(ne)||le(ne)||b||"function"!=typeof fetch?r(n):fetch(ne,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return C("wasm streaming compile failed: "+e),C("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(o)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.__wasm_call_ctors).apply(null,arguments)},u._init=function(){return(u._init=u.asm.init).apply(null,arguments)},u._init_with_threads_count=function(){return(u._init_with_threads_count=u.asm.init_with_threads_count).apply(null,arguments)},u._get_threads_count=function(){return(u._get_threads_count=u.asm.get_threads_count).apply(null,arguments)},u._register_tensor=function(){return(u._register_tensor=u.asm.register_tensor).apply(null,arguments)},u._dispose_data=function(){return(u._dispose_data=u.asm.dispose_data).apply(null,arguments)},u._dispose=function(){return(u._dispose=u.asm.dispose).apply(null,arguments)},u._Abs=function(){return(u._Abs=u.asm.Abs).apply(null,arguments)},u._Acos=function(){return(u._Acos=u.asm.Acos).apply(null,arguments)},u._Acosh=function(){return(u._Acosh=u.asm.Acosh).apply(null,arguments)},u._Add=function(){return(u._Add=u.asm.Add).apply(null,arguments)},u._AddN=function(){return(u._AddN=u.asm.AddN).apply(null,arguments)},u._All=function(){return(u._All=u.asm.All).apply(null,arguments)},u._Any=function(){return(u._Any=u.asm.Any).apply(null,arguments)},u._ArgMax=function(){return(u._ArgMax=u.asm.ArgMax).apply(null,arguments)},u._ArgMin=function(){return(u._ArgMin=u.asm.ArgMin).apply(null,arguments)},u._Asin=function(){return(u._Asin=u.asm.Asin).apply(null,arguments)},u._Asinh=function(){return(u._Asinh=u.asm.Asinh).apply(null,arguments)},u._Atan=function(){return(u._Atan=u.asm.Atan).apply(null,arguments)},u._Atan2=function(){return(u._Atan2=u.asm.Atan2).apply(null,arguments)},u._Atanh=function(){return(u._Atanh=u.asm.Atanh).apply(null,arguments)},u._AvgPool=function(){return(u._AvgPool=u.asm.AvgPool).apply(null,arguments)},u._AvgPool3D=function(){return(u._AvgPool3D=u.asm.AvgPool3D).apply(null,arguments)},u._AvgPool3DGrad=function(){return(u._AvgPool3DGrad=u.asm.AvgPool3DGrad).apply(null,arguments)},u._AvgPoolGrad=function(){return(u._AvgPoolGrad=u.asm.AvgPoolGrad).apply(null,arguments)},u._BatchMatMul=function(){return(u._BatchMatMul=u.asm.BatchMatMul).apply(null,arguments)},u._Bincount=function(){return(u._Bincount=u.asm.Bincount).apply(null,arguments)},u._BitwiseAnd=function(){return(u._BitwiseAnd=u.asm.BitwiseAnd).apply(null,arguments)},u._Ceil=function(){return(u._Ceil=u.asm.Ceil).apply(null,arguments)},u._ClipByValue=function(){return(u._ClipByValue=u.asm.ClipByValue).apply(null,arguments)},u._Conv2D=function(){return(u._Conv2D=u.asm.Conv2D).apply(null,arguments)},u._Conv2DBackpropInput=function(){return(u._Conv2DBackpropInput=u.asm.Conv2DBackpropInput).apply(null,arguments)},u._Conv3D=function(){return(u._Conv3D=u.asm.Conv3D).apply(null,arguments)},u._Conv3DBackpropFilterV2=function(){return(u._Conv3DBackpropFilterV2=u.asm.Conv3DBackpropFilterV2).apply(null,arguments)},u._Conv3DBackpropInputV2=function(){return(u._Conv3DBackpropInputV2=u.asm.Conv3DBackpropInputV2).apply(null,arguments)},u._Cos=function(){return(u._Cos=u.asm.Cos).apply(null,arguments)},u._Cosh=function(){return(u._Cosh=u.asm.Cosh).apply(null,arguments)},u._CropAndResize=function(){return(u._CropAndResize=u.asm.CropAndResize).apply(null,arguments)},u._Cumprod=function(){return(u._Cumprod=u.asm.Cumprod).apply(null,arguments)},u._Cumsum=function(){return(u._Cumsum=u.asm.Cumsum).apply(null,arguments)},u._DenseBincount=function(){return(u._DenseBincount=u.asm.DenseBincount).apply(null,arguments)},u._DepthToSpace=function(){return(u._DepthToSpace=u.asm.DepthToSpace).apply(null,arguments)},u._DepthwiseConv2dNative=function(){return(u._DepthwiseConv2dNative=u.asm.DepthwiseConv2dNative).apply(null,arguments)},u._Diag=function(){return(u._Diag=u.asm.Diag).apply(null,arguments)},u._Dilation2D=function(){return(u._Dilation2D=u.asm.Dilation2D).apply(null,arguments)},u._Dilation2DBackpropFilter=function(){return(u._Dilation2DBackpropFilter=u.asm.Dilation2DBackpropFilter).apply(null,arguments)},u._Dilation2DBackpropInput=function(){return(u._Dilation2DBackpropInput=u.asm.Dilation2DBackpropInput).apply(null,arguments)},u._Elu=function(){return(u._Elu=u.asm.Elu).apply(null,arguments)},u._EluGrad=function(){return(u._EluGrad=u.asm.EluGrad).apply(null,arguments)},u._Equal=function(){return(u._Equal=u.asm.Equal).apply(null,arguments)},u._Erf=function(){return(u._Erf=u.asm.Erf).apply(null,arguments)},u._Exp=function(){return(u._Exp=u.asm.Exp).apply(null,arguments)},u._Expm1=function(){return(u._Expm1=u.asm.Expm1).apply(null,arguments)},u._FlipLeftRight=function(){return(u._FlipLeftRight=u.asm.FlipLeftRight).apply(null,arguments)},u._Floor=function(){return(u._Floor=u.asm.Floor).apply(null,arguments)},u._FloorDiv=function(){return(u._FloorDiv=u.asm.FloorDiv).apply(null,arguments)},u._FusedBatchNorm=function(){return(u._FusedBatchNorm=u.asm.FusedBatchNorm).apply(null,arguments)},u._FusedConv2D=function(){return(u._FusedConv2D=u.asm.FusedConv2D).apply(null,arguments)},u._FusedDepthwiseConv2D=function(){return(u._FusedDepthwiseConv2D=u.asm.FusedDepthwiseConv2D).apply(null,arguments)},u._Gather=function(){return(u._Gather=u.asm.Gather).apply(null,arguments)},u._GatherNd=function(){return(u._GatherNd=u.asm.GatherNd).apply(null,arguments)},u._Greater=function(){return(u._Greater=u.asm.Greater).apply(null,arguments)},u._GreaterEqual=function(){return(u._GreaterEqual=u.asm.GreaterEqual).apply(null,arguments)},u._IsFinite=function(){return(u._IsFinite=u.asm.IsFinite).apply(null,arguments)},u._IsInf=function(){return(u._IsInf=u.asm.IsInf).apply(null,arguments)},u._IsNan=function(){return(u._IsNan=u.asm.IsNan).apply(null,arguments)},u._LRN=function(){return(u._LRN=u.asm.LRN).apply(null,arguments)},u._LRNGrad=function(){return(u._LRNGrad=u.asm.LRNGrad).apply(null,arguments)},u._LeakyRelu=function(){return(u._LeakyRelu=u.asm.LeakyRelu).apply(null,arguments)},u._Less=function(){return(u._Less=u.asm.Less).apply(null,arguments)},u._LessEqual=function(){return(u._LessEqual=u.asm.LessEqual).apply(null,arguments)},u._LinSpace=function(){return(u._LinSpace=u.asm.LinSpace).apply(null,arguments)},u._Log=function(){return(u._Log=u.asm.Log).apply(null,arguments)},u._Log1p=function(){return(u._Log1p=u.asm.Log1p).apply(null,arguments)},u._LogicalAnd=function(){return(u._LogicalAnd=u.asm.LogicalAnd).apply(null,arguments)},u._LogicalNot=function(){return(u._LogicalNot=u.asm.LogicalNot).apply(null,arguments)},u._LogicalOr=function(){return(u._LogicalOr=u.asm.LogicalOr).apply(null,arguments)},u._LogicalXor=function(){return(u._LogicalXor=u.asm.LogicalXor).apply(null,arguments)},u._Max=function(){return(u._Max=u.asm.Max).apply(null,arguments)},u._MaxPool=function(){return(u._MaxPool=u.asm.MaxPool).apply(null,arguments)},u._MaxPool3D=function(){return(u._MaxPool3D=u.asm.MaxPool3D).apply(null,arguments)},u._MaxPool3DGrad=function(){return(u._MaxPool3DGrad=u.asm.MaxPool3DGrad).apply(null,arguments)},u._MaxPoolGrad=function(){return(u._MaxPoolGrad=u.asm.MaxPoolGrad).apply(null,arguments)},u._MaxPoolWithArgmax=function(){return(u._MaxPoolWithArgmax=u.asm.MaxPoolWithArgmax).apply(null,arguments)},u._Maximum=function(){return(u._Maximum=u.asm.Maximum).apply(null,arguments)},u._Mean=function(){return(u._Mean=u.asm.Mean).apply(null,arguments)},u._Min=function(){return(u._Min=u.asm.Min).apply(null,arguments)},u._Minimum=function(){return(u._Minimum=u.asm.Minimum).apply(null,arguments)},u._MirrorPad=function(){return(u._MirrorPad=u.asm.MirrorPad).apply(null,arguments)},u._Mod=function(){return(u._Mod=u.asm.Mod).apply(null,arguments)},u._Multinomial=function(){return(u._Multinomial=u.asm.Multinomial).apply(null,arguments)},u._Multiply=function(){return(u._Multiply=u.asm.Multiply).apply(null,arguments)},u._Neg=function(){return(u._Neg=u.asm.Neg).apply(null,arguments)},u._NonMaxSuppressionV3=function(){return(u._NonMaxSuppressionV3=u.asm.NonMaxSuppressionV3).apply(null,arguments)},u._NonMaxSuppressionV4=function(){return(u._NonMaxSuppressionV4=u.asm.NonMaxSuppressionV4).apply(null,arguments)},u._NonMaxSuppressionV5=function(){return(u._NonMaxSuppressionV5=u.asm.NonMaxSuppressionV5).apply(null,arguments)},u._NotEqual=function(){return(u._NotEqual=u.asm.NotEqual).apply(null,arguments)},u._OneHot=function(){return(u._OneHot=u.asm.OneHot).apply(null,arguments)},u._PadV2=function(){return(u._PadV2=u.asm.PadV2).apply(null,arguments)},u._Pow=function(){return(u._Pow=u.asm.Pow).apply(null,arguments)},u._Prelu=function(){return(u._Prelu=u.asm.Prelu).apply(null,arguments)},u._Prod=function(){return(u._Prod=u.asm.Prod).apply(null,arguments)},u._RealDiv=function(){return(u._RealDiv=u.asm.RealDiv).apply(null,arguments)},u._Reciprocal=function(){return(u._Reciprocal=u.asm.Reciprocal).apply(null,arguments)},u._Relu=function(){return(u._Relu=u.asm.Relu).apply(null,arguments)},u._Relu6=function(){return(u._Relu6=u.asm.Relu6).apply(null,arguments)},u._ResizeBilinear=function(){return(u._ResizeBilinear=u.asm.ResizeBilinear).apply(null,arguments)},u._ResizeBilinearGrad=function(){return(u._ResizeBilinearGrad=u.asm.ResizeBilinearGrad).apply(null,arguments)},u._ResizeNearestNeighbor=function(){return(u._ResizeNearestNeighbor=u.asm.ResizeNearestNeighbor).apply(null,arguments)},u._ResizeNearestNeighborGrad=function(){return(u._ResizeNearestNeighborGrad=u.asm.ResizeNearestNeighborGrad).apply(null,arguments)},u._Reverse=function(){return(u._Reverse=u.asm.Reverse).apply(null,arguments)},u._RotateWithOffset=function(){return(u._RotateWithOffset=u.asm.RotateWithOffset).apply(null,arguments)},u._Round=function(){return(u._Round=u.asm.Round).apply(null,arguments)},u._Rsqrt=function(){return(u._Rsqrt=u.asm.Rsqrt).apply(null,arguments)},u._ScatterNd=function(){return(u._ScatterNd=u.asm.ScatterNd).apply(null,arguments)},u._SearchSorted=function(){return(u._SearchSorted=u.asm.SearchSorted).apply(null,arguments)},u._SelectV2=function(){return(u._SelectV2=u.asm.SelectV2).apply(null,arguments)},u._Selu=function(){return(u._Selu=u.asm.Selu).apply(null,arguments)},u._Sigmoid=function(){return(u._Sigmoid=u.asm.Sigmoid).apply(null,arguments)},u._Sign=function(){return(u._Sign=u.asm.Sign).apply(null,arguments)},u._Sin=function(){return(u._Sin=u.asm.Sin).apply(null,arguments)},u._Sinh=function(){return(u._Sinh=u.asm.Sinh).apply(null,arguments)},u._Softmax=function(){return(u._Softmax=u.asm.Softmax).apply(null,arguments)},u._Softplus=function(){return(u._Softplus=u.asm.Softplus).apply(null,arguments)},u._SparseFillEmptyRows=function(){return(u._SparseFillEmptyRows=u.asm.SparseFillEmptyRows).apply(null,arguments)},u._SparseReshape=function(){return(u._SparseReshape=u.asm.SparseReshape).apply(null,arguments)},u._SparseSegmentReduction=function(){return(u._SparseSegmentReduction=u.asm.SparseSegmentReduction).apply(null,arguments)},u._SparseToDense=function(){return(u._SparseToDense=u.asm.SparseToDense).apply(null,arguments)},u._Sqrt=function(){return(u._Sqrt=u.asm.Sqrt).apply(null,arguments)},u._Square=function(){return(u._Square=u.asm.Square).apply(null,arguments)},u._SquaredDifference=function(){return(u._SquaredDifference=u.asm.SquaredDifference).apply(null,arguments)},u._Step=function(){return(u._Step=u.asm.Step).apply(null,arguments)},u._StridedSlice=function(){return(u._StridedSlice=u.asm.StridedSlice).apply(null,arguments)},u._Sub=function(){return(u._Sub=u.asm.Sub).apply(null,arguments)},u._Sum=function(){return(u._Sum=u.asm.Sum).apply(null,arguments)},u._Tan=function(){return(u._Tan=u.asm.Tan).apply(null,arguments)},u._Tanh=function(){return(u._Tanh=u.asm.Tanh).apply(null,arguments)},u._TensorScatterUpdate=function(){return(u._TensorScatterUpdate=u.asm.TensorScatterUpdate).apply(null,arguments)},u._Tile=function(){return(u._Tile=u.asm.Tile).apply(null,arguments)},u._TopK=function(){return(u._TopK=u.asm.TopK).apply(null,arguments)},u._Transform=function(){return(u._Transform=u.asm.Transform).apply(null,arguments)},u._Transpose=function(){return(u._Transpose=u.asm.Transpose).apply(null,arguments)},u.__FusedMatMul=function(){return(u.__FusedMatMul=u.asm._FusedMatMul).apply(null,arguments)},u._malloc=function(){return(u._malloc=u.asm.malloc).apply(null,arguments)},u._free=function(){return(u._free=u.asm.free).apply(null,arguments)},u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm._emscripten_tls_init).apply(null,arguments)},u._pthread_self=function(){return(We=u._pthread_self=u.asm.pthread_self).apply(null,arguments)}),Ve=(u.___errno_location=function(){return(u.___errno_location=u.asm.__errno_location).apply(null,arguments)},u.__emscripten_thread_init=function(){return(Ve=u.__emscripten_thread_init=u.asm._emscripten_thread_init).apply(null,arguments)}),Ue=(u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm._emscripten_thread_crashed).apply(null,arguments)},u._emscripten_main_thread_process_queued_calls=function(){return(u._emscripten_main_thread_process_queued_calls=u.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},u._emscripten_main_browser_thread_id=function(){return(u._emscripten_main_browser_thread_id=u.asm.emscripten_main_browser_thread_id).apply(null,arguments)},u._emscripten_run_in_main_runtime_thread_js=function(){return(Ue=u._emscripten_run_in_main_runtime_thread_js=u.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)}),Ge=(u._emscripten_dispatch_to_thread_=function(){return(u._emscripten_dispatch_to_thread_=u.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},u.__emscripten_proxy_execute_task_queue=function(){return(Ge=u.__emscripten_proxy_execute_task_queue=u.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)}),He=u.__emscripten_thread_free_data=function(){return(He=u.__emscripten_thread_free_data=u.asm._emscripten_thread_free_data).apply(null,arguments)},je=u.__emscripten_thread_exit=function(){return(je=u.__emscripten_thread_exit=u.asm._emscripten_thread_exit).apply(null,arguments)},qe=u._emscripten_stack_set_limits=function(){return(qe=u._emscripten_stack_set_limits=u.asm.emscripten_stack_set_limits).apply(null,arguments)},Ke=u.stackSave=function(){return(Ke=u.stackSave=u.asm.stackSave).apply(null,arguments)},Xe=u.stackRestore=function(){return(Xe=u.stackRestore=u.asm.stackRestore).apply(null,arguments)},Ye=u.stackAlloc=function(){return(Ye=u.stackAlloc=u.asm.stackAlloc).apply(null,arguments)};function Ze(e){if(e=e||f,!(re>0)){if(x)return i(u),te(),void startWorker(u);(function(){if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)e=u.preRun.shift(),Z.unshift(e);var e;ye(Z)})(),re>0||(u.setStatus?(u.setStatus("Running..."),setTimeout((function(){setTimeout((function(){u.setStatus("")}),1),t()}),1)):t())}function t(){Oe||(Oe=!0,u.calledRun=!0,!G&&(te(),i(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),function(){if(!x){if(u.postRun)for("function"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;)e=u.postRun.shift(),Q.unshift(e);ye(Q)}var e}()))}}if(u.dynCall_iijjiiii=function(){return(u.dynCall_iijjiiii=u.asm.dynCall_iijjiiii).apply(null,arguments)},u.dynCall_jiji=function(){return(u.dynCall_jiji=u.asm.dynCall_jiji).apply(null,arguments)},u.keepRuntimeAlive=ee,u.wasmMemory=$,u.cwrap=function(e,t,n,r){var a=(n=n||[]).every((e=>"number"===e||"boolean"===e));return"string"!==t&&a&&!r?Re(e):function(){return Me(e,t,n,arguments)}},u.ExitStatus=de,u.PThread=ge,se=function e(){Oe||Ze(),Oe||(se=e)},u.preInit)for("function"==typeof u.preInit&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();if(Ze(),l&&(Le={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!l.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!l.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)ze=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");ze=e}if(Le){var Je=ze._dispose;ze._dispose=function(){Je(),Le.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Le.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&define.amd?define([],(function(){return r})):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=r)})),L=m(((e,t)=>{t.exports.wasmWorkerContents='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};'})),z=m(((e,t)=>{var n,r=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(n=n||__filename),function(e){var t,r,a,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,n){t=e,r=n})),"undefined"!=typeof process&&process.listeners&&(a={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i,o,l,u=Object.assign({},s),p=[],d="object"==typeof window,h="function"==typeof importScripts,c="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,f="";if(c){var m=A(),g=F();f=h?g.dirname(f)+"/":__dirname+"/",i=(e,t)=>(e=V(e)?new URL(e):g.normalize(e),m.readFileSync(e,t?void 0:"utf8")),l=e=>{var t=i(e,!0);return t.buffer||(t=new Uint8Array(t)),t},o=(e,t,n)=>{e=V(e)?new URL(e):g.normalize(e),m.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),p=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof G))throw e})),process.on("unhandledRejection",(function(e){throw e})),s.inspect=function(){return"[Emscripten Module object]"}}else(d||h)&&(h?f=self.location.href:"undefined"!=typeof document&&document.currentScript&&(f=document.currentScript.src),n&&(f=n),f=0!==f.indexOf("blob:")?f.substr(0,f.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},h&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var y,b=s.print||console.log.bind(console),x=s.printErr||console.warn.bind(console);Object.assign(s,u),u=null,s.arguments&&(p=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(y=s.wasmBinary);s.noExitRuntime;"object"!=typeof WebAssembly&&B("no native wasm support detected");var w,v,k,I,S,N=!1,T="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function _(e,t,n){for(var r=(t>>>=0)+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.buffer&&T)return T.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function C(e,t){return(e>>>=0)?_(I,e,t):""}function E(e){v=e,s.HEAP8=k=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=new Int32Array(e),s.HEAPU8=I=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=S=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}s.INITIAL_MEMORY;var $,R,D=[],M=[],O=[],L=0,z=null,P=null;function B(e){s.onAbort&&s.onAbort(e),x(e="Aborted("+e+")"),N=!0,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw r(t),t}function W(e){return e.startsWith("data:application/octet-stream;base64,")}function V(e){return e.startsWith("file://")}function U(e){try{if(e==$&&y)return new Uint8Array(y);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}catch(e){B(e)}}function G(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function H(e){for(;e.length>0;)e.shift()(s)}function j(e){try{return w.grow(e-v.byteLength+65535>>>16),E(w.buffer),1}catch(e){}}W($="tfjs-backend-wasm.wasm")||(R=$,$=s.locateFile?s.locateFile(R,f):f+R);var q=[null,[],[]];function K(e,t){var n=q[e];0===t||10===t?((1===e?b:x)(_(n,0)),n.length=0):n.push(t)}function X(e){return s["_"+e]}function Y(e,t,n,r,a){var s={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,r){if(!(r>0))return 0;n>>>=0;for(var a=n+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++>>>0]=i}else if(i<=2047){if(n+1>=a)break;t[n++>>>0]=192|i>>6,t[n++>>>0]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++>>>0]=224|i>>12,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}else{if(n+3>=a)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}}t[n>>>0]=0}(e,I,t,n)}(e,t=re(n),n)}return t},array:e=>{var t=re(e.length);return function(e,t){k.set(e,t>>>0)}(e,t),t}},i=X(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var p=s[n[u]];p?(0===l&&(l=te()),o[u]=p(r[u])):o[u]=r[u]}var d,h=i.apply(null,o);return d=h,0!==l&&ne(l),h=function(e){return"string"===t?C(e):"boolean"===t?!!e:e}(d),h}var Z,J,Q,ee={abort:function(){B("")},emscripten_get_heap_max:function(){return 4294901760},emscripten_memcpy_big:function(e,t,n){I.copyWithin(e>>>0,t>>>0,t+n>>>0)},emscripten_resize_heap:function(e){var t,n,r=I.length,a=4294901760;if((e>>>=0)>a)return!1;for(var s=1;s<=4;s*=2){var i=r*(1+.2/s);if(i=Math.min(i,e+100663296),j(Math.min(a,(t=Math.max(e,i))+((n=65536)-t%n)%n)))return!0}return!1},fd_close:function(e){return 52},fd_seek:function(e,t,n,r,a){return 70},fd_write:function(e,t,n,r){for(var a=0,s=0;s<n;s++){var i=S[t>>>2],o=S[t+4>>>2];t+=8;for(var l=0;l<o;l++)K(e,I[i+l>>>0]);a+=o}return S[r>>>2]=a,0}},te=(function(){var e={env:ee,wasi_snapshot_preview1:ee};function t(e,t){var n=e.exports;s.asm=n,E((w=s.asm.memory).buffer),s.asm.__indirect_function_table,function(e){M.unshift(e)}(s.asm.__wasm_call_ctors),function(){if(L--,s.monitorRunDependencies&&s.monitorRunDependencies(L),0==L&&(null!==z&&(clearInterval(z),z=null),P)){var e=P;P=null,e()}}()}function n(e){t(e.instance)}function a(t){return function(){if(!y&&(d||h)){if("function"==typeof fetch&&!V($))return fetch($,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+$+"'";return e.arrayBuffer()})).catch((function(){return U($)}));if(o)return new Promise((function(e,t){o($,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return U($)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){x("failed to asynchronously prepare wasm: "+e),B(e)}))}if(L++,s.monitorRunDependencies&&s.monitorRunDependencies(L),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){x("Module.instantiateWasm callback failed with error: "+e),r(e)}(y||"function"!=typeof WebAssembly.instantiateStreaming||W($)||V($)||c||"function"!=typeof fetch?a(n):fetch($,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return x("wasm streaming compile failed: "+e),x("falling back to ArrayBuffer instantiation"),a(n)}))}))).catch(r)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Acos=function(){return(s._Acos=s.asm.Acos).apply(null,arguments)},s._Acosh=function(){return(s._Acosh=s.asm.Acosh).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._ArgMin=function(){return(s._ArgMin=s.asm.ArgMin).apply(null,arguments)},s._Asin=function(){return(s._Asin=s.asm.Asin).apply(null,arguments)},s._Asinh=function(){return(s._Asinh=s.asm.Asinh).apply(null,arguments)},s._Atan=function(){return(s._Atan=s.asm.Atan).apply(null,arguments)},s._Atan2=function(){return(s._Atan2=s.asm.Atan2).apply(null,arguments)},s._Atanh=function(){return(s._Atanh=s.asm.Atanh).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._AvgPool3D=function(){return(s._AvgPool3D=s.asm.AvgPool3D).apply(null,arguments)},s._AvgPool3DGrad=function(){return(s._AvgPool3DGrad=s.asm.AvgPool3DGrad).apply(null,arguments)},s._AvgPoolGrad=function(){return(s._AvgPoolGrad=s.asm.AvgPoolGrad).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Bincount=function(){return(s._Bincount=s.asm.Bincount).apply(null,arguments)},s._BitwiseAnd=function(){return(s._BitwiseAnd=s.asm.BitwiseAnd).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Conv3D=function(){return(s._Conv3D=s.asm.Conv3D).apply(null,arguments)},s._Conv3DBackpropFilterV2=function(){return(s._Conv3DBackpropFilterV2=s.asm.Conv3DBackpropFilterV2).apply(null,arguments)},s._Conv3DBackpropInputV2=function(){return(s._Conv3DBackpropInputV2=s.asm.Conv3DBackpropInputV2).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DenseBincount=function(){return(s._DenseBincount=s.asm.DenseBincount).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Diag=function(){return(s._Diag=s.asm.Diag).apply(null,arguments)},s._Dilation2D=function(){return(s._Dilation2D=s.asm.Dilation2D).apply(null,arguments)},s._Dilation2DBackpropFilter=function(){return(s._Dilation2DBackpropFilter=s.asm.Dilation2DBackpropFilter).apply(null,arguments)},s._Dilation2DBackpropInput=function(){return(s._Dilation2DBackpropInput=s.asm.Dilation2DBackpropInput).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._EluGrad=function(){return(s._EluGrad=s.asm.EluGrad).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Erf=function(){return(s._Erf=s.asm.Erf).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._Expm1=function(){return(s._Expm1=s.asm.Expm1).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._IsFinite=function(){return(s._IsFinite=s.asm.IsFinite).apply(null,arguments)},s._IsInf=function(){return(s._IsInf=s.asm.IsInf).apply(null,arguments)},s._IsNan=function(){return(s._IsNan=s.asm.IsNan).apply(null,arguments)},s._LRN=function(){return(s._LRN=s.asm.LRN).apply(null,arguments)},s._LRNGrad=function(){return(s._LRNGrad=s.asm.LRNGrad).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._LinSpace=function(){return(s._LinSpace=s.asm.LinSpace).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._Log1p=function(){return(s._Log1p=s.asm.Log1p).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._LogicalNot=function(){return(s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},s._LogicalOr=function(){return(s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},s._LogicalXor=function(){return(s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._MaxPool3D=function(){return(s._MaxPool3D=s.asm.MaxPool3D).apply(null,arguments)},s._MaxPool3DGrad=function(){return(s._MaxPool3DGrad=s.asm.MaxPool3DGrad).apply(null,arguments)},s._MaxPoolGrad=function(){return(s._MaxPoolGrad=s.asm.MaxPoolGrad).apply(null,arguments)},s._MaxPoolWithArgmax=function(){return(s._MaxPoolWithArgmax=s.asm.MaxPoolWithArgmax).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Mod=function(){return(s._Mod=s.asm.Mod).apply(null,arguments)},s._Multinomial=function(){return(s._Multinomial=s.asm.Multinomial).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Reciprocal=function(){return(s._Reciprocal=s.asm.Reciprocal).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._ResizeBilinearGrad=function(){return(s._ResizeBilinearGrad=s.asm.ResizeBilinearGrad).apply(null,arguments)},s._ResizeNearestNeighbor=function(){return(s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},s._ResizeNearestNeighborGrad=function(){return(s._ResizeNearestNeighborGrad=s.asm.ResizeNearestNeighborGrad).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SearchSorted=function(){return(s._SearchSorted=s.asm.SearchSorted).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Selu=function(){return(s._Selu=s.asm.Selu).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sign=function(){return(s._Sign=s.asm.Sign).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Sinh=function(){return(s._Sinh=s.asm.Sinh).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._Softplus=function(){return(s._Softplus=s.asm.Softplus).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._SparseToDense=function(){return(s._SparseToDense=s.asm.SparseToDense).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._TensorScatterUpdate=function(){return(s._TensorScatterUpdate=s.asm.TensorScatterUpdate).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)},s.stackSave=function(){return(te=s.stackSave=s.asm.stackSave).apply(null,arguments)}),ne=s.stackRestore=function(){return(ne=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},re=s.stackAlloc=function(){return(re=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};function ae(e){function n(){Z||(Z=!0,s.calledRun=!0,!N&&(H(M),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),function(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)e=s.postRun.shift(),O.unshift(e);var e;H(O)}()))}e=e||p,L>0||(function(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)e=s.preRun.shift(),D.unshift(e);var e;H(D)}(),L>0)||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n())}if(s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)},s.cwrap=function(e,t,n,r){var a=(n=n||[]).every((e=>"number"===e||"boolean"===e));return"string"!==t&&a&&!r?X(e):function(){return Y(e,t,n,arguments)}},P=function e(){Z||ae(),Z||(P=e)},s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(ae(),a&&(J={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!a.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!a.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)Q=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");Q=WasmBackendModuleThreadedSimd}if(J){var se=Q._dispose;Q._dispose=function(){se(),J.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),J.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&define.amd?define([],(function(){return r})):"object"==typeof e&&(e.WasmBackendModule=r)})),P=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},B=class{refCount(e){return W("refCount")}incRef(e){return W("incRef")}timerAvailable(){return!0}time(e){return W("time")}read(e){return W("read")}readSync(e){return W("readSync")}readToGPU(e,t){return W("readToGPU")}numDataIds(){return W("numDataIds")}disposeData(e,t){return W("disposeData")}write(e,t,n){return W("write")}move(e,t,n,r,a){return W("move")}createTensorFromGPUData(e,t,n){return W("createTensorFromGPUData")}memory(){return W("memory")}floatPrecision(){return W("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return W("dispose")}};function W(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function V(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,j(e,t,n)}function U(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,j(e,n,r),j(t,n,r)}function G(e,t,n){return Math.max(e,Math.min(t,n))}function H(e){return e%2==0?e:e+1}function j(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function q(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function K(e,t){let n=Math.random();return t*n+(1-n)*e}function X(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function Y(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Z(e,t,n=""){Y(ne(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function J(e){Y(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Q(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ee(e){return 0===e.length}function te(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function ne(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function re(e){return e%1==0}function ae(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function se(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ie(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return V(t),t}function oe(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function le(e,t=e=>0,n,r){return new Promise(((a,s)=>{let i=0,o=()=>{if(e())return void a();i++;let l=t(i);null!=n&&i>=n?s():null!=r?r(o,l):setTimeout(o,l)};o()}))}function ue(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function pe(e,t){let n=t.length;return Y((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),Y(e.every((e=>re(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function de(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:pe(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function he(e,t){return ce(e,t)}function ce(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function fe(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function me(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function ge(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function ye(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function be(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function xe(e){return"string"==typeof e||e instanceof String}function we(e){return"boolean"==typeof e}function ve(e){return"number"==typeof e}function ke(e){return Array.isArray(e)?ke(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":ve(e)?"float32":xe(e)?"string":we(e)?"bool":"float32"}function Ie(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Se(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Ne(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Te(e,t,n,r=!1){let a=new Array;if(1===t.length){let s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{let s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=Te(e+t*o,i,n,r)}return a}function _e(e,t,n=!1){if(0===e.length)return t[0];let r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Te(0,e,t,n)}function Ce(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function Ee(e,t){let n=$e(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function $e(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Ae(e,t){let n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return _e(e,new Float32Array(n));if("int32"===t)return _e(e,new Int32Array(n));if("bool"===t)return _e(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Fe(e){e.forEach((t=>{Y(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Re(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function De(e,t,n){if(0===t)return[];if(1===t)return[e];let r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Me(e){return e&&e.then&&"function"==typeof e.then}var Oe="tfjsflags",Le=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ze,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Pe().getBool("IS_TEST")||Pe().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];Pe().getBool("IS_TEST")||Pe().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Me(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);Oe in e&&e[Oe].split(",").forEach((e=>{let[t,n]=e.split(":");this.urlFlags[t]=function(e,t){let n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}};function ze(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Pe(){return We}var Be,We=null;function Ve(){if(null==Be){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Be=e}return Be}function Ue(e,t){let n=function(){let e=Ve();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var Ge="Abs",He="Acos",je="Acosh",qe="Add",Ke="AddN",Xe="All",Ye="Any",Ze="ArgMax",Je="ArgMin",Qe="Asin",et="Asinh",tt="Atan",nt="Atanh",rt="Atan2",at="AvgPool",st="AvgPoolGrad",it="AvgPool3D",ot="AvgPool3DGrad",lt="BatchMatMul",ut="BatchToSpaceND",pt="Bincount",dt="BitwiseAnd",ht="BroadcastTo",ct="BroadcastArgs",ft="Cast",mt="Ceil",gt="ClipByValue",yt="Complex",bt="ComplexAbs",xt="Concat",wt="Conv2D",vt="Conv2DBackpropFilter",kt="Conv2DBackpropInput",It="Conv3D",St="Conv3DBackpropFilterV2",Nt="Conv3DBackpropInputV2",Tt="Cos",_t="Cosh",Ct="Cumprod",Et="Cumsum",$t="CropAndResize",At="DenseBincount",Ft="DepthToSpace",Rt="DepthwiseConv2dNative",Dt="DepthwiseConv2dNativeBackpropFilter",Mt="DepthwiseConv2dNativeBackpropInput",Ot="Diag",Lt="Dilation2D",zt="Dilation2DBackpropInput",Pt="Dilation2DBackpropFilter",Bt="Draw",Wt="RealDiv",Vt="Einsum",Ut="Elu",Gt="EluGrad",Ht="Erf",jt="Equal",qt="Exp",Kt="ExpandDims",Xt="Expm1",Yt="FFT",Zt="Fill",Jt="FlipLeftRight",Qt="Floor",en="FloorDiv",tn="FusedBatchNorm",nn="GatherV2",rn="GatherNd",an="Greater",sn="GreaterEqual",on="Identity",ln="IFFT",un="Imag",pn="IsFinite",dn="IsInf",hn="IsNan",cn="LeakyRelu",fn="Less",mn="LessEqual",gn="LinSpace",yn="Log",bn="Log1p",xn="LogicalAnd",wn="LogicalNot",vn="LogicalOr",kn="LogicalXor",In="LogSoftmax",Sn="LowerBound",Nn="LRN",Tn="LRNGrad",_n="MatrixBandPart",Cn="Max",En="Maximum",$n="MaxPool",An="MaxPoolGrad",Fn="MaxPool3D",Rn="MaxPool3DGrad",Dn="MaxPoolWithArgmax",Mn="Mean",On="Min",Ln="Minimum",zn="MirrorPad",Pn="Mod",Bn="Multinomial",Wn="Multiply",Vn="Neg",Un="NotEqual",Gn="NonMaxSuppressionV3",Hn="NonMaxSuppressionV4",jn="NonMaxSuppressionV5",qn="OnesLike",Kn="OneHot",Xn="Pack",Yn="PadV2",Zn="Pool",Jn="Pow",Qn="Prelu",er="Prod",tr="RaggedGather",nr="RaggedRange",rr="RaggedTensorToTensor",ar="Range",sr="Real",ir="Reciprocal",or="Relu",lr="Reshape",ur="ResizeNearestNeighbor",pr="ResizeNearestNeighborGrad",dr="ResizeBilinear",hr="ResizeBilinearGrad",cr="Relu6",fr="Reverse",mr="Round",gr="Rsqrt",yr="ScatterNd",br="TensorScatterUpdate",xr="SearchSorted",wr="Select",vr="Selu",kr="Slice",Ir="Sin",Sr="Sinh",Nr="Sign",Tr="Sigmoid",_r="Softplus",Cr="Sqrt",Er="Sum",$r="SpaceToBatchND",Ar="SplitV",Fr="Softmax",Rr="SparseFillEmptyRows",Dr="SparseReshape",Mr="SparseSegmentMean",Or="SparseSegmentSum",Lr="SparseToDense",zr="SquaredDifference",Pr="Square",Br="StaticRegexReplace",Wr="StridedSlice",Vr="StringNGrams",Ur="StringSplit",Gr="StringToHashBucketFast",Hr="Sub",jr="Tan",qr="Tanh",Kr="Tile",Xr="TopK",Yr="Transform",Zr="Transpose",Jr="Unique",Qr="Unpack",ea="UnsortedSegmentSum",ta="UpperBound",na="ZerosLike",ra="Step",aa="FromPixels",sa="RotateWithOffset",ia="_FusedMatMul",oa="FusedConv2D",la="FusedDepthwiseConv2D";function ua(...e){Pe().getBool("IS_TEST")||Pe().getBool("PROD")||console.warn(...e)}function pa(...e){Pe().getBool("IS_TEST")||Pe().getBool("PROD")||console.log(...e)}var da=Ue("kernelRegistry",(()=>new Map)),ha=Ue("gradRegistry",(()=>new Map));function ca(e,t){let n=va(e,t);return da.get(n)}function fa(e){return ha.get(e)}function ma(e){let t=da.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function ga(e){let{kernelName:t,backendName:n}=e,r=va(t,n);da.has(r)&&ua(`The kernel '${t}' for backend '${n}' is already registered`),da.set(r,e)}function ya(e){let{kernelName:t}=e;ha.has(t)&&Pe().getBool("DEBUG")&&ua(`Overriding the gradient for '${t}'`),ha.set(t,e)}function ba(e,t){let n=va(e,t);if(!da.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);da.delete(n)}function xa(e){if(!ha.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ha.delete(e)}function wa(e,t){ma(e).forEach((e=>{ga(Object.assign({},e,{backendName:t}))}))}function va(e,t){return`${t}_${e}`}var ka={};function Ia(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}g(ka,{arraysEqual:()=>ne,arraysEqualWithNull:()=>te,assert:()=>Y,assertNonNegativeIntegerDimensions:()=>Fe,assertNonNull:()=>J,assertShapesMatch:()=>Z,bytesFromStringArray:()=>be,bytesPerElement:()=>ye,checkConversionForErrors:()=>fe,clamp:()=>G,computeStrides:()=>Ne,convertBackendValuesAndArrayBuffer:()=>Ce,createScalarValue:()=>za,createShuffledIndices:()=>ie,decodeString:()=>Ua,distSquared:()=>X,encodeString:()=>Va,fetch:()=>Wa,fingerPrint64:()=>La,flatten:()=>Ha,getArrayFromDType:()=>ce,getTypedArrayFromDType:()=>he,hasEncodingLoss:()=>ge,hexToLong:()=>Ta,indexToLoc:()=>De,inferDtype:()=>ke,inferFromImplicitShape:()=>ue,isBoolean:()=>we,isFunction:()=>Ie,isInt:()=>re,isNumber:()=>ve,isPromise:()=>Me,isScalarShape:()=>ee,isString:()=>xe,isTypedArray:()=>Ga,isValidDtype:()=>me,locToIndex:()=>Re,makeOnesTypedArray:()=>Ee,makeZerosNestedTypedArray:()=>Ae,makeZerosTypedArray:()=>$e,nearestDivisor:()=>Se,nearestLargerEven:()=>H,now:()=>Ba,parseAxisParam:()=>pe,randUniform:()=>K,repeatedTry:()=>le,rightPad:()=>oe,shuffle:()=>V,shuffleCombo:()=>U,sizeFromShape:()=>Q,sizeToSquarishShape:()=>se,squeezeShape:()=>de,sum:()=>q,swap:()=>j,tanh:()=>ae,toNestedArray:()=>_e,toTypedArray:()=>Pa});var Sa=y(b()),Na=Sa.default||Sa;function Ta(e){return Na.fromString(e,!0,16)}var _a=Ta("c3a5c85c97cb3127"),Ca=Ta("b492b66fbe98f273"),Ea=Ta("9ae16a3b2f90404f");function $a(e){return e.xor(e.shru(47))}function Aa(e,t,n){let r=e.slice(t,t+n);return Na.fromBytes(Array.from(r),!0,!0)}function Fa(e,t){return Aa(e,t,8)}function Ra(e,t){return Aa(e,t,4)}function Da(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ma(e,t,n=Ta("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Oa(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=Da(s.add(a).add(r),21);let i=a;return a=(a=a.add(t)).add(n),s=s.add(Da(a,44)),[a.add(r),s.add(i)]}(Fa(e,t),Fa(e,t+8),Fa(e,t+16),Fa(e,t+24),n,r)}function La(e,t=e.length){let n=Na.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){let n=Ea.add(2*t),r=Fa(e,0).add(Ea),a=Fa(e,t-8);return Ma(Da(a,37).mul(n).add(r),Da(r,25).add(a).mul(n),n)}if(t>=4){let n=Ea.add(2*t);return Ma(Ra(e,0).shl(3).add(t),Ra(e,t-4),n)}if(t>0){let n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return $a(Ea.mul(n).xor(_a.mul(r))).mul(Ea)}return Ea}(e,t):function(e,t=e.length){let n=Ea.add(2*t),r=Fa(e,0).mul(Ca),a=Fa(e,8),s=Fa(e,t-8).mul(n),i=Fa(e,t-16).mul(Ea);return Ma(Da(r.add(a),43).add(Da(s,30)).add(i),r.add(Da(a.add(Ea),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){let n=Ea.add(2*t),r=Fa(e,0).mul(Ea),a=Fa(e,8),s=Fa(e,t-8).mul(n),i=Fa(e,t-16).mul(Ea),o=Da(r.add(a),43).add(Da(s,30)).add(i),l=Ma(o,r.add(Da(a.add(Ea),18)).add(s),n),u=Fa(e,16).mul(n),p=Fa(e,24),d=o.add(Fa(e,t-32)).mul(n),h=l.add(Fa(e,t-24)).mul(n);return Ma(Da(u.add(p),43).add(Da(d,30)).add(h),u.add(Da(p.add(r),18)).add(d),n)}(e,t);let r=n,a=n.mul(Ca).add(113),s=$a(a.mul(Ea).add(113)).mul(Ea),i=[Na.UZERO,Na.UZERO],o=[Na.UZERO,Na.UZERO];r=r.mul(Ea).add(Fa(e,0));let l=0,u=64*(t-1>>6),p=u+(t-1&63)-63;do{r=Da(r.add(a).add(i[0]).add(Fa(e,l+8)),37).mul(Ca),a=Da(a.add(i[1]).add(Fa(e,l+48)),42).mul(Ca),r=r.xor(o[1]),a=a.add(i[0]).add(Fa(e,l+40)),s=Da(s.add(o[0]),33).mul(Ca),i=Oa(e,l,i[1].mul(Ca),r.add(o[0])),o=Oa(e,l+32,s.add(o[1]),a.add(Fa(e,l+16))),[s,r]=[r,s],l+=64}while(l!==u);let d=Ca.add(s.and(255).shl(1));return l=p,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Da(r.add(a).add(i[0]).add(Fa(e,l+8)),37).mul(d),a=Da(a.add(i[1]).add(Fa(e,l+48)),42).mul(d),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(Fa(e,l+40))),s=Da(s.add(o[0]),33).mul(d),i=Oa(e,l,i[1].mul(d),r.add(o[0])),o=Oa(e,l+32,s.add(o[1]),a.add(Fa(e,l+16))),[s,r]=[r,s],Ma(Ma(i[0],o[0],d).add($a(a).mul(_a)).add(s),Ma(i[1],o[1],d).add(r),d)}function za(e,t){return"string"===t?Va(e):Pa([e],t)}function Pa(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Ha(e)),Pe().getBool("DEBUG")&&fe(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ba(){return Pe().platform.now()}function Wa(e,t){return Pe().platform.fetch(e,t)}function Va(e,t="utf-8"){return t=t||"utf-8",Pe().platform.encode(e,t)}function Ua(e,t="utf-8"){return t=t||"utf-8",Pe().platform.decode(e,t)}function Ga(e){return null!=Pe().platform.isTypedArray?Pe().platform.isTypedArray(e):Ia(e)}function Ha(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||Me(e)||null==e||Ga(e)&&n)t.push(e);else if(Array.isArray(e)||Ga(e))for(let r=0;r<e.length;++r)Ha(e[r],t,n);else{let r=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)Ha(e[a],t,n)}return t}var ja=class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ka)}profileKernel(e,t,n){let r,a,s=()=>{r=n()},i=Ba();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let e of r)e.dataSync();a=Promise.resolve({kernelMs:Ba()-i})}if(Pe().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){let n=r[t];n.data().then((t=>{qa(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}};function qa(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){let r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var Ka=class{logKernelProfile(e,t,n,r,a,s){let i="number"==typeof r?oe(`${r}ms`,9):r.error,o=oe(e,25),l=t.rank,u=t.size,p=oe(t.shape.toString(),14),d="";for(let e in a){let n=a[e];if(null!=n){let r=n.shape||t.shape,a=r.length;d+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${p}\t%c${u}\t%c${d}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function Xa(e,t,n,r){let a=Ne(t),s=function(e,t,n,r){let a=Q(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?Qa(e):e;if(o>1)for(let e=0;e<a/s;e++){let t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],Ya(l[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=Ja(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Ya(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:xe(e)?`'${e}'`:"bool"===n?Za(e):parseFloat(e.toFixed(7)).toString(),oe(r,t)}function Za(e){return 0===e?"false":"true"}function Ja(e,t,n,r,a,s=!0){let i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[Ya(Qa(e)[0],0,n)]}return"bool"===n?[Za(e[0])]:[e[0].toString()]}if(1===l){if(o>20){let t=3*i,r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Qa(r),s=Qa(s)),["["+r.map(((e,t)=>Ya(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Ya(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Qa(e):Array.from(e)).map(((e,t)=>Ya(e,a[t],n))).join(", ")+"]"]}let u=t.slice(1),p=r.slice(1),d=r[0]*i,h=[];if(o>20){for(let t=0;t<3;t++){let r=t*d,s=r+d;h.push(...Ja(e.slice(r,s),u,n,p,a,!1))}h.push("...");for(let t=o-3;t<o;t++){let r=t*d,s=r+d;h.push(...Ja(e.slice(r,s),u,n,p,a,t===o-1))}}else for(let t=0;t<o;t++){let r=t*d,s=r+d;h.push(...Ja(e.slice(r,s),u,n,p,a,t===o-1))}let c=2===l?",":"";h[0]="["+(o>0?h[0]+c:"");for(let e=1;e<h.length-1;e++)h[e]=" "+h[e]+c;let f=",\n";for(let e=2;e<l;e++)f+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(s?"":f),h}function Qa(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var es=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Q(e),null!=n){let e=n.length;Y(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ce(t,this.size),this.strides=Ne(e)}set(e,...t){0===t.length&&(t=[0]),Y(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ts().makeTensor(this.values,this.shape,this.dtype)}},ts=null,ns=null;var rs=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Q(e),this.strides=Ne(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return ns.buffer(this.shape,this.dtype,e)}bufferSync(){return ns.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return _e(this.shape,e,"complex64"===this.dtype)}arraySync(){return _e(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=ts().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map((e=>Ua(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ts().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=ts().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Ua(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await ts().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(ts().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ns.print(this,e)}clone(){return this.throwIfDisposed(),ns.clone(this)}toString(e=!1){return Xa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ns.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ts().makeVariable(this,e,t,n)}};function as(){return Ue("Tensor",(()=>rs))}Object.defineProperty(rs,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),as();var ss=class extends rs{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ne(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ts().disposeTensor(this),this.dataId=e.dataId,ts().incRef(this,null)}dispose(){ts().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(ss,Symbol.hasInstance,{value:e=>e instanceof rs&&null!=e.assign&&e.assign instanceof Function});var is,os,ls,us,ps,ds={};g(ds,{assertTypesMatch:()=>bs,getTensorsInContainer:()=>ws,isTensorInList:()=>xs,makeTypesMatch:()=>ys}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(is||(is={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(os||(os={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ls||(ls={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(us||(us={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ps||(ps={}));var hs={float32:us,int32:os,bool:ls,complex64:ps};function cs(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return hs[e][t]}function fs(e){return cs(e,"int32")}function ms(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function gs(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function ys(e,t){if(e.dtype===t.dtype)return[e,t];let n=cs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function bs(e,t){Y(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function xs(e,t){return t.some((t=>t.id===e.id))}function ws(e){let t=[];return vs(e,t,new Set),t}function vs(e,t,n){if(null==e)return;if(e instanceof rs)return void t.push(e);if(!function(e){return Array.isArray(e)||"object"==typeof e}(e))return;let r=e;for(let e in r){let a=r[e];n.has(a)||(n.add(a),vs(a,t,n))}}function ks(e){return null!=e.kernelName}var Is=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Ss=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Is}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ua(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ja(this.backendInstance),!0}setupRegisteredKernels(){ma(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){ma(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof B||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ua(`Initialization of backend ${e} failed`),ua(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return ua(`Initialization of backend ${e} failed`),ua(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ss.nextTensorId++}nextVariableId(){return Ss.nextVariableId++}clone(e){let t=Ts.runKernel(on,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{let t={x:e},n={dtype:"float32"};return Ts.runKernel(ft,t,n)}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==ca(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=ks(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ks(e)){let{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=ca(t,this.backendName);Y(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){let e=this.getTensorsForGradient(t,s,u);r=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,s=e=>{a&&(r=e.map((e=>this.keep(this.clone(e)))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:p,attrs:d}=e,h=ks(e)?null:e.backwardsFunc;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,p,(()=>n())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()})),a&&this.addTapeNode(l,p,t,h,r,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map((e=>null!=p[e]?p[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){let r=fa(e);if(null!=r){let e,a=r.inputsToSave||[],s=r.outputsToSave||[];r.saveAllInputs?(Y(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),e=Object.keys(t).map((e=>t[e]))):e=a.map((e=>t[e]));let i=n.filter(((e,t)=>s[t]));return e.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&xe(e[0])&&(a=e.map((e=>Va(e))));let s=r.write(a,t,n),i=new rs(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){let e=this.state.tensorInfo.get(s),t=be(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){let a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:r,dtype:a}=e,s=new rs(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new ss(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ye(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ss||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*ye(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=fa(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){let e=n[t],r=$e(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=ws(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];!t.kept&&!n.has(t.id)&&t.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===r.id&&this.track(e)}))}gradients(e,t,n,r=!1){if(Y(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));Y(a instanceof rs,(()=>"The result y returned by f() must be a tensor."));let s=function(e,t,n){let r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){let s=e[n],i=s.inputs;for(let e in i){let n=i[e],o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let t=e.length-1;t>=0;t--){let n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(let e in r)s[r[e].id]=!0,i[n.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let n=e[t];if(a[n.id]&&i[n.id]){let e={};for(let t in n.inputs){let a=n.inputs[t];r[a.id]&&(e[t]=a)}let t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{let e={};e[a.id]=null==n?function(e){let t=Ee(Q(e),"float32");return Ts.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach((t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!ne(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),_s);let r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(let t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return Y(Ie(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{Y(t.every((e=>e instanceof rs)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));let n,r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),Y(n.value instanceof rs,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Y(Ie(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{let a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];Y(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Y(s.every((e=>e instanceof rs)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));let i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Ba(),n=await this.backend.time(e);return n.wallMs=Ba()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Is;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function Ns(){let e=Ve();if(null==e._tfengine){let t=new Le(e);e._tfengine=new Ss(t)}return function(e){We=e}(e._tfengine.ENV),function(e){ts=e}((()=>e._tfengine)),e._tfengine}Ss.nextTensorId=0,Ss.nextVariableId=0;var Ts=Ns();function _s(e,t){let n={a:e,b:t};return Ts.runKernel(qe,n)}var Cs,Es={};function $s(e){Cs=e}function As(e){if(void 0!==Cs)return Cs;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Fs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}g(Es,{isBrowser:()=>Fs,isMobile:()=>As,mockIsMobile:()=>$s});var Rs=Pe();function Ds(e,t){let n=e;if(Ga(e))return"string"===t?[]:[e.length];if(ms(e)){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(gs(e))return[e.buffer.size/(null==t?4:ye(t))];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||Ga(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Pe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ms(e,r,[]),r}function Ms(e,t,n){if(n=n||[],!Array.isArray(e)&&!Ga(e))return void Y(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Y(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Y(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));let r=t.slice(1);for(let t=0;t<e.length;++t)Ms(e[t],r,n.concat(t))}function Os(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ls(e,t,n,r="numeric"){if(e instanceof rs)return Os(r,e.dtype,t,n),e;let a=ke(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Os(r,a,t,n),null==e||!Ga(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let s=Ds(e,a);!Ga(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==a?Pa(e,a):Ha(e,[],!0);return Ts.makeTensor(i,s,a)}function zs(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>Ls(e,`${t}[${a}]`,n,r)))}Rs.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Rs.registerFlag("IS_BROWSER",(()=>Fs())),Rs.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Rs.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Rs.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Rs.registerFlag("PROD",(()=>!1)),Rs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Rs.getBool("DEBUG"))),Rs.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Rs.registerFlag("IS_TEST",(()=>!1)),Rs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Rs.getBool("DEBUG"))),Rs.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Rs.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Rs.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var Ps="__op";function Bs(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Ps;let a=(...e)=>{Ts.startScope(n);try{let t=r(...e);return Me(t)&&console.error("Cannot return a Promise inside of tidy."),Ts.endScope(t),t}catch(e){throw Ts.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var Ws=Bs({complex_:function(e,t){let n=Ls(e,"real","complex"),r=Ls(t,"imag","complex");Z(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return Ts.runKernel(yt,a)}});function Vs(e,t,n,r){if(null==r)r=ke(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(gs(e)||ms(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return Ts.backend.createTensorFromGPUData(e,t||n,r)}if(!Ga(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Fe(t);let e=Q(t),r=Q(n);Y(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){let r=n[e],a=e!==n.length-1||r!==Q(t.slice(e));Y(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!Ga(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==r?Pa(e,r):Ha(e,[],!0),Ts.makeTensor(e,t,r)}function Us(e,t,n){return Vs(e,t,Ds(e,n),n)}var Gs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},Hs=class{static join(e){return new Hs(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),0===(e=e.map((e=>Ga(e)?e.buffer:e))).length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){let r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);let n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);let r=new ArrayBuffer(t-e),a=new Uint8Array(r),s=0;for(let r=n;r<this.shards.length;r++){let n=this.shards[r],i=e+s-n.start,o=s,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,i,l-i);if(a.set(u,o),s+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;let n=function(e,t){let n=0,r=e.length;for(;n<=r;){let a=Math.floor((r-n)/2)+n,s=t(e[a]);if(0===s)return a;s<0?r=a:n=a+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}};async function js(e,t){let n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){let i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise((async e=>{let t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n),a=0;for(let e=0;e<t.length;e++){let n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Ks(await Promise.all(r)),specs:n}}function qs(e,t){let n,r=new Hs(e),a={},s=0;for(let e of t){let t,i=e.name,o=e.dtype,l=e.shape,u=Q(l);if("quantization"in e){let a=e.quantization;if("uint8"===a.dtype||"uint16"===a.dtype){if(!("min"in a)||!("scale"in a))throw new Error(`Weight ${e.name} with quantization ${a.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==a.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${a.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${e.name} is quantized with ${a.dtype} which only supports weights of type float32 not ${o}.`)}let l=Gs[a.dtype],p=r.slice(s,s+u*l),d="uint8"===a.dtype?new Uint8Array(p):new Uint16Array(p);if("float32"===o)if("uint8"===a.dtype||"uint16"===a.dtype){t=new Float32Array(d.length);for(let e=0;e<d.length;e++){let n=d[e];t[e]=n*a.scale+a.min}}else{if("float16"!==a.dtype)throw new Error(`Unsupported quantization type ${a.dtype} for weight type float32.`);void 0===n&&(n=ai()),t=n(d)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);if("uint8"!==a.dtype&&"uint16"!==a.dtype)throw new Error(`Unsupported quantization type ${a.dtype} for weight type int32.`);t=new Int32Array(d.length);for(let e=0;e<d.length;e++){let n=d[e];t[e]=Math.round(n*a.scale+a.min)}}s+=u*l}else if("string"===o){let n=Q(e.shape);t=[];for(let e=0;e<n;e++){let e=new Uint32Array(r.slice(s,s+4))[0];s+=4;let n=new Uint8Array(r.slice(s,s+e));t.push(n),s+=e}}else{let e=Gs[o],n=r.slice(s,s+u*e);if("float32"===o)t=new Float32Array(n);else if("int32"===o)t=new Int32Array(n);else if("bool"===o)t=new Uint8Array(n);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);{t=new Float32Array(n);let e=new Float32Array(t.length/2),r=new Float32Array(t.length/2);for(let n=0;n<e.length;n++)e[n]=t[2*n],r[n]=t[2*n+1];let s=Us(e,l,"float32"),o=Us(r,l,"float32");a[i]=Ws(s,o),s.dispose(),o.dispose()}}s+=u*e}"complex64"!==o&&(a[i]=Us(t,l,o))}return a}function Ks(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));let r=new Uint8Array(t),a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var Xs="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ys(e){return Xs?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Zs(e){return Hs.join(e)}function Js(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function Qs(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function ei(e,t,n){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function ti(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),ei(e,n,r)}function ni(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ys(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ys(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Hs(e.weightData).byteLength}}function ri(e){let t=[];for(let n of e)t.push(...n.weights);return t}function ai(){let e=function(){let e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){let i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}var si=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==si.instance&&(si.instance=new si),si.instance}static registerSaveRouter(e){si.getInstance().saveRouters.push(e)}static registerLoadRouter(e){si.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return si.getHandlers(e,"save")}static getLoadHandlers(e,t){return si.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return("load"===t?si.getInstance().loadRouters:si.getInstance().saveRouters).forEach((t=>{let a=t(e,n);null!==a&&r.push(a)})),r}},ii=e=>si.registerSaveRouter(e),oi=e=>si.registerLoadRouter(e),li=e=>si.getSaveHandlers(e),ui=(e,t)=>si.getLoadHandlers(e,t),pi="tensorflowjs",di="models_store",hi="model_info_store";function ci(){if(!Pe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function fi(e){let t=e.result;t.createObjectStore(di,{keyPath:"modelPath"}),t.createObjectStore(hi,{keyPath:"modelPath"})}var mi=class{constructor(e){if(this.indexedDB=ci(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{let r=this.indexedDB.open(pi,1);r.onupgradeneeded=()=>fi(r),r.onsuccess=()=>{let a=r.result;if(null==t){let t=a.transaction(di,"readonly"),r=t.objectStore(di).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{t.weightData=Hs.join(t.weightData);let r,s,i=ni(t),o=a.transaction(hi,"readwrite"),l=o.objectStore(hi);try{r=l.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(e){return n(e)}r.onsuccess=()=>{s=a.transaction(di,"readwrite");let r,u=s.objectStore(di);try{r=u.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(e){return n(e)}r.onsuccess=()=>e({modelArtifactsInfo:i}),r.onerror=e=>{l=o.objectStore(hi);let t=l.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(r.error)),t.onerror=e=>(a.close(),n(r.error))}},r.onerror=e=>(a.close(),n(r.error)),o.oncomplete=()=>{null==s?a.close():s.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};mi.URL_SCHEME="indexeddb://";var gi=e=>Pe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(mi.URL_SCHEME)?function(e){return new mi(e)}(e.slice(mi.URL_SCHEME.length)):null;si.registerSaveRouter(gi),si.registerLoadRouter(gi);var yi="/",bi="tensorflowjs_models",xi="info",wi="model_topology",vi="weight_specs",ki="weight_data",Ii="model_metadata";function Si(e){return{info:[bi,e,xi].join(yi),topology:[bi,e,wi].join(yi),weightSpecs:[bi,e,vi].join(yi),weightData:[bi,e,ki].join(yi),modelMetadata:[bi,e,Ii].join(yi)}}function Ni(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function Ti(e){let t=e.split(yi);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(yi)}var _i=class{constructor(e){if(!Pe().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Si(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=ni(e),a=Hs.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Xs)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(a));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw Ni(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Xs){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};_i.URL_SCHEME="localstorage://";var Ci=e=>Pe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(_i.URL_SCHEME)?function(e){return new _i(e)}(e.slice(_i.URL_SCHEME.length)):null;si.registerSaveRouter(Ci),si.registerLoadRouter(Ci);var Ei="://",$i=class{constructor(){this.managers={}}static getInstance(){return null==$i.instance&&($i.instance=new $i),$i.instance}static registerManager(e,t){Y(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Ei)&&(e=e.slice(0,e.indexOf(Ei))),Y(e.length>0,(()=>"scheme must not be an empty string."));let n=$i.getInstance();Y(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){let t=$i.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys($i.getInstance().managers)}};function Ai(e){if(-1===e.indexOf(Ei))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${$i.getSchemes().join(",")}`);return{scheme:e.split(Ei)[0],path:e.split(Ei)[1]}}async function Fi(e,t,n=!1){Y(e!==t,(()=>`Old path and new path are the same: '${e}'`));let r=si.getLoadHandlers(e);Y(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Y(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));let a=r[0],s=si.getSaveHandlers(t);Y(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Y(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));let i=s[0],o=Ai(e).scheme,l=Ai(e).path,u=o===Ai(e).scheme,p=await a.load();n&&u&&await $i.getManager(o).removeModel(l);let d=await i.save(p);return n&&!u&&await $i.getManager(o).removeModel(l),d.modelArtifactsInfo}async function Ri(){let e=$i.getSchemes(),t={};for(let n of e){let e=await $i.getManager(n).listModels();for(let r in e){t[n+Ei+r]=e[r]}}return t}async function Di(e){let t=Ai(e);return $i.getManager(t.scheme).removeModel(t.path)}async function Mi(e,t){return Fi(e,t,!1)}async function Oi(e,t){return Fi(e,t,!0)}if(Pe().get("IS_BROWSER")){Pe().setPlatform("browser",new class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Pe().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return Ia(e)}});try{$i.registerManager(_i.URL_SCHEME,new class{constructor(){Y(Pe().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Y("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){let e={},t=bi+yi,n=yi+xi;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[Ti(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){let t=Si(e=function(e){return e.startsWith(_i.URL_SCHEME)?e.slice(_i.URL_SCHEME.length):e}(e));if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return Ni(t),n}})}catch(e){}try{$i.registerManager(mi.URL_SCHEME,new class{constructor(){this.indexedDB=ci()}async listModels(){return new Promise(((e,t)=>{let n=this.indexedDB.open(pi,1);n.onupgradeneeded=()=>fi(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(hi,"readonly"),s=a.objectStore(hi).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=function(e){return e.startsWith(mi.URL_SCHEME)?e.slice(mi.URL_SCHEME.length):e}(e),new Promise(((t,n)=>{let r=this.indexedDB.open(pi,1);r.onupgradeneeded=()=>fi(r),r.onsuccess=()=>{let a,s=r.result,i=s.transaction(hi,"readwrite"),o=i.objectStore(hi),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let r=o.delete(e),i=()=>{a=s.transaction(di,"readwrite");let r=a.objectStore(di).delete(e);r.onsuccess=()=>t(l.result.modelArtifactsInfo),r.onerror=e=>n(l.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}})}catch(e){}}var Li,zi=()=>x();function Pi(e,t="float32",n){return t=t||"float32",Fe(e),new es(e,t,n)}Pe().get("IS_NODE")&&!Pe().get("IS_BROWSER")&&Pe().setPlatform("node",new class{constructor(){this.util=w(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Pe().global.fetch?Pe().global.fetch(e,t):(null==Li&&(Li=zi()),Li(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});var Bi=Bs({cast_:function(e,t){let n=Ls(e,"x","cast");if(!me(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return Ts.runKernel(ft,r,a)}});var Wi=Bs({clone_:function(e){let t={x:Ls(e,"x","clone","string_or_numeric")};return Ts.runKernel(on,t)}});function Vi(e,t=!1){console.log(e.toString(t))}function Ui(){Pe().set("PROD",!0)}function Gi(){Pe().set("DEBUG",!0)}function Hi(){Pe().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function ji(e){Pe().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function qi(){Ts.disposeVariables()}function Ki(){return Ts}function Xi(){return Ts.memory()}function Yi(e){return Ts.profile(e)}function Zi(e,t){return Ts.tidy(e,t)}function Ji(e){ws(e).forEach((e=>e.dispose()))}function Qi(e){return Ts.keep(e)}function eo(e){return Ts.time(e)}function to(e){return Ts.setBackend(e)}function no(){return Ts.ready()}function ro(){return Ts.backendName}function ao(e){Ts.removeBackend(e)}function so(e){return Ts.findBackend(e)}function io(e){return Ts.findBackendFactory(e)}function oo(e,t,n=1){return Ts.registerBackend(e,t,n)}function lo(){return Ts.backend}function uo(e,t){Pe().setPlatform(e,t)}Ns(),function(e){ns=e}({buffer:Pi,cast:Bi,clone:Wi,print:Vi}),function(e){0}(ji);var po=Bs({add_:function(e,t){let n=Ls(e,"a","add"),r=Ls(t,"b","add");[n,r]=ys(n,r);let a={a:n,b:r};return Ts.runKernel(qe,a)}});var ho=Bs({floorDiv_:function(e,t){let n=Ls(e,"a","floorDiv"),r=Ls(t,"b","floorDiv");[n,r]=ys(n,r);let a={a:n,b:r};return Ts.runKernel(en,a)}});var co=Bs({div_:function(e,t){let n=Ls(e,"a","div"),r=Ls(t,"b","div");if([n,r]=ys(n,r),"int32"===n.dtype&&"int32"===r.dtype)return ho(n,r);let a={a:n,b:r};return Ts.runKernel(Wt,a,{})}});var fo=Bs({mul_:function(e,t){let n=Ls(e,"a","mul"),r=Ls(t,"b","mul");[n,r]=ys(n,r);let a={a:n,b:r};return Ts.runKernel(Wn,a)}});var mo=Bs({abs_:function(e){let t=Ls(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return Ts.runKernel(bt,e)}{let e={x:t};return Ts.runKernel(Ge,e)}}});var go=Bs({acos_:function(e){let t={x:Ls(e,"x","acos")};return Ts.runKernel(He,t)}});var yo=Bs({acosh_:function(e){let t={x:Ls(e,"x","acosh")};return Ts.runKernel(je,t)}});var bo=Bs({addN_:function(e){Y(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),Y(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));let t=e.map(((e,t)=>Ls(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ne(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));let r=t;return Ts.runKernel(Ke,r)}});var xo=Bs({all_:function(e,t=null,n=!1){let r={x:Ls(e,"x","all","bool")},a={axis:t,keepDims:n};return Ts.runKernel(Xe,r,a)}});var wo=Bs({any_:function(e,t=null,n=!1){let r={x:Ls(e,"x","any","bool")},a={axis:t,keepDims:n};return Ts.runKernel(Ye,r,a)}});var vo=Bs({argMax_:function(e,t=0){let n={x:Ls(e,"x","argMax")},r={axis:t};return Ts.runKernel(Ze,n,r)}});var ko=Bs({argMin_:function(e,t=0){let n={x:Ls(e,"x","argMin")},r={axis:t};return Ts.runKernel(Je,n,r)}});var Io=Bs({asin_:function(e){let t={x:Ls(e,"x","asin")};return Ts.runKernel(Qe,t)}});var So=Bs({asinh_:function(e){let t={x:Ls(e,"x","asinh")};return Ts.runKernel(et,t)}});var No=Bs({atan_:function(e){let t={x:Ls(e,"x","atan")};return Ts.runKernel(tt,t)}});var To=Bs({atan2_:function(e,t){let n=Ls(e,"a","atan2"),r=Ls(t,"b","atan2");[n,r]=ys(n,r);let a={a:n,b:r};return Ts.runKernel(rt,a)}});var _o=Bs({atanh_:function(e){let t={x:Ls(e,"x","atanh")};return Ts.runKernel(nt,t)}});function Co(e,t,n,r,a="NHWC",s){return Ao(e,[...t,e[3]],n,s,r,null,null,Wo(a))}function Eo(e,t,n,r,a,s,i="channelsLast"){let o,[l,u]=Do(t);if("channelsLast"===i)o=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);o=[l,u,e[1],e[1]]}return Ao(e,o,n,r,a,s,!1,i)}function $o(e,t,n,r,a,s,i="NDHWC"){let o,l,[u,p,d]=Mo(t);if("NDHWC"===i)l="channelsLast",o=[u,p,d,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);l="channelsFirst",o=[u,p,d,e[1],e[1]]}return Fo(e,o,n,r,a,!1,l,s)}function Ao(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,p,d]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,p,d]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,d,u,p]=e}let h,[c,f,,m]=t,[g,y]=Do(n),[b,x]=Do(r),w=Oo(c,b),v=Oo(f,x),{padInfo:k,outHeight:I,outWidth:S}=function(e,t,n,r,a,s,i,o,l){let u,p,d;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let a=function(e,t,n,r,a){null==r&&(r=Ro(e,t,n));let s=e[0],i=e[1],o=Lo((s-t+2*r)/n+1,a),l=Lo((i-t+2*r)/n+1,a);return[o,l]}([t,n],s,r,e,o);p=a[0],d=a[1]}else if("same"===e){p=Math.ceil(t/r),d=Math.ceil(n/a);let e=Math.max(0,(p-1)*r+s-t),o=Math.max(0,(d-1)*a+i-n),l=Math.floor(e/2),h=e-l,c=Math.floor(o/2);u={top:l,bottom:h,left:c,right:o-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-s+1)/r),d=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let h="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:h,bottom:c,left:f,right:m,type:0===h&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},p=Lo((t-s+h+c)/r+1,o),d=Lo((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:p,outWidth:d}}(a,u,p,g,y,w,v,s,o),N=i?m*d:m;return"channelsFirst"===o?h=[l,N,I,S]:"channelsLast"===o&&(h=[l,I,S,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:p,inChannels:d,outHeight:I,outWidth:S,outChannels:N,padInfo:k,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:x,inShape:e,outShape:h,filterShape:t}}function Fo(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,p,d,h]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,p,d,h]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,h,u,p,d]=e}let c,[f,m,g,,y]=t,[b,x,w]=Mo(n),[v,k,I]=Mo(r),S=Oo(f,v),N=Oo(m,k),T=Oo(g,I),{padInfo:_,outDepth:C,outHeight:E,outWidth:$}=function(e,t,n,r,a,s,i,o,l,u,p){let d,h,c,f;if("valid"===e&&(e=0),"number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let m=function(e,t,n,r,a,s){null==a&&(a=Ro(e,t[0],r[0]));let i=[0,0,0,n];for(let n=0;n<3;n++)e[n]+2*a>=t[n]&&(i[n]=Lo((e[n]-t[n]+2*a)/r[n]+1,s));return i}([t,n,r,1],[o,l,u],1,[a,s,i],e,p);h=m[0],c=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{h=Math.ceil(t/a),c=Math.ceil(n/s),f=Math.ceil(r/i);let e=(h-1)*a+o-t,p=(c-1)*s+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(p/2),x=p-b,w=Math.floor(m/2);d={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}}return{padInfo:d,outDepth:h,outHeight:c,outWidth:f}}(a,u,p,d,b,x,w,S,N,T,o),A=s?y*h:y;return"channelsFirst"===i?c=[l,A,C,E,$]:"channelsLast"===i&&(c=[l,C,E,$,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:p,inWidth:d,inChannels:h,outDepth:C,outHeight:E,outWidth:$,outChannels:A,padInfo:_,strideDepth:b,strideHeight:x,strideWidth:w,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:S,effectiveFilterHeight:N,effectiveFilterWidth:T,dilationDepth:v,dilationHeight:k,dilationWidth:I,inShape:e,outShape:c,filterShape:t}}function Ro(e,t,n,r=1){let a=Oo(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Do(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Mo(e){return"number"==typeof e?[e,e,e]:e}function Oo(e,t){return t<=1?e:e+(e-1)*(t-1)}function Lo(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function zo(e){let[t,n,r]=Do(e);return 1===t&&1===n&&1===r}function Po(e,t){return zo(e)||zo(t)}function Bo(e){return Do(e).every((e=>e>0))}function Wo(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Vo(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)Y(re(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{Y(re(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}var Uo=Bs({reshape_:function(e,t){let n={x:Ls(e,"x","reshape","string_or_numeric")},r={shape:t};return Ts.runKernel(lr,n,r)}});var Go=Bs({avgPool_:function(e,t,n,r,a){let s=Ls(e,"x","avgPool","float32");Y(Po(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=Uo(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Y(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Vo("avgPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},p=Ts.runKernel(at,l,u);return p=Bi(p,s.dtype),o?Uo(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});var Ho=Bs({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){let i=Ls(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=Uo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Y(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),Y("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Y("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Vo("avgPool3d",r,a);let u={x:o},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},d=Ts.runKernel(it,u,p);return d=Bi(d,o.dtype),l?Uo(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var jo=Bs({concat_:function(e,t=0){Y(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=zs(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Wi(n[0]);let r=n,a={axis:t};return Ts.runKernel(xt,r,a)}});var qo=Bs({matMul_:function(e,t,n=!1,r=!1){let a=Ls(e,"a","matMul"),s=Ls(t,"b","matMul");[a,s]=ys(a,s);let i={a:a,b:s},o={transposeA:n,transposeB:r};return Ts.runKernel(lt,i,o)}});var Ko=Bs({sigmoid_:function(e){let t={x:Ls(e,"x","sigmoid","float32")};return Ts.runKernel(Tr,t)}});var Xo=Bs({slice_:function(e,t,n){let r=Ls(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return Ts.runKernel(kr,a,s)}});var Yo=Bs({tanh_:function(e){let t={x:Ls(e,"x","tanh","float32")};return Ts.runKernel(qr,t)}});var Zo=Bs({basicLSTMCell_:function(e,t,n,r,a,s){let i=Ls(e,"forgetBias","basicLSTMCell"),o=Ls(t,"lstmKernel","basicLSTMCell"),l=Ls(n,"lstmBias","basicLSTMCell"),u=Ls(r,"data","basicLSTMCell"),p=Ls(a,"c","basicLSTMCell"),d=Ls(s,"h","basicLSTMCell"),h=jo([u,d],1),c=qo(h,o),f=po(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Xo(f,[0,0],y),x=Xo(f,[0,g],y),w=Xo(f,[0,2*g],y),v=Xo(f,[0,3*g],y),k=po(fo(Ko(b),Yo(x)),fo(p,Ko(po(i,w))));return[k,fo(Yo(k),Ko(v))]}});var Jo=Bs({batchToSpaceND_:function(e,t,n){let r=Ls(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));Y(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),Y(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Y(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));let s={x:r},i={blockShape:t,crops:n};return Ts.runKernel(ut,s,i)}});function Qo(e){let t;return t=0===e.rank||1===e.rank?Uo(e,[1,1,1,e.size]):2===e.rank?Uo(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Uo(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var el=Bs({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);let i,o,l=Ls(e,"x","batchNorm"),u=Ls(t,"mean","batchNorm"),p=Ls(n,"variance","batchNorm");null!=a&&(i=Ls(a,"scale","batchNorm")),null!=r&&(o=Ls(r,"offset","batchNorm")),Y(u.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Y(null==o||u.rank===o.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Y(null==i||u.rank===i.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let d={x:Qo(l),scale:i,offset:o,mean:u,variance:p},h={varianceEpsilon:s},c=Ts.runKernel(tn,d,h);return Uo(c,l.shape)}});var tl=Bs({batchNorm2d_:function(e,t,n,r,a,s){let i,o,l=Ls(e,"x","batchNorm"),u=Ls(t,"mean","batchNorm"),p=Ls(n,"variance","batchNorm");return null!=a&&(i=Ls(a,"scale","batchNorm")),null!=r&&(o=Ls(r,"offset","batchNorm")),Y(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),Y(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),Y(2===p.rank||1===p.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${p.rank}.`)),null!=i&&Y(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`)),null!=o&&Y(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`)),el(l,u,p,o,i,s)}});var nl=Bs({batchNorm3d_:function(e,t,n,r,a,s){let i,o,l=Ls(e,"x","batchNorm"),u=Ls(t,"mean","batchNorm"),p=Ls(n,"variance","batchNorm");return null!=a&&(i=Ls(a,"scale","batchNorm")),null!=r&&(o=Ls(r,"offset","batchNorm")),Y(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),Y(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),Y(3===p.rank||1===p.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${p.rank}.`)),null!=i&&Y(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`)),null!=o&&Y(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`)),el(l,u,p,o,i,s)}});var rl=Bs({batchNorm4d_:function(e,t,n,r,a,s){let i,o,l=Ls(e,"x","batchNorm"),u=Ls(t,"mean","batchNorm"),p=Ls(n,"variance","batchNorm");return null!=a&&(i=Ls(a,"scale","batchNorm")),null!=r&&(o=Ls(r,"offset","batchNorm")),Y(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),Y(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),Y(4===p.rank||1===p.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${p.rank}.`)),null!=i&&Y(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`)),null!=o&&Y(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`)),el(l,u,p,o,i,s)}});var al=Bs({bincount_:function(e,t,n){let r=Ls(e,"x","bincount"),a=Ls(t,"weights","bincount");Y("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),Y(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Y(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));let s={x:r,weights:a},i={size:n};return Ts.runKernel(pt,s,i)}});var sl=Bs({bitwiseAnd_:function(e,t){let n=Ls(e,"x","bitwiseAnd"),r=Ls(t,"y","bitwiseAnd");if(!ne(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);let a={a:n,b:r};return Ts.runKernel(dt,a)}});var il=Bs({broadcastArgs_:function(e,t){let n=Ls(e,"s0","broadcastArgs","int32"),r=Ls(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let a={s0:n,s1:r};return Ts.runKernel(ct,a)}});var ol=Bs({broadcastTo_:function(e,t){let n=Ls(e,"broadcastTo","x"),r=n.shape;if(Fe(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Uo(n,e)}let a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Wi(n);let i={x:n},o={reps:s};return Ts.runKernel(Kr,i,o)}});var ll=Bs({ceil_:function(e){let t={x:Ls(e,"x","ceil","float32")};return Ts.runKernel(mt,t)}});function ul(e,t,n){Fe(e);let r={shape:e,value:t,dtype:n=n||ke(t)};return Ts.runKernel(Zt,{},r)}var pl=Bs({clipByValue_:function(e,t,n){let r=Ls(e,"x","clipByValue");if(Y(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return ul(r.shape,t,r.dtype);let a={x:r},s={clipValueMin:t,clipValueMax:n};return Ts.runKernel(gt,a,s)}});var dl=Bs({concat1d_:function(e){return jo(e,0)}});var hl=Bs({concat2d_:function(e,t){return jo(e,t)}});var cl=Bs({concat3d_:function(e,t){return jo(e,t)}});var fl=Bs({concat4d_:function(e,t){return jo(e,t)}});var ml=Bs({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=Ls(e,"x","conv2d","float32"),l=Ls(t,"filter","conv2d","float32"),u=o,p=!1;3===o.rank&&(p=!0,u=Uo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Y(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),Y(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Vo("conv2d",r,i);let d="NHWC"===a?u.shape[3]:u.shape[1];Y(d===l.shape[2],(()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`)),Y(Po(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Y(Bo(s),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),Y(Bo(n),(()=>"Error in conv2D: Strides should be larger than 0."));let h={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Ts.runKernel(wt,h,c);return p?Uo(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var gl=Bs({conv1d_:function(e,t,n,r,a="NWC",s=1,i){let o=Ls(e,"x","conv1d"),l=Ls(t,"filter","conv1d"),u=o,p=!1;2===o.rank&&(p=!0,u=Uo(o,[1,o.shape[0],o.shape[1]])),Y(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),Y(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Vo("conv1d",r,i),Y(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),Y(Po(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),Y(Bo(s),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),Y(Bo(n),(()=>"Error in conv1D: Stride should be larger than 0.")),Y("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));let d=Uo(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=Uo(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=ml(h,d,[1,n],r,"NHWC",[1,s],i);return Uo(c,p?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}});var yl=Bs({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){Y(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Uo(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Y(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),Y(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),Y(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));let p="NHWC"===s?o[3]:o[1],d="NHWC"===s?l.shape[3]:l.shape[1];Y(p===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[2]}.`)),Y(d===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`)),Vo("conv2dDerInput",a,i);let h={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=Ts.runKernel(kt,h,c);return u?Uo(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var bl=Bs({conv2dTranspose_:function(e,t,n,r,a,s){let i=Ls(e,"x","conv2dTranspose"),o=Ls(t,"filter","conv2dTranspose");return yl(n,i,o,r,a,"NHWC",s)}});var xl=Bs({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=Ls(e,"x","conv3d"),o=Ls(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=Uo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Y(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),Y(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),Y(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Y(Po(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Y("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`)),Y(Bo(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),Y(Bo(n),(()=>"Error in conv3D: Strides should be larger than 0."));let p={x:l,filter:o},d={strides:n,pad:r,dataFormat:a,dilations:s},h=Ts.runKernel(It,p,d);return u?Uo(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});var wl=Bs({conv3DBackpropInput_:function(e,t,n,r,a){Y(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Uo(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];Y(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),Y(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),Y(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Y(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),Y(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));let p={dy:i,filter:n},d={pad:a,strides:r,inputShape:s},h=Ts.runKernel(Nt,p,d);return o?Uo(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});var vl=Bs({conv3dTranspose_:function(e,t,n,r,a){let s=Ls(e,"x","conv3dTranspose"),i=Ls(t,"filter","conv3dTranspose");return wl(n,s,i,r,a)}});var kl=Bs({cos_:function(e){let t={x:Ls(e,"x","cos","float32")};return Ts.runKernel(Tt,t)}});var Il=Bs({cosh_:function(e){let t={x:Ls(e,"x","cosh","float32")};return Ts.runKernel(_t,t)}});var Sl=Bs({cumprod_:function(e,t=0,n=!1,r=!1){let a={x:Ls(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return Ts.runKernel(Ct,a,s)}});var Nl=Bs({cumsum_:function(e,t=0,n=!1,r=!1){let a={x:Ls(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return Ts.runKernel(Et,a,s)}});var Tl=Bs({denseBincount_:function(e,t,n,r=!1){let a=Ls(e,"x","denseBincount"),s=Ls(t,"weights","denseBincount");Y("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),Y(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),Y(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Y(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));let i={x:a,weights:s},o={size:n,binaryOutput:r};return Ts.runKernel(At,i,o)}});var _l=Bs({depthToSpace_:function(e,t,n="NHWC"){let r=Ls(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];Y(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),Y(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),Y(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),Y(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));let o={x:r},l={blockSize:t,dataFormat:n};return Ts.runKernel(Ft,o,l)}});var Cl=Bs({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=Ls(e,"x","depthwiseConv2d","float32"),l=Ls(t,"filter","depthwiseConv2d","float32"),u=o,p=!1;3===o.rank&&(p=!0,u=Uo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Y(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),Y(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));let d="NHWC"===a?u.shape[3]:u.shape[1];Y(d===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Vo("depthwiseConv2d",r,i);let h={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Ts.runKernel(Rt,h,c);return p?Uo(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var El=Bs({diag_:function(e){let t={x:Ls(e,"x","diag")};return Ts.runKernel(Ot,t)}});var $l=Bs({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){let i=Ls(e,"x","dilation2d"),o=Ls(t,"filter","dilation2d");Y(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),Y(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),Y("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=Uo(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),Y(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));let p={x:l,filter:o},d={strides:n,pad:r,dilations:a},h=Ts.runKernel(Lt,p,d);return u?Uo(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Al={};function Fl(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function Rl(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function Dl(e,t){let n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];null==s&&(s=1);let i=t[t.length-a-1];if(null==i&&(i=1),1===s)r[n-a-1]=i;else if(1===i)r[n-a-1]=s;else{if(s!==i){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}r[n-a-1]=s}}return r}g(Al,{assertAndGetBroadcastShape:()=>Dl,getBroadcastDims:()=>Fl,getReductionAxes:()=>Rl});var Ml=Bs({equal_:function(e,t){let n=Ls(e,"a","equal","string_or_numeric"),r=Ls(t,"b","equal","string_or_numeric");[n,r]=ys(n,r),Dl(n.shape,r.shape);let a={a:n,b:r};return Ts.runKernel(jt,a)}});var Ol=Bs({where_:function(e,t,n){let r=Ls(t,"a","where"),a=Ls(n,"b","where"),s=Ls(e,"condition","where","bool"),i=Dl(Dl(s.shape,r.shape),a.shape),o={condition:ol(s,i),t:ol(r,i),e:ol(a,i)};return Ts.runKernel(wr,o)}});var Ll=Bs({zerosLike_:function(e){let t={x:Ls(e,"x","zerosLike")};return Ts.runKernel(na,t)}});var zl=Bs({divNoNan_:function(e,t){let n=Ls(e,"a","div"),r=Ls(t,"b","div");[n,r]=ys(n,r);let a=co(n,r),s=Ll(a),i=Ml(r,s);return Ol(i,s,a)}});var Pl=Bs({dot_:function(e,t){let n=Ls(e,"t1","dot"),r=Ls(t,"t2","dot");Y(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(Y(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){let e=Uo(n,[1,-1]),t=Uo(r,[-1,1]),a=qo(e,t);return Uo(a,[])}if(1===n.rank&&2===r.rank){let e=Uo(n,[1,-1]),t=Uo(r,[r.shape[0],r.shape[1]]),a=qo(e,t);return Uo(a,[a.size])}if(2===n.rank&&1===r.rank){let e=Uo(r,[-1,1]),t=qo(n,e);return Uo(t,[t.size])}{let e=Uo(r,[r.shape[0],r.shape[1]]);return qo(n,e)}}});var Bl=Bs({einsum_:function(e,...t){let n=t.map(((e,t)=>Ls(e,`tensors${t}`,"einsum"))),r={equation:e};return Ts.runKernel(Vt,n,r)}});var Wl=Bs({elu_:function(e){let t={x:Ls(e,"x","elu","float32")};return Ts.runKernel(Ut,t)}});var Vl=Bs({ensureShape_:function(e,t){let n=Ls(e,"x","ensureShape","string_or_numeric");if(!te(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}});var Ul=Bs({erf_:function(e){let t=Ls(e,"x","erf");Y("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Bi(t,"float32"));let n={x:t};return Ts.runKernel(Ht,n)}});function Gl(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Hl(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function jl(e,t){let n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function ql(e,t){return Hl(e,t.map((e=>1)),t)}function Kl(e,t,n){Y(Gl(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Xl(e,t){if(Gl(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Yl(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Zl(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var Jl=Bs({max_:function(e,t=null,n=!1){let r={x:Ls(e,"x","max")},a={reductionIndices:t,keepDims:n};return Ts.runKernel(Cn,r,a)}});var Ql=Bs({min_:function(e,t=null,n=!1){let r={x:Ls(e,"x","min")},a={axis:t,keepDims:n};return Ts.runKernel(On,r,a)}});var eu=Bs({pow_:function(e,t){let n=Ls(e,"base","pow"),r=Ls(t,"exp","pow");[n,r]=ys(n,r);let a={a:n,b:r};return Ts.runKernel(Jn,a)}});function tu(e,t){if((Ga(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Ga(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Vs(e,[],[],t)}var nu=Bs({sqrt_:function(e){let t={x:Ls(e,"x","sqrt","float32")};return Ts.runKernel(Cr,t)}});var ru=Bs({square_:function(e){let t=Ls(e,"x","square");return Ts.runKernel("Square",{x:t},{})}});var au=Bs({sum_:function(e,t=null,n=!1){let r=Ls(e,"x","sum");"bool"===r.dtype&&(r=Bi(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return Ts.runKernel(Er,a,s)}});function su(e,t,n=null){if(0===e.rank)return mo(e);if(1!==e.rank&&null===n)return su(Uo(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return au(mo(e),n);if(t===1/0)return Jl(mo(e),n);if(t===-1/0)return Ql(mo(e),n);if("euclidean"===t||2===t)return nu(au(eu(mo(e),tu(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Jl(au(mo(e),n[0]),n[1]-1);if(t===1/0)return Jl(au(mo(e),n[1]),n[0]);if(t===-1/0)return Ql(au(mo(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return nu(au(ru(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var iu=Bs({norm_:function(e,t="euclidean",n=null,r=!1){let a=su(e=Ls(e,"x","norm"),t,n),s=a.shape;if(r){let t=pe(n,e.shape);s=ql(a.shape,t)}return Uo(a,s)}});var ou=Bs({euclideanNorm_:function(e,t=null,n=!1){return iu(e,"euclidean",t,n)}});var lu=Bs({exp_:function(e){let t={x:Ls(e,"x","exp")};return Ts.runKernel(qt,t)}});var uu=Bs({expandDims_:function(e,t=0){let n=Ls(e,"x","expandDims","string_or_numeric");Y(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));let r={input:n},a={dim:t};return Ts.runKernel(Kt,r,a)}});var pu=Bs({expm1_:function(e){let t={x:Ls(e,"x","expm1")};return Ts.runKernel(Xt,t)}});var du=Bs({tile_:function(e,t){let n=Ls(e,"x","tile","string_or_numeric");Y(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));let r={x:n},a={reps:t};return Ts.runKernel(Kr,r,a)}});var hu=Bs({eye_:function(e,t,n,r="float32"){null==t&&(t=e);let a=Pi([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);let i=Uo(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return du(uu(i,0),[n[0],1,1]);if(2===n.length)return du(uu(uu(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return du(uu(uu(uu(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var cu=Bs({floor_:function(e){let t={x:Ls(e,"x","floor","float32")};return Ts.runKernel(Qt,t)}});var fu=Bs({gather_:function(e,t,n=0,r=0){let a={x:Ls(e,"x","gather"),indices:Ls(t,"indices","gather","int32")},s={axis:n,batchDims:r};return Ts.runKernel(nn,a,s)}});var mu=Bs({greater_:function(e,t){let n=Ls(e,"a","greater","string_or_numeric"),r=Ls(t,"b","greater","string_or_numeric");[n,r]=ys(n,r),Dl(n.shape,r.shape);let a={a:n,b:r};return Ts.runKernel(an,a)}});var gu=Bs({greaterEqual_:function(e,t){let n=Ls(e,"a","greaterEqual","string_or_numeric"),r=Ls(t,"b","greaterEqual","string_or_numeric");[n,r]=ys(n,r),Dl(n.shape,r.shape);let a={a:n,b:r};return Ts.runKernel(sn,a)}});var yu=Bs({imag_:function(e){let t={input:Ls(e,"input","imag")};return Ts.runKernel(un,t)}});var bu=Bs({isFinite_:function(e){let t={x:Ls(e,"x","isFinite")};return Ts.runKernel(pn,t)}});var xu=Bs({isInf_:function(e){let t={x:Ls(e,"x","isInf")};return Ts.runKernel(dn,t)}});var wu=Bs({isNaN_:function(e){let t={x:Ls(e,"x","isNaN")};return Ts.runKernel(hn,t)}});var vu=Bs({leakyRelu_:function(e,t=.2){let n={x:Ls(e,"x","leakyRelu")},r={alpha:t};return Ts.runKernel(cn,n,r)}});var ku=Bs({less_:function(e,t){let n=Ls(e,"a","less","string_or_numeric"),r=Ls(t,"b","less","string_or_numeric");[n,r]=ys(n,r),Dl(n.shape,r.shape);let a={a:n,b:r};return Ts.runKernel(fn,a)}});var Iu=Bs({lessEqual_:function(e,t){let n=Ls(e,"a","lessEqual","string_or_numeric"),r=Ls(t,"b","lessEqual","string_or_numeric");[n,r]=ys(n,r),Dl(n.shape,r.shape);let a={a:n,b:r};return Ts.runKernel(mn,a)}});function Su(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return Ts.runKernel(gn,{},r)}var Nu=Bs({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){let s=Ls(e,"x","localResponseNormalization");Y(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),Y(re(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=Uo(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},p=Ts.runKernel(Nn,l,u);return o?Uo(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});var Tu=Bs({log_:function(e){let t={x:Ls(e,"x","log","float32")};return Ts.runKernel(yn,t)}});var _u=Bs({log1p_:function(e){let t={x:Ls(e,"x","log1p")};return Ts.runKernel(bn,t)}});function Cu(e){return Y(Ie(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{let r=Ls(t,"x","tf.grad","string_or_numeric"),a=null!=n?Ls(n,"dy","tf.grad"):null;return Ts.tidy((()=>{let{value:t,grads:n}=Ts.gradients((()=>e(r)),[r],a);return null!=a&&Z(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Du(n),n[0]}))}}function Eu(e){return Y(Ie(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{Y(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));let r=zs(t,"args","tf.grads","string_or_numeric"),a=null!=n?Ls(n,"dy","tf.grads"):null;return Ts.tidy((()=>{let{value:t,grads:n}=Ts.gradients((()=>e(...r)),r,a);return null!=a&&Z(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Du(n),n}))}}function $u(e){return Y(Ie(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{Y(t instanceof rs,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),Y(null==n||n instanceof rs,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));let{grads:r,value:a}=Ts.gradients((()=>e(t)),[t],n);return Du(r),{grad:r[0],value:a}}}function Au(e){return Y(Ie(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{Y(Array.isArray(t)&&t.every((e=>e instanceof rs)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),Y(null==n||n instanceof rs,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));let r=Ts.gradients((()=>e(...t)),t,n);return null!=n&&Z(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Du(r.grads),r}}function Fu(e,t){Y(Ie(e),(()=>"The f passed in variableGrads(f) must be a function")),Y(null==t||Array.isArray(t)&&t.every((e=>e instanceof ss)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));let n=null!=t;if(!n){t=[];for(let e in Ts.registeredVariables)t.push(Ts.registeredVariables[e])}let r=n?t.filter((e=>!e.trainable)):null,a=t.length;Y((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));let{value:s,grads:i}=Ts.gradients(e,t,null,!0);Y(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Y(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));let o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function Ru(e){return Ts.customGrad(e)}function Du(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var Mu=Bs({neg_:function(e){let t={x:Ls(e,"x","neg")};return Ts.runKernel(Vn,t)}});var Ou=Bs({softplus_:function(e){let t={x:Ls(e,"x","softplus")};return Ts.runKernel(_r,t)}});var Lu=Bs({logSigmoid_:function(e){let t=Ls(e,"x","logSigmoid");return Ru((e=>({value:Mu(Ou(Mu(e))),gradFunc:t=>fo(t,Ko(Mu(e)))})))(t)}});var zu=Bs({sub_:function(e,t){let n=Ls(e,"a","sub"),r=Ls(t,"b","sub");[n,r]=ys(n,r);let a={a:n,b:r};return Ts.runKernel(Hr,a)}});var Pu=Bs({logSoftmax_:function(e,t=-1){let n=Ls(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Ru(((e,n)=>{let r=Jl(e,t,!0),a=zu(e,r),s=zu(Bi(a,"float32"),Tu(au(lu(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[r]=n,a=lu(r);return zu(e,fo(au(e,t,!0),a))}}}))(n)}});var Bu=Bs({logSumExp_:function(e,t=null,n=!1){let r=Ls(e,"x","logSumExp"),a=pe(t,r.shape),s=Jl(r,a,!0),i=zu(r,s),o=lu(i),l=au(o,a),u=Tu(l),p=po(Uo(s,u.shape),u);if(n){let e=ql(p.shape,a);return Uo(p,e)}return p}});var Wu=Bs({logicalAnd_:function(e,t){let n=Ls(e,"a","logicalAnd","bool"),r=Ls(t,"b","logicalAnd","bool");Dl(n.shape,r.shape);let a={a:n,b:r};return Ts.runKernel(xn,a)}});var Vu=Bs({logicalNot_:function(e){let t={x:Ls(e,"x","logicalNot","bool")};return Ts.runKernel(wn,t)}});var Uu=Bs({logicalOr_:function(e,t){let n=Ls(e,"a","logicalOr","bool"),r=Ls(t,"b","logicalOr","bool");Dl(n.shape,r.shape);let a={a:n,b:r};return Ts.runKernel(vn,a)}});var Gu=Bs({logicalXor_:function(e,t){let n=Ls(e,"a","logicalXor","bool"),r=Ls(t,"b","logicalXor","bool");return Dl(n.shape,r.shape),Wu(Uu(e,t),Vu(Wu(e,t)))}}),Hu=2147483648;var ju=Bs({searchSorted_:function(e,t,n="left"){let r=Ls(e,"sortedSequence","searchSorted"),a=Ls(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=Uo(r,[-1,s]),l=Uo(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Q(l.shape)>=Hu)throw new Error(`values tensor size must less than ${Hu}`);if(o.shape[1]>=Hu)throw new Error(`trailing dim_size must less than ${Hu} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},p={side:n};return Ts.runKernel(xr,u,p)}});function qu(e,t){return ju(e,t,"left")}var Ku=Bs({maxPool_:function(e,t,n,r,a){let s=Ls(e,"x","maxPool"),i=s,o=!1;3===s.rank&&(o=!0,i=Uo(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Y(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),Y(Po(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Vo("maxPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},p=Ts.runKernel($n,l,u);return o?Uo(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});var Xu=Bs({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=Ls(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=Uo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Y(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),Y("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Vo("maxPool3d",r,a);let u={x:o},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},d=Ts.runKernel(Fn,u,p);return l?Uo(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Yu=Bs({maxPoolWithArgmax_:function(e,t,n,r,a=!1){let s={x:Ls(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=Ts.runKernel(Dn,s,i);return{result:o[0],indexes:o[1]}}});var Zu=Bs({maximum_:function(e,t){let n=Ls(e,"a","maximum"),r=Ls(t,"b","maximum");[n,r]=ys(n,r),"bool"===n.dtype&&(n=Bi(n,"int32"),r=Bi(r,"int32")),Dl(n.shape,r.shape);let a={a:n,b:r};return Ts.runKernel(En,a)}});var Ju=Bs({mean_:function(e,t=null,n=!1){let r={x:Ls(e,"x","mean")},a={axis:t,keepDims:n};return Ts.runKernel(Mn,r,a)}});function Qu(e,t="float32"){if(Fe(e),"complex64"===t){let t=Qu(e,"float32"),n=Qu(e,"float32");return Ws(t,n)}let n=$e(Q(e),t);return Ts.makeTensor(n,e,t)}function ep(e,t="float32"){if(Fe(e),"complex64"===t){let t=ep(e,"float32"),n=Qu(e,"float32");return Ws(t,n)}let n=Ee(Q(e),t);return Ts.makeTensor(n,e,t)}function tp(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Ls(e,"x","meshgrid",e instanceof rs?e.dtype:"float32");if(void 0===t)return[r];let a=Ls(t,"y","meshgrid",t instanceof rs?t.dtype:"float32"),s=Q(r.shape),i=Q(a.shape);return"xy"===n?(r=Uo(r,[1,-1]),a=Uo(a,[-1,1]),[qo(ep([i,1],r.dtype),r),qo(a,ep([1,s],a.dtype))]):(r=Uo(r,[-1,1]),a=Uo(a,[1,-1]),[qo(r,ep([1,i],r.dtype)),qo(ep([s,1],a.dtype),a)])}var np=Bs({minimum_:function(e,t){let n=Ls(e,"a","minimum"),r=Ls(t,"b","minimum");[n,r]=ys(n,r),"bool"===n.dtype&&(n=Bi(n,"int32"),r=Bi(r,"int32")),Dl(n.shape,r.shape);let a={a:n,b:r};return Ts.runKernel(Ln,a)}});var rp=Bs({mirrorPad_:function(e,t,n){Y("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));let r=Ls(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Y(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));let a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)Y(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Y(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));let s={paddings:t,mode:n},i={x:r};return Ts.runKernel(zn,i,s)}});var ap=Bs({mod_:function(e,t){let n=Ls(e,"a","mod"),r=Ls(t,"b","mod");[n,r]=ys(n,r);let a={a:n,b:r};return Ts.runKernel(Pn,a)}});var sp=Bs({moments_:function(e,t=null,n=!1){let r=pe(t,(e=Ls(e,"x","moments")).shape),a=Ju(e,r,n),s=a.shape;n||(s=ql(a.shape,r));let i=ru(zu(Bi(e,"float32"),Uo(a,s)));return{mean:a,variance:Ju(i,r,n)}}});var ip=Bs({multiRNNCell_:function(e,t,n,r){let a=Ls(t,"data","multiRNNCell"),s=zs(n,"c","multiRNNCell"),i=zs(r,"h","multiRNNCell"),o=a,l=[];for(let t=0;t<e.length;t++){let n=e[t](o,s[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}let u=[],p=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),p.push(l[e+1]);return[u,p]}});var op=Bs({multinomial_:function(e,t,n,r=!1){let a=Ls(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:1===i?Uo(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=Ts.runKernel(Bn,o,l);return 1===i?Uo(u,[u.size]):u}});var lp=Bs({notEqual_:function(e,t){let n=Ls(e,"a","notEqual","string_or_numeric"),r=Ls(t,"b","notEqual","string_or_numeric");[n,r]=ys(n,r),Dl(n.shape,r.shape);let a={a:n,b:r};return Ts.runKernel(Un,a)}});var up=Bs({oneHot_:function(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:Ls(e,"indices","oneHot","int32")},i={dtype:a,depth:t,onValue:n,offValue:r};return Ts.runKernel(Kn,s,i)}});var pp=Bs({onesLike_:function(e){let t={x:Ls(e,"x","onesLike")};return Ts.runKernel(qn,t)}});var dp=Bs({outerProduct_:function(e,t){let n=Ls(e,"v1","outerProduct"),r=Ls(t,"v2","outerProduct");Y(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));let a=Uo(n,[-1,1]),s=Uo(r,[1,-1]);return qo(a,s)}});var hp=Bs({pad_:function(e,t,n=0){let r=Ls(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return Ts.runKernel(Yn,s,a)}});var cp=Bs({pad1d_:function(e,t,n=0){return Y(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),hp(e,[t],n)}});var fp=Bs({pad2d_:function(e,t,n=0){return Y(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),hp(e,t,n)}});var mp=Bs({pad3d_:function(e,t,n=0){return Y(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),hp(e,t,n)}});var gp=Bs({pad4d_:function(e,t,n=0){return Y(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),hp(e,t,n)}});var yp=Bs({spaceToBatchND_:function(e,t,n){let r=Ls(e,"x","spaceToBatchND");Y(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),Y(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Y(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));let a={x:r},s={blockShape:t,paddings:n};return Ts.runKernel($r,a,s)}});var bp=Bs({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let o=Ls(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=Uo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Y(Po(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));let p,d=Eo(l.shape,t,s,a,r),h=[d.dilationHeight,d.dilationWidth];p="same"===r?function(e,t){let n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([d.filterHeight,d.filterWidth],h):[[0,0],[0,0]];let c=1===h[0]&&1===h[1],[f,m]=function(e,t,n){let r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([d.inHeight,d.inWidth],h,p),g=c?r:"valid",y=c?l:yp(l,h,f),b=("avg"===n?()=>Go(y,t,s,g,i):()=>Ku(y,t,s,g,i))(),x=c?b:Jo(b,h,m);return u?Uo(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});var xp=Bs({prelu_:function(e,t){let n={x:Ls(e,"x","prelu"),alpha:Ls(t,"alpha","prelu")};return Ts.runKernel(Qn,n)}});var wp=Bs({prod_:function(e,t=null,n=!1){let r=Ls(e,"x","prod");"bool"===r.dtype&&(r=Bi(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return Ts.runKernel(er,a,s)}});var vp=Bs({raggedGather_:function(e,t,n,r){let a={paramsNestedSplits:e.map(((e,t)=>Ls(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:Ls(t,"paramsDenseValues","raggedGather"),indices:Ls(n,"indices","raggedGather","int32")},s={outputRaggedRank:r},i=Ts.runKernel(tr,a,s);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}});var kp=Bs({raggedRange_:function(e,t,n){let r=Ls(e,"starts","raggedRange"),a={starts:r,limits:Ls(t,"limits","raggedRange",r.dtype),deltas:Ls(n,"deltas","raggedRange",r.dtype)},s=Ts.runKernel(nr,a);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}});var Ip=Bs({raggedTensorToTensor_:function(e,t,n,r,a){let s=Ls(e,"shape","raggedTensorToTensor","int32"),i=Ls(t,"values","raggedTensorToTensor"),o={shape:s,values:i,defaultValue:Ls(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:r.map(((e,t)=>Ls(e,`tensors${t}`,"raggedTensorToTensor","int32")))},l={rowPartitionTypes:a};return Ts.runKernel(rr,o,l)}});var Sp=Bs({rand_:function(e,t,n){Fe(e);let r=Q(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return Ts.makeTensor(a,e,n)}}),Np=y(E()),Tp={};g(Tp,{TEST_EPSILON_FLOAT16:()=>Cp,createVideoElement:()=>Pp,encodeStrings:()=>zp,expectArrayBuffersEqual:()=>Lp,expectArraysClose:()=>Ep,expectArraysEqual:()=>Rp,expectNumbersClose:()=>Dp,expectPromiseToFail:()=>Fp,expectValuesInRange:()=>Op,play:()=>Bp,testEpsilon:()=>$p});var _p=.001,Cp=.1;function Ep(e,t,n){return null==n&&(n=$p()),Ap(e,t,((e,t)=>Mp(e,t,n)))}function $p(){return 32===Ts.backend.floatPrecision()?_p:Cp}function Ap(e,t,n){let r=!0;if((Ga(e)||Ga(t))&&(r=!1),Ga(e)&&Ga(t)&&(r=!0),r){let n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=Ds(e),r=Ds(t);if(!ne(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}let a=Ga(e)?e:Ha(e),s=Ga(t)?t:Ha(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){let t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}"undefined"!=typeof expect&&expect().nothing()}function Fp(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!=typeof expect&&expect().nothing()}function Rp(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return xe(e)||xe(e[0])||xe(t)||xe(t[0])?Ap(e,n,((e,t)=>e==t)):Ap(e,t,((e,t)=>Mp(e,t,0)))}function Dp(e,t,n){if(null==n&&(n=$p()),!Mp(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function Mp(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Op(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Lp(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function zp(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?zp(n):e[t]=Va(n)}return e}function Pp(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function Bp(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}var Wp=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=Np.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},Vp=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=Np.alea(a.toString()),this.randn=new Wp(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},Up=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Np.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};var Gp=Bs({randomGamma_:function(e,t,n=1,r="float32",a){if(Fe(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);let s=new Vp(t,n,r,a),i=Pi(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var Hp=Bs({randomNormal_:function(e,t=0,n=1,r,a){if(Fe(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);let s=new Wp(t,n,r,!1,a),i=Pi(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var jp=Bs({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Hp(e,0,1,t,n)}});var qp=Bs({randomUniform_:function(e,t=0,n=1,r="float32",a){Fe(e);let s=Pi(e,r),i=new Up(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});var Kp=Bs({randomUniformInt_:function(e,t,n,r){return qp(e,t,n,"int32",r)}});function Xp(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return Ts.runKernel(ar,{},a)}var Yp=Bs({real_:function(e){let t={input:Ls(e,"input","real")};return Ts.runKernel(sr,t)}});var Zp=Bs({reciprocal_:function(e){let t={x:Ls(e,"x","reciprocal")};return Ts.runKernel(ir,t)}});var Jp=Bs({relu_:function(e){let t={x:Ls(e,"x","relu")};return Ts.runKernel(or,t)}});var Qp=Bs({relu6_:function(e){let t={x:Ls(e,"x","relu6")};return Ts.runKernel(cr,t)}});var ed=Bs({reverse_:function(e,t){let n={x:Ls(e,"x","reverse")},r={dims:t};return Ts.runKernel(fr,n,r)}});var td=Bs({reverse1d_:function(e){let t=Ls(e,"x","reverse");return Y(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),ed(t,0)}});var nd=Bs({reverse2d_:function(e,t){let n=Ls(e,"x","reverse");return Y(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),ed(n,t)}});var rd=Bs({reverse3d_:function(e,t){let n=Ls(e,"x","reverse");return Y(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),ed(n,t)}});var ad=Bs({reverse4d_:function(e,t){let n=Ls(e,"x","reverse");return Y(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),ed(n,t)}});var sd=Bs({round_:function(e){let t={x:Ls(e,"x","round")};return Ts.runKernel(mr,t)}});var id=Bs({rsqrt_:function(e){let t={x:Ls(e,"x","rsqrt","float32")};return Ts.runKernel(gr,t)}});var od=Bs({selu_:function(e){let t={x:Ls(e,"x","selu")};return Ts.runKernel(vr,t)}});var ld=Bs({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){let o=Ls(e,"x","separableConv2d"),l=Ls(t,"depthwiseFilter","separableConv2d"),u=Ls(n,"pointwiseFilter","separableConv2d"),p=o,d=!1;if(3===o.rank&&(d=!0,p=Uo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Y(4===p.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`)),Y(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),Y(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),Y(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),Y(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));let h=l.shape[2],c=l.shape[3];Y(u.shape[2]===h*c,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*c}, but got ${u.shape[2]}.`));let f=Cl(p,l,r,a,i,s),m=ml(f,u,1,"valid",i);return d?Uo(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});var ud=async function(e,t){let n=Ls(e,"x","setdiff1d"),r=Ls(t,"y","setdiff1d");Y(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),Y(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Y(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;let l=new es([o],n.dtype),u=new es([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(l.values[t]=a[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]};var pd=Bs({sign_:function(e){let t={x:Ls(e,"x","sign")};return Ts.runKernel(Nr,t)}});var dd=Bs({sin_:function(e){let t={x:Ls(e,"x","sin","float32")};return Ts.runKernel(Ir,t)}});var hd=Bs({sinh_:function(e){let t={x:Ls(e,"x","sinh")};return Ts.runKernel(Sr,t)}});var cd=Bs({slice1d_:function(e,t,n){let r=Ls(e,"x","slice1d");return Y(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Xo(r,[t],[n])}});var fd=Bs({slice2d_:function(e,t,n){let r=Ls(e,"x","slice2d");return Y(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Xo(r,t,n)}});var md=Bs({slice3d_:function(e,t,n){let r=Ls(e,"x","slice3d");return Y(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Xo(r,t,n)}});var gd=Bs({slice4d_:function(e,t,n){let r=Ls(e,"x","slice4d");return Y(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Xo(r,t,n)}});var yd=Bs({softmax_:function(e,t=-1){let n=Ls(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return Ts.runKernel(Fr,r,a)}});var bd=Bs({fft_:function(e){Y("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));let t={input:e};return Ts.runKernel(Yt,t)}});var xd=Bs({ifft_:function(e){Y("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));let t={input:e};return Ts.runKernel(ln,t)}});var wd=Bs({irfft_:function(e){let t,n=e.shape[e.shape.length-1],r=e.size/n;if(n<=2){let a=Uo(e,[r,n]);t=xd(a)}else{let a=[r,2*(n-1)],s=Uo(Yp(e),[r,n]),i=Uo(yu(e),[r,n]),o=ed(Xo(s,[0,1],[r,n-2]),1),l=fo(ed(Xo(i,[0,1],[r,n-2]),1),tu(-1)),u=jo([s,o],1),p=jo([i,l],1),d=Uo(Ws(u,p),[a[0],a[1]]);t=xd(d)}if(t=Yp(t),3===e.rank&&0!==e.shape[0]){let n=t,r=e.shape[0];t=Uo(t,[r,t.shape[0]/r,t.shape[1]]),n.dispose()}return t}});var vd=Bs({split_:function(e,t,n=0){let r={x:Ls(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Ts.runKernel(Ar,r,a)}});var kd=Bs({rfft_:function(e,t){Y("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){let a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,n=Xo(e,a,s),r=t}else if(null!=t&&t>r){let a=e.shape.map((e=>e));a[e.shape.length-1]=t-r,n=jo([e,Qu(a)],e.shape.length-1),r=t}else n=e;let s=Ll(n),i=Uo(Ws(n,s),[a,r]),o=bd(i),l=Math.floor(r/2)+1,u=Yp(o),p=yu(o),d=vd(u,[l,r-l],u.shape.length-1),h=vd(p,[l,r-l],p.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,Uo(Ws(d[0],h[0]),c)}});var Id=Bs({squaredDifference_:function(e,t){let n=Ls(e,"a","squaredDifference"),r=Ls(t,"b","squaredDifference");[n,r]=ys(n,r),Dl(n.shape,r.shape);let a={a:n,b:r};return Ts.runKernel(zr,a,{})}});var Sd=Bs({squeeze_:function(e,t){let n=Ls(e,"x","squeeze","string_or_numeric");return Uo(n,de(n.shape,t).newShape)}});var Nd=Bs({stack_:function(e,t=0){let n=zs(e,"tensors","stack","string_or_numeric");Y(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Y(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));let r=n,a={axis:t};return Ts.runKernel(Xn,r,a)}});var Td=Bs({step_:function(e,t=0){let n={x:Ls(e,"x","step")},r={alpha:t};return Ts.runKernel(ra,n,r)}});var _d=Bs({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u={x:Ls(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Ts.runKernel(Wr,u,p)}});var Cd=Bs({tan_:function(e){let t={x:Ls(e,"x","tan","float32")};return Ts.runKernel(jr,t)}});function Ed(e,t){J(e);let n=Ds(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Vs(e,null,n,t)}function $d(e,t,n){if(J(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let r=Ds(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Vs(e,t,r,n)}function Ad(e,t,n){if(J(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let r=Ds(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Vs(e,t,r,n)}function Fd(e,t,n){if(J(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let r=Ds(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Vs(e,t,r,n)}function Rd(e,t,n){if(J(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let r=Ds(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Vs(e,t,r,n)}function Dd(e,t,n){if(J(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let r=Ds(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Vs(e,t=t||r,r,n)}var Md={};function Od(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function Ld(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Od(n,t,e)}function zd(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let e=a;e<s;++e)i*=n[e];let o=a<1?1:a;return{sliceRank:a,numUpdates:Q(t.shape)/o,sliceSize:i,strides:[...Ne(n.slice(0,a)),1],outputSize:Q(n)}}g(Md,{calculateShapes:()=>zd,validateInput:()=>Ld,validateUpdateShape:()=>Od});var Pd=Bs({tensorScatterUpdate_:function(e,t,n){let r=Ls(e,"tensor","tensorScatterupdate"),a=Ls(t,"indices","tensorScatterupdate","int32"),s=Ls(n,"updates","tensorScatterupdate");if(Ld(s,a,r.shape),r.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${s.dtype}.`);let i={tensor:r,indices:a,updates:s};return Ts.runKernel(br,i,{})}});var Bd=Bs({topk_:function(e,t=1,n=!0){let r=Ls(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=Ts.runKernel(Xr,s,i);return{values:o,indices:l}}});var Wd=Bs({truncatedNormal_:function(e,t=0,n=1,r,a){if(Fe(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");let s=new Wp(t,n,r,!0,a),i=Pi(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var Vd=Bs({unique_:function(e,t=0){let n=Ls(e,"x","unique","string_or_numeric");Y(n.rank>0,(()=>"The input tensor must be at least 1D"));let r={x:n},a={axis:t},[s,i]=Ts.runKernel(Jr,r,a);return{values:s,indices:i}}});var Ud=Bs({unsortedSegmentSum_:function(e,t,n){let r=Ls(e,"x","unsortedSegmentSum"),a=Ls(t,"segmentIds","unsortedSegmentSum","int32");Y(re(n),(()=>"numSegments must be of dtype int"));let s={x:r,segmentIds:a},i={numSegments:n};return Ts.runKernel(ea,s,i)}});var Gd=Bs({unstack_:function(e,t=0){let n=Ls(e,"x","unstack","string_or_numeric");Y(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));let r={value:n},a={axis:t};return Ts.runKernel(Qr,r,a)}});function Hd(e,t){return ju(e,t,"right")}function jd(e,t=!0,n,r){return Ts.makeVariable(e,t,n,r)}function qd(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let r=Pi(e,"int32"),a=Pi([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var Kd=async function(e){let t=Ls(e,"condition","whereAsync","bool"),n=await t.data(),r=qd(t.shape,n);return e!==t&&t.dispose(),r};var Xd=async function(e,t,n){let r=Ls(e,"tensor","boolMask"),a=Ls(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;Y(i>0,(()=>"mask cannot be scalar")),Z(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];let u=o.slice(0,s).concat([l],o.slice(s+i)),p=Uo(r,u),d=Uo(a,[-1]),h=await Kd(d),c=Sd(h,[1]),f=fu(p,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),p.dispose(),d.dispose(),h.dispose(),f};var Yd=Bs({transpose_:function(e,t,n){let r=Ls(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),Y(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{Y(e>=0&&e<r.rank,(()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`))})),r.rank<=1)return r.clone();let a={x:r},s={perm:t};return"complex64"===r.dtype?Zi((()=>{let e=Yp(r),t=yu(r);return e=Ts.runKernel(Zr,{x:e},s),t=Ts.runKernel(Zr,{x:t},s),n&&(t=Mu(t)),Ws(e,t)})):Ts.runKernel(Zr,a,s)}});var Zd=Bs({movingAverage_:function(e,t,n,r,a=!0){let s=Ls(e,"v","movingAverage"),i=Ls(t,"x","movingAverage"),o=Ls(n,"decay","movingAverage");bs(s,i),Y(ne(s.shape,i.shape),(()=>"Shape mismatch in v and x"));let l=tu(1),u=zu(l,o),p=fo(zu(i,s),u);if(a){Y(null!=r,(()=>"When using zeroDebias: true, step is required."));let e=Ls(r,"step","movingAverage");p=co(p,zu(l,eu(o,e)))}return po(s,p)}});var Jd=Bs({scatterND_:function(e,t,n){Fe(n);let r=Ls(e,"indices","scatterND","int32"),a=Ls(t,"updates","scatterND");Ld(a,r,n);let s={indices:r,updates:a},i={shape:n};return Ts.runKernel(yr,s,i)}});var Qd=Bs({sparseToDense_:function(e,t,n,r=0){Fe(n);let a=Ls(e,"sparseIndices","sparseToDense","int32"),s=Ls(t,"sparseValues","sparseToDense","string_or_numeric"),i=Ls(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return Ts.runKernel(Lr,o,l)}});var eh=Bs({gatherND_:function(e,t){let n=Ls(t,"indices","gatherND","int32"),r={params:Ls(e,"x","gatherND","string_or_numeric"),indices:n};return Ts.runKernel(rn,r)}});var th=Bs({dropout_:function(e,t,n,r){let a=Ls(e,"x","dropout");if(Y("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),Y(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof rs?a.clone():a;let s=function(e,t){if(null==t)return e.shape.slice();if(ne(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=co(cu(po(qp(s,0,1,"float32",r),i)),i);return fo(a,o)}});function nh(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function rh(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Ed(a,"float32")}var ah=async function(e,t,n=1){let r=Ls(e,"predictions","inTopK"),a=Ls(t,"targets","inTopK");Y(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Y(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),Z(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];Y(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],p=he("bool",l);for(let e=0;e<l;e++){let t=e*u,r=i.subarray(t,t+u),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),p[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){p[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Us(p,a.shape,"bool")},sh={};g(sh,{conv2d:()=>dh,depthwiseConv2d:()=>fh,matMul:()=>mh});var ih=Bs({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=Uo(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Uo(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Y(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),Y(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),Y(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));let u="NHWC"===s?o.shape[3]:o.shape[1],p="NHWC"===s?l.shape[3]:l.shape[1];Y(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),Y(p===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${n[3]}).`)),Vo("conv2dDerFilter",a,i);let d={x:o,dy:l},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return Ts.runKernel(vt,d,h)}});function oh(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return fo(e,Td(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function lh(e,t){let n=t,r=Rl(e.shape,t.shape);return r.length>0&&(n=au(n,r)),Uo(n,e.shape)}function uh(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Jp(e);if("elu"===t)return Wl(e);if("relu6"===t)return Qp(e);if("prelu"===t)return xp(e,n);if("leakyrelu"===t)return vu(e,r);if("sigmoid"===t)return Ko(e);throw new Error(`Unknown fused activation ${t}.`)}var ph=(e,t)=>!(e>0)||"linear"===t;var dh=Bs({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:p}){if(l=l||"linear",!1===ph(Ts.state.gradientDepth,l)){Y("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let d=ml(e,t,n,r,a,s,i);return null!=o&&(d=po(d,o)),uh(d,l,u,p)}let d=Ls(e,"x","conv2d","float32"),h=Ls(t,"filter","conv2d","float32"),c=d,f=!1;3===d.rank&&(f=!0,c=Uo(d,[1,d.shape[0],d.shape[1],d.shape[2]])),Y(4===c.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`)),Y(4===h.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`)),Vo("fused conv2d",r,i);let m="NHWC"===a?c.shape[3]:c.shape[1];Y(h.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${h.shape[2]}.`)),Y(Po(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let g,y,b=Ao(c.shape,h.shape,n,s,r,i);if(null!=o&&(g=Ls(o,"bias","fused conv2d"),[g]=ys(g,d),"NHWC"===a?Dl(b.outShape,g.shape):(Y(g.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`)),Y(0===g.shape.length||g.shape[0]===b.outChannels||1===g.shape[0],(()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${b.outChannels})`)))),null!=u){let e=u.shape;if(Y(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)Y(1===e[0]||e[0]===b.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`));else if(3===e.length)try{Dl(e,b.outShape)}catch(t){let n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(n)}y=Ls(u,"prelu weights","fused conv2d")}let x=(e,t)=>{Y("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));let[i,o,u,p]=t,d=oh(e,u,l);Y(zo(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));let h=[yl(o.shape,d,i,n,r),ih(o,d,i.shape,n,r)];if(null!=p){let e=lh(p,d);h.push(e)}return h},w={x:c,filter:h,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:p};return null==o?Ru(((e,t,n)=>{let r=Ts.runKernel(oa,w,v);return n([t,e,r]),f&&(r=Uo(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(c,h):Ru(((e,t,n,r)=>{let a=Ts.runKernel(oa,w,v);return r([t,e,a,n]),f&&(a=Uo(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(c,h,g)}});var hh=Bs({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=Uo(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Uo(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},p={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return Ts.runKernel(Dt,u,p)}});var ch=Bs({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Uo(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},p={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},d=Ts.runKernel(Mt,u,p);return l?Uo(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});var fh=Bs({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:p}){if(!1===ph(Ts.state.gradientDepth,l)){let d=Cl(e,t,n,r,a,s,i);return null!=o&&(d=po(d,o)),uh(d,l,u,p)}let d=Ls(e,"x","depthwiseConv2d","float32"),h=Ls(t,"filter","depthwiseConv2d","float32"),c=d,f=!1;3===d.rank&&(f=!0,c=Uo(d,[1,d.shape[0],d.shape[1],d.shape[2]])),Y(4===c.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),Y(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),Y(c.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==s&&(s=[1,1]),Y(Po(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Vo("fused depthwiseConv2d",r,i);let m,g,y=Ao(c.shape,h.shape,n,s,r,i,!0);null!=o&&(m=Ls(o,"bias","fused conv2d"),[m]=ys(m,d),Dl(y.outShape,m.shape)),null!=u&&(g=Ls(u,"prelu weights","fused depthwiseConv2d"));let b=(e,t)=>{Y(zo(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));let[a,o,u,p]=t,d=oh(e,u,l),h=ch(o.shape,d,a,n,r,s,i),c=hh(o,d,a.shape,n,r,s,i);if(null!=p){return[h,c,lh(m,d)]}return[h,c]},x={x:c,filter:h,bias:m,preluActivationWeights:g},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:p};return null==o?Ru(((e,t,n)=>{let r=Ts.runKernel(la,x,w);return n([t,e,r]),f&&(r=Uo(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(c,h):Ru(((e,t,n,r)=>{let a=Ts.runKernel(la,x,w);return r([t,e,a,n]),f&&(a=Uo(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(c,h,m)}});var mh=Bs({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===ph(Ts.state.gradientDepth,s)){let l=qo(e,t,n,r);return null!=a&&(l=po(l,a)),uh(l,s,i,o)}let l=Ls(e,"a","fused matMul"),u=Ls(t,"b","fused matMul");[l,u]=ys(l,u);let p=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=r?u.shape[u.rank-1]:u.shape[u.rank-2],h=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=Q(f),y=Q(m);Y(p===d,(()=>`Error in fused matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));let b,x,w=Dl(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([h,c]),v=Uo(l,n?[g,p,h]:[g,h,p]),k=Uo(u,r?[y,c,d]:[y,d,c]);null!=a&&(b=Ls(a,"bias","fused matMul"),[b]=ys(b,l),Dl(w,b.shape)),null!=i&&(x=Ls(i,"prelu weights","fused matMul"));let I=(e,t)=>{let i,o,[l,u,p,d]=t,h=oh(Uo(e,p.shape),p,s);if(n||r?!n&&r?(i=qo(h,u,!1,!1),o=qo(h,l,!0,!1)):n&&!r?(i=qo(u,h,!1,!0),o=qo(l,h,!1,!1)):(i=qo(u,h,!0,!0),o=qo(h,l,!0,!0)):(i=qo(h,u,!1,!0),o=qo(l,h,!0,!1)),null!=a){return[i,o,lh(d,h)]}return[i,o]},S={a:v,b:k,bias:b,preluActivationWeights:x},N={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?Ru(((e,t,n)=>{let r=Ts.runKernel(ia,S,N);return n([e,t,r]),{value:Uo(r,w),gradFunc:I}}))(v,k):Ru(((e,t,n,r)=>{let a=Ts.runKernel(ia,S,N);return r([e,t,a,n]),{value:Uo(a,w),gradFunc:I}}))(v,k,b)}});var gh=Bs({hammingWindow_:function(e){return rh(e,.54,.46)}});var yh=Bs({hannWindow_:function(e){return rh(e,.5,.5)}});var bh=Bs({frame_:function(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(Xo(e,s,t)),s+=n;if(r)for(;s<e.size;){let r=s+t-e.size,o=jo([Xo(e,s,t-r),ul([r],a)]);i.push(o),s+=n}return 0===i.length?$d([],[0,t]):Uo(jo(i),[i.length,t])}});var xh=Bs({stft_:function(e,t,n,r,a=yh){null==r&&(r=nh(t));let s=bh(e,t,n),i=fo(s,a(t));return kd(i,r)}});var wh=Bs({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){let i=Ls(e,"image","cropAndResize"),o=Ls(t,"boxes","cropAndResize","float32"),l=Ls(n,"boxInd","cropAndResize","int32"),u=o.shape[0];Y(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),Y(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),Y(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),Y(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Y(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),Y("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));let p={image:i,boxes:o,boxInd:l},d={method:a,extrapolationValue:s,cropSize:r};return Ts.runKernel($t,p,d)}});var vh=Bs({flipLeftRight_:function(e){let t=Ls(e,"image","flipLeftRight","float32");Y(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));let n={image:t};return Ts.runKernel(Jt,n,{})}});var kh=Bs({grayscaleToRGB_:function(e){let t=Ls(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];Y(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),Y(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,du(t,a)}});var Ih=Bs({rotateWithOffset_:function(e,t,n=0,r=.5){let a=Ls(e,"image","rotateWithOffset","float32");Y(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));let s={image:a},i={radians:t,fillValue:n,center:r};return Ts.runKernel(sa,s,i)}});function Sh(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),Y(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Y(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),Y(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),Y(1===t.rank,(()=>"scores must be a 1D tensor")),Y(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),Y(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var Nh=Bs({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=Ls(e,"boxes","nonMaxSuppression","float32"),i=Ls(t,"scores","nonMaxSuppression","float32"),o=Sh(s,i,n,r,a),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return Ts.runKernel(Gn,{boxes:s,scores:i},l)}});function Th(e,t,n){let r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||_h)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function _h(e,t){return e>t?1:e<t?-1:0}function Ch(e,t,n,r,a){return Ah(e,t,n,r,a,0)}function Eh(e,t,n,r,a,s){return Ah(e,t,n,r,a,0,!1,s,!0)}function $h(e,t,n,r,a,s){return Ah(e,t,n,r,a,s,!0)}function Ah(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let e=0;e<t.length;e++)t[e]>a&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Dh);let p=s>0?-.5/s:0,d=[],h=[];for(;d.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=d.length-1;n>=i;--n){let i=Fh(e,s,d[n]);if(i>=r){o=!0;break}if(t.score=t.score*Rh(r,p,i),t.score<=a)break}t.suppressBeginIndex=d.length,o||(t.score===n?(d.push(s),h.push(t.score)):t.score>a&&Th(u,t,Dh))}let c=d.length,f=n-c;o&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));let m={selectedIndices:d};return i&&(m.selectedScores=h),l&&(m.validOutputs=c),m}function Fh(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),p=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(d-u)*(h-p);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,p),y=Math.min(o,d),b=Math.min(l,h),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(c+f-x)}function Rh(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function Dh(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var Mh=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=Ls(e,"boxes","nonMaxSuppressionAsync"),i=Ls(t,"scores","nonMaxSuppressionAsync"),o=Sh(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],p=l[1],{selectedIndices:d}=Ch(u,p,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Ed(d,"int32")};var Oh=Bs({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=Ls(e,"boxes","nonMaxSuppression"),o=Ls(t,"scores","nonMaxSuppression"),l=Sh(i,o,n,r,a,s),u={boxes:i,scores:o},p={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:a=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},d=Ts.runKernel(jn,u,p);return{selectedIndices:d[0],selectedScores:d[1]}}});var Lh=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=Ls(e,"boxes","nonMaxSuppressionAsync"),o=Ls(t,"scores","nonMaxSuppressionAsync"),l=Sh(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),p=u[0],d=u[1],{selectedIndices:h,selectedScores:c}=$h(p,d,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Ed(h,"int32"),selectedScores:Ed(c)}};var zh=Bs({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=Ls(e,"boxes","nonMaxSuppression"),o=Ls(t,"scores","nonMaxSuppression"),l=Sh(i,o,n,r,a,null),u={boxes:i,scores:o},p={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},d=Ts.runKernel(Hn,u,p);return{selectedIndices:d[0],validOutputs:d[1]}}});var Ph=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=Ls(e,"boxes","nonMaxSuppressionAsync"),o=Ls(t,"scores","nonMaxSuppressionAsync"),l=Sh(i,o,n,r,a,null),u=l.maxOutputSize,p=l.iouThreshold,d=l.scoreThreshold,[h,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Eh(h,c,u,p,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Ed(f,"int32"),validOutputs:tu(m,"int32")}};var Bh=Bs({resizeBilinear_:function(e,t,n=!1,r=!1){let a=Ls(e,"images","resizeBilinear");Y(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),Y(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),Y(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Uo(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Ts.runKernel(dr,o,l);return i?Uo(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var Wh=Bs({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){let a=Ls(e,"images","resizeNearestNeighbor");Y(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),Y(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),Y("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Y(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Uo(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Ts.runKernel(ur,o,l);return i?Uo(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var Vh=Bs({threshold_:function(e,t="binary",n=!1,r=.5){let a,s,i,o,l=Ls(e,"image","threshold"),u=l.shape[0]*l.shape[1],p=fo(Ed([r]),255);if(Y(3===l.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`)),Y(3===l.shape[2]||1===l.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`)),Y("int32"===l.dtype||"float32"===l.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`)),Y("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===l.shape[2]){[a,s,i]=vd(l,[1,1,1],-1);let e=fo(a,.2989),t=fo(s,.587),n=fo(i,.114);o=po(po(e,t),n)}else o=e;if("otsu"===t){p=function(e,t){let n,r,a,s,i,o,l=Ed([-1]),u=Ed([0]),p=Ed([0]);for(let d=0;d<e.size-1;d++){n=Xo(e,0,d+1),r=Xo(e,d+1),i=co(au(n),t),o=co(au(r),t);let h=au(fo(n,Xp(0,n.size)));a=co(h,au(n));let c=ul(r.shape,n.size),f=po(Xp(0,r.size),c),m=fo(r,f);s=co(au(m),au(r));let g=zu(a,s),y=zu(a,s),b=fo(i,o);p=fo(fo(b,g),y);let x=mu(p,u);u=Ol(x,p,u),l=Ol(x,Ed([d]),l)}return l}(al(Bi(sd(o),"int32"),Us([]),256),u)}let d=n?Iu(o,p):mu(o,p);return Bi(fo(d,255),"int32")}});var Uh=Bs({transform_:function(e,t,n="nearest",r="constant",a=0,s){let i=Ls(e,"image","transform","float32"),o=Ls(t,"transforms","transform","float32");Y(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),Y(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),Y(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));let l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return Ts.runKernel(Yr,l,u)}});var Gh=Bs({bandPart_:function(e,t,n){let r=Ls(e,"a","bandPart");Y(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));let a,s,i=r.shape,[o,l]=r.shape.slice(-2);"number"==typeof t?(Y(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Y(t<=o,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`)),a=Ls(t<0?o:t,"numLower","bandPart")):(Y("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),a=Ol(ku(t,0),o,np(t,o))),"number"==typeof n?(Y(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),Y(n<=l,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${l}).`)),s=Ls(n<0?l:n,"numUpper","bandPart")):(Y("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),s=Ol(ku(n,0),l,np(n,l)));let u=Uo(Xp(0,o,1,"int32"),[-1,1]),p=Xp(0,l,1,"int32"),d=zu(u,p),h=Wu(Iu(d,a),gu(d,Mu(s))),c=Qu([o,l],r.dtype);return Uo(Nd(Gd(Uo(r,[-1,o,l])).map((e=>Ol(h,e,c)))),i)}});var Hh=Bs({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Y(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));let n=e[0].shape[0];for(let t=1;t<e.length;++t)Y(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=vd(e,e.shape[0],0).map((e=>Sd(e,[0])));Y(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));let n=[],r=e;for(let t=0;t<e.length;++t)n.push(Ts.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){let t=fo(au(fo(n[r],e)),n[r]);e=zu(e,t)}return co(e,iu(e,"euclidean"))})));return t?Nd(n,0):n}});function jh(e,t=!1){return Ts.tidy((()=>{Y(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));let n=e.shape[0],r=e.shape[1],a=hu(n),s=Wi(e),i=$d([[1]],[1,1]),o=Wi(i),l=n>=r?r:n;for(let e=0;e<l;++e){let t=s,l=o,u=a;[o,s,a]=Ts.tidy((()=>{let t=Xo(s,[e,e],[n-e,1]),l=iu(t),u=Xo(s,[e,e],[1,1]),p=Ol(mu(u,0),$d([[-1]]),$d([[1]])),d=zu(u,fo(p,l)),h=co(t,d);o=1===h.shape[0]?Wi(i):jo([i,Xo(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);let c=Mu(co(qo(p,d),l)),f=Xo(s,[e,0],[n-e,r]),m=fo(c,o),g=Yd(o);if(0===e)s=zu(f,qo(m,qo(g,f)));else{let t=zu(f,qo(m,qo(g,f)));s=jo([Xo(s,[0,0],[e,r]),t],0)}let y=Yd(m),b=Xo(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=zu(b,qo(qo(b,o),y));else{let t=zu(b,qo(qo(b,o),y));a=jo([Xo(a,[0,0],[n,e]),t],1)}return[o,s,a]})),Ji([t,l,u])}return!t&&n>r&&(a=Xo(a,[0,0],[n,r]),s=Xo(s,[0,0],[r,r])),[a,s]}))}var qh,Kh=Bs({qr_:function(e,t=!1){if(Y(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return jh(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Gd(Uo(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{let[n,r]=jh(e,t);a.push(n),s.push(r)})),[Uo(Nd(a,0),e.shape),Uo(Nd(s,0),e.shape)]}}});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(qh||(qh={}));var Xh=Bs({computeWeightedLoss_:function(e,t,n=qh.SUM_BY_NONZERO_WEIGHTS){let r=Ls(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=Ls(t,"weights","computeWeightedLoss"));let s=null==a?r:fo(r,a);if(n===qh.NONE)return s;if(n===qh.SUM)return au(s);if(n===qh.MEAN){if(null==a)return Ju(s);{let e=r.size/a.size,t=co(au(s),au(a));return e>1?co(t,tu(e)):t}}if(n===qh.SUM_BY_NONZERO_WEIGHTS){if(null==a)return co(au(s),tu(r.size));{let e=fo(a,ep(r.shape)),t=Bi(au(lp(e,tu(0))),"float32");return co(au(s),t)}}throw Error(`Unknown reduction: ${n}`)}});var Yh=Bs({absoluteDifference_:function(e,t,n,r=qh.SUM_BY_NONZERO_WEIGHTS){let a=Ls(e,"labels","absoluteDifference"),s=Ls(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=Ls(n,"weights","absoluteDifference")),Z(a.shape,s.shape,"Error in absoluteDifference: ");let o=mo(zu(a,s));return Xh(o,i,r)}});var Zh=Bs({cosineDistance_:function(e,t,n,r,a=qh.SUM_BY_NONZERO_WEIGHTS){let s=Ls(e,"labels","cosineDistance"),i=Ls(t,"predictions","cosineDistance"),o=null;null!=r&&(o=Ls(r,"weights","cosineDistance")),Z(s.shape,i.shape,"Error in cosineDistance: ");let l=tu(1),u=zu(l,au(fo(s,i),n,!0));return Xh(u,o,a)}});var Jh=Bs({hingeLoss_:function(e,t,n,r=qh.SUM_BY_NONZERO_WEIGHTS){let a=Ls(e,"labels","hingeLoss"),s=Ls(t,"predictions","hingeLoss"),i=null;null!=n&&(i=Ls(n,"weights","hingeLoss")),Z(a.shape,s.shape,"Error in hingeLoss: ");let o=tu(1);a=zu(fo(tu(2),a),o);let l=Jp(zu(o,fo(a,s)));return Xh(l,i,r)}});var Qh=Bs({huberLoss_:function(e,t,n,r=1,a=qh.SUM_BY_NONZERO_WEIGHTS){let s=Ls(e,"labels","huberLoss"),i=Ls(t,"predictions","huberLoss"),o=null;null!=n&&(o=Ls(n,"weights","huberLoss")),Z(s.shape,i.shape,"Error in huberLoss: ");let l=tu(r),u=mo(zu(i,s)),p=np(u,l),d=zu(u,p),h=po(fo(tu(.5),ru(p)),fo(l,d));return Xh(h,o,a)}});var ec=Bs({logLoss_:function(e,t,n,r=1e-7,a=qh.SUM_BY_NONZERO_WEIGHTS){let s=Ls(e,"labels","logLoss"),i=Ls(t,"predictions","logLoss"),o=null;null!=n&&(o=Ls(n,"weights","logLoss")),Z(s.shape,i.shape,"Error in logLoss: ");let l=tu(1),u=tu(r),p=Mu(fo(s,Tu(po(i,u)))),d=fo(zu(l,s),Tu(po(zu(l,i),u))),h=zu(p,d);return Xh(h,o,a)}});var tc=Bs({meanSquaredError_:function(e,t,n,r=qh.SUM_BY_NONZERO_WEIGHTS){let a=Ls(e,"labels","meanSquaredError"),s=Ls(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=Ls(n,"weights","meanSquaredError")),Z(a.shape,s.shape,"Error in meanSquaredError: ");let o=Id(a,s);return Xh(o,i,r)}});var nc=Bs({sigmoidCrossEntropy_:function(e,t,n,r=0,a=qh.SUM_BY_NONZERO_WEIGHTS){let s=Ls(e,"multiClassLabels","sigmoidCrossEntropy"),i=Ls(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=Ls(n,"weights","sigmoidCrossEntropy")),Z(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let e=tu(r),t=tu(1),n=tu(.5);s=po(fo(s,zu(t,e)),fo(n,e))}let l=function(e,t){let n=Ls(e,"labels","sigmoidCrossEntropyWithLogits"),r=Ls(t,"logits","sigmoidCrossEntropyWithLogits");Z(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=Jp(r),s=fo(r,n),i=_u(lu(Mu(mo(r))));return po(zu(a,s),i)}(s,i);return Xh(l,o,a)}});var rc=Bs({softmaxCrossEntropy_:function(e,t,n,r=0,a=qh.SUM_BY_NONZERO_WEIGHTS){let s=Ls(e,"onehotLabels","softmaxCrossEntropy"),i=Ls(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=Ls(n,"weights","softmaxCrossEntropy")),Z(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let e=tu(r),t=tu(1),n=tu(s.shape[1]);s=po(fo(s,zu(t,e)),co(e,n))}let l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Ru(((e,t,r)=>{let a=Bu(t,[n],!0),s=zu(Bi(t,"float32"),a);r([e,s]);let i=Mu(fo(s,e));return{value:au(i,[n]),gradFunc:(e,t)=>{let[r,a]=t,s=ql(e.shape,[n]);return[fo(Uo(e,s),zu(Bi(r,"float32"),lu(a))),fo(Uo(e,s),zu(lu(a),Bi(r,"float32")))]}}}))(e,t)}(s,i);return Xh(l,o,a)}});var ac=Bs({sparseFillEmptyRows_:function(e,t,n,r){let a=Ls(e,"indices","sparseFillEmptyRows","int32"),s=Ls(t,"values","sparseFillEmptyRows"),i=Ls(n,"denseShape","sparseFillEmptyRows","int32"),o=Ls(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:a,values:s,denseShape:i,defaultValue:o},u=Ts.runKernel(Rr,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});var sc=Bs({sparseReshape_:function(e,t,n){let r=Ls(e,"inputIndices","sparseReshape","int32"),a=Ls(t,"inputShape","sparseReshape","int32"),s=Ls(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:a,newShape:s},o=Ts.runKernel(Dr,i);return{outputIndices:o[0],outputShape:o[1]}}});var ic=Bs({sparseSegmentMean_:function(e,t,n){let r=Ls(e,"data","sparseSegmentMean"),a=Ls(t,"indices","sparseSegmentMean","int32"),s=Ls(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return Ts.runKernel(Mr,i)}});var oc=Bs({sparseSegmentSum_:function(e,t,n){let r=Ls(e,"data","sparseSegmentSum"),a=Ls(t,"indices","sparseSegmentSum","int32"),s=Ls(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return Ts.runKernel(Or,i)}});var lc=Bs({stringNGrams_:function(e,t,n,r,a,s,i,o){let l=Ls(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=Ls(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let p={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},d={data:l,dataSplits:u},h=Ts.runKernel(Vr,d,p);return{nGrams:h[0],nGramsSplits:h[1]}}});var uc=Bs({stringSplit_:function(e,t,n=!0){let r=Ls(e,"input","stringSplit","string"),a=Ls(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:n},i={input:r,delimiter:a},o=Ts.runKernel(Ur,i,s);return{indices:o[0],values:o[1],shape:o[2]}}});var pc=Bs({stringToHashBucketFast_:function(e,t){let n=Ls(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return Ts.runKernel(Gr,a,r)}});var dc=Bs({staticRegexReplace_:function(e,t,n,r=!0){let a=Ls(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:r};return Ts.runKernel(Br,{x:a},s)}}),hc={fft:bd,ifft:xd,rfft:kd,irfft:wd},cc={hammingWindow:gh,hannWindow:yh,frame:bh,stft:xh},fc={flipLeftRight:vh,grayscaleToRGB:kh,resizeNearestNeighbor:Wh,resizeBilinear:Bh,rotateWithOffset:Ih,cropAndResize:wh,nonMaxSuppression:Nh,nonMaxSuppressionAsync:Mh,nonMaxSuppressionWithScore:Oh,nonMaxSuppressionWithScoreAsync:Lh,nonMaxSuppressionPadded:zh,nonMaxSuppressionPaddedAsync:Ph,threshold:Vh,transform:Uh},mc={bandPart:Gh,gramSchmidt:Hh,qr:Kh},gc={absoluteDifference:Yh,computeWeightedLoss:Xh,cosineDistance:Zh,hingeLoss:Jh,huberLoss:Qh,logLoss:ec,meanSquaredError:tc,sigmoidCrossEntropy:nc,softmaxCrossEntropy:rc},yc={sparseFillEmptyRows:ac,sparseReshape:sc,sparseSegmentMean:ic,sparseSegmentSum:oc},bc={stringNGrams:lc,stringSplit:uc,stringToHashBucketFast:pc,staticRegexReplace:dc},xc={};g(xc,{Serializable:()=>wc,SerializationMap:()=>vc,registerClass:()=>kc});var wc=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},vc=class{constructor(){this.classNameMap={}}static getMap(){return null==vc.instance&&(vc.instance=new vc),vc.instance}static register(e){vc.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function kc(e){Y(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Y("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Y(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),vc.register(e)}var Ic=class extends wc{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Ji(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Fu(e,t)}dispose(){null!=this.iterations_&&Ji(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:tu(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Ic,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Sc=class extends Ic{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ts.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Ts.registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Zi((()=>Ll(r).variable(a)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Zi((()=>Ll(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Zi((()=>{let e=po(fo(i,this.rho),fo(ru(s),1-this.rho)),t=fo(co(nu(po(o,this.epsilon)),nu(po(i,this.epsilon))),s),n=po(fo(o,this.rho),fo(ru(t),1-this.rho));i.assign(e),o.assign(n);let a=po(fo(t,-this.learningRate),r);r.assign(a)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ji(this.accumulatedGrads.map((e=>e.variable))),Ji(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},Nc=class extends Ic{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Ts.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Zi((()=>ul(r.shape,this.initialAccumulatorValue).variable(!1)))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;Zi((()=>{let e=po(s,ru(a));s.assign(e);let t=po(fo(co(a,nu(po(e,Ts.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ji(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},Tc=class extends Ic{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Zi((()=>{this.accBeta1=tu(t).variable(),this.accBeta2=tu(n).variable()})),null==r&&(this.epsilon=Ts.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Zi((()=>{let n=zu(1,this.accBeta1),r=zu(1,this.accBeta2);t.forEach(((t,a)=>{let s=Ts.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Zi((()=>Ll(s).variable(i)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Zi((()=>Ll(s).variable(i)))});let o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,p=po(fo(l,this.beta1),fo(o,1-this.beta1)),d=po(fo(u,this.beta2),fo(ru(o),1-this.beta2)),h=co(p,n),c=co(d,r);l.assign(p),u.assign(d);let f=po(fo(co(h,po(nu(c),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign(fo(this.accBeta1,this.beta1)),this.accBeta2.assign(fo(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ji(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Ji(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Zi((()=>{this.accBeta1.assign(eu(this.beta1,this.iterations_+1)),this.accBeta2.assign(eu(this.beta2,this.iterations_+1))}));let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},_c=class extends Ic{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Zi((()=>{this.iteration=tu(0).variable(),this.accBeta1=tu(t).variable()})),null==r&&(this.epsilon=Ts.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Zi((()=>{let n=zu(1,this.accBeta1),r=co(-this.learningRate,po(fo(this.iteration,this.decay),1));t.forEach(((t,a)=>{let s=Ts.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Ll(s).variable(i)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Ll(s).variable(i)});let o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,p=po(fo(l,this.beta1),fo(o,1-this.beta1)),d=fo(u,this.beta2),h=mo(o),c=Zu(d,h);l.assign(p),u.assign(c);let f=po(fo(co(r,n),co(p,po(c,this.epsilon))),s);s.assign(f)})),this.iteration.assign(po(this.iteration,1)),this.accBeta1.assign(fo(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ji(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Ji(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},Cc=class extends Ic{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=Ts.registeredVariables[t];Zi((()=>{let e=po(fo(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Qi(tu(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},Ec=class extends Cc{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=tu(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Ts.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:Zi((()=>Ll(r).variable(!1)))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Zi((()=>{let e,t=po(fo(this.m,a),s);e=this.useNesterov?po(fo(this.c,po(s,fo(t,this.m))),r):po(fo(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ji(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},$c=class extends Ic{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=Ts.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Ts.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Zi((()=>Ll(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Zi((()=>Ll(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Zi((()=>Ll(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Zi((()=>{let e=po(fo(i,this.decay),fo(ru(s),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,a=po(fo(t,this.decay),fo(s,1-this.decay)),l=co(fo(s,this.learningRate),nu(zu(e,po(ru(a),this.epsilon)))),u=po(fo(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);let p=zu(r,u);r.assign(p)}else{let e=po(fo(i,this.decay),fo(ru(s),1-this.decay)),t=po(fo(o,this.momentum),co(fo(s,this.learningRate),nu(po(e,this.epsilon))));i.assign(e),o.assign(t);let n=zu(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ji(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Ji(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Ji(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},Ac=[Sc,Nc,Tc,_c,Ec,$c,Cc];var Fc={};g(Fc,{CompositeArrayBuffer:()=>Hs,browserFiles:()=>Oc,browserHTTPRequest:()=>Hc,concatenateArrayBuffers:()=>Zs,copyModel:()=>Mi,decodeWeights:()=>qs,encodeWeights:()=>js,fromMemory:()=>Xc,fromMemorySync:()=>Yc,getLoadHandlers:()=>ui,getModelArtifactsForJSON:()=>ti,getModelArtifactsForJSONSync:()=>ei,getModelArtifactsInfoForJSON:()=>ni,getSaveHandlers:()=>li,getWeightSpecs:()=>ri,http:()=>Gc,isHTTPScheme:()=>Vc,listModels:()=>Ri,loadWeights:()=>Pc,moveModel:()=>Oi,registerLoadRouter:()=>oi,registerSaveRouter:()=>ii,removeModel:()=>Di,weightsLoaderFactory:()=>Bc,withSaveHandler:()=>Zc,withSaveHandlerSync:()=>Jc});function Rc(e){return new Promise((e=>setTimeout(e))).then(e)}var Dc=class{constructor(e){if(!Pe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Dc.URL_SCHEME)&&(e=e.slice(Dc.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=Hs.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let t=Qs(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Rc((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Rc((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:ni(e)}}}};Dc.URL_SCHEME="downloads://";var Mc=class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{let n=new FileReader;n.onload=n=>{let r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});let s=ti(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){let t=[],n=[];for(let r of e)t.push(...r.weights),n.push(...r.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{let a=new FileReader;a.onload=e=>{let t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map((e=>Js(e.name))),r={};for(let a of e)a.paths.forEach((e=>{let a=Js(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}};function Oc(e){return new Mc(e)}function Lc(e,t,n,r){var a;Y(null!=(a=e)&&Array.isArray(a)&&a.length>0,(()=>"promises must be a none empty array")),function(e,t){Y(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Y(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Y(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{let i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function zc(e,t){null==t&&(t={});let n=null==t.fetchFunc?Pe().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Lc(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Lc(a,t.onProgress,.5,1)}async function Pc(e,t="",n,r){return Bc((e=>zc(e,{requestInit:r})))(e,t,n)}function Bc(e){return async(t,n="",r)=>{let a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=Gs[l]*Q(e.shape),p=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(p(),i[n]=!0)})):p(),o.push(e.name),n+=u}))})),!i.every((e=>e))){let e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));let p=await e(u),d={},h=0;return l.forEach((e=>{let n=t[e].paths.length,r=new Hs(p.slice(h,h+n));s[e].forEach((e=>{let t=qs(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)d[e]=t[e]})),h+=n})),d}}si.registerSaveRouter((e=>Pe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Dc.URL_SCHEME)?function(e="model"){return new Dc(e)}(e.slice(Dc.URL_SCHEME.length)):null));var Wc=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Y("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Pe().platform.fetch,Y(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Y(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=Qs(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){let n=Hs.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:ni(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}let n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return ti(e,(e=>this.loadWeights(e)))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=ri(e),i=[],o=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,await zc(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})]}};function Vc(e){return null!=e.match(Wc.URL_SCHEME_REGEX)}Wc.URL_SCHEME_REGEX=/^https?:\/\//;var Uc=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Vc(e))):Vc(e),n)return Gc(e,t)}return null};function Gc(e,t){return new Wc(e,t)}function Hc(e,t){return Gc(e,t)}si.registerSaveRouter(Uc),si.registerLoadRouter(Uc);var jc=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},qc=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},Kc=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function Xc(e,t,n,r){return new Kc(Yc(...arguments))}function Yc(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new jc(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new jc({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new jc({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Zc(e){return new qc(e)}function Jc(e){return new qc(e)}var Qc={};g(Qc,{confusionMatrix:()=>ef});var ef=Bs({confusionMatrix_:function(e,t,n){let r=Ls(e,"labels","confusionMatrix"),a=Ls(t,"predictions","confusionMatrix");Y(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),Y(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),Y(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),Y(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),Y(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));let s=up(Bi(r,"int32"),n),i=up(Bi(a,"int32"),n),o=Yd(s),l=qo(o,i);return Bi(l,"int32")}}),tf={};g(tf,{draw:()=>pf,fromPixels:()=>df,fromPixelsAsync:()=>of,toPixels:()=>uf});var nf,rf=!1;function af(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=ca(aa,Ts.backendName)){let n={pixels:e},r={numChannels:t};return Ts.runKernel(aa,n,r)}let l,u,[p,d]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i)l=e.getContext("2d").getImageData(0,0,p,d).data;else if(r||n)l=e.data;else if(s||a||o){if(null==nf)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");nf=new OffscreenCanvas(1,1).getContext("2d")}else nf=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});nf.canvas.width=p,nf.canvas.height=d,nf.drawImage(e,0,0,p,d),l=nf.getImageData(0,0,p,d).data}if(4===t)u=new Int32Array(l);else{let e=p*d;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return Ad(u,[d,p,t],"int32")}function sf(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function of(e,t=3){let n=null;if(Pe().getBool("WRAP_TO_IMAGEBITMAP")&&sf(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return af(n,t)}function lf(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function uf(e,t){let n=Ls(e,"img","toPixels");if(!(e instanceof rs)){let e=n;n=Bi(e,"int32"),e.dispose()}lf(n);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){let t=[0,0,0,255];for(let r=0;r<s;r++){let a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}let r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){rf||(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),rf=!0),t.width=a,t.height=r;let e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function pf(e,t,n){let r=Ls(e,"img","draw");if(!(e instanceof rs)){let e=r;r=Bi(e,"int32"),e.dispose()}lf(r),function(e){let t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==n?void 0:n.imageOptions);let a={image:r},s={canvas:t,options:n};Ts.runKernel(Bt,a,s)}var df=Bs({fromPixels_:af}),hf={};function cf(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Q(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let e=0;e<a.length-1;++e)i*=a[e];let o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);let p=[...Ne(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,p]}g(hf,{prepareAndValidate:()=>cf});var ff={};g(ff,{assertParamsValid:()=>yf,computeFlatOffset:()=>$f,computeOutShape:()=>xf,getNormalizedAxes:()=>If,isSliceContinous:()=>Ef,maskToAxes:()=>bf,parseSliceParams:()=>Af,sliceInfo:()=>Ff,startForAxis:()=>_f,startIndicesWithElidedDims:()=>Sf,stopForAxis:()=>Cf,stopIndicesWithElidedDims:()=>Nf,stridesForAxis:()=>Tf,stridesWithElidedDims:()=>wf});var mf=-2,gf=-1;function yf(e,t,n){let r=e.shape.length;Y(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),Y(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)Y(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function bf(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function xf(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function wf(e,t,n,r){let a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function vf(e,t,n){return n<=e?n:n-(t-1)}function kf(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function If(e,t,n,r,a,s,i,o,l){let u=e.length,p=new Array(u),d=new Array(u),h=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;p=Sf(i,l,u,r,e),d=Nf(o,l,u,a,e),h=wf(s,l,u,e)}else for(let t=0;t<u;t++)p[t]=_f(i,r,s,e,t,l),d[t]=Cf(o,a,s,e,t,l),h[t]=Tf(s,t,l);return{begin:p,end:d,strides:h}}function Sf(e,t,n,r,a){let s=[...a],i=kf(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let i=vf(t,n,a),o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function Nf(e,t,n,r,a){let s=[...a],i=kf(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let i=vf(t,n,a),o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){let t=a[e];s[e]<0&&(s[e]+=t),s[e]=G(0,s[e],a[e])}return s}function Tf(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function _f(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=G(0,i,l-1),i}function Cf(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?G(0,i,l):G(-1,i,l-1),i}function Ef(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function $f(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Af(e,t,n){let r,a,s=e.shape.length;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{Y(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(Y(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Ff(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let p=!1,d={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<d.dims;e++)p&&1<<e&o&&d.numAddAxisAfterEllipsis++,1<<e&i&&(p=!0);p||(d.ellipsisMask|=1<<d.dims,d.dims++);let h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(mf),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(gf),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(d,h);let c=!0,f=!0,m=!0,g=[],y=[];for(let t=0;t<e.length;++t){if(0===h.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(h.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}let a=[h.beginMask&1<<t,h.endMask&1<<t],s=[h.strides[t]>0?0:-1,h.strides[t]>0?r:r-1];if(n&&h.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[t];let i=!!(h.beginMask&1<<t&&h.endMask&1<<t);if(h.beginValid&&h.endValid){if(n){let e=h.begin[t]<0?r+h.begin[t]:h.begin[t];if(h.begin[t]=e,h.end[t]=h.begin[t]+1,e<0||e>=r)throw Error(`slice index ${h.begin[t]} of dimension ${t} out of bounds.`)}else h.begin[t]=Rf(h.begin[t],0,h.strides[t],r,a,s),h.end[t]=Rf(h.end[t],1,h.strides[t],r,a,s);let e=1===h.strides[t]&&0===h.begin[t]&&h.end[t]===r;c=c&&e,f=f&&(0===t&&1===h.strides[t]||e)}else c=c&&1===h.strides[t]&&i,f=f&&(0===t&&1===h.strides[t]||i);let o,l=!1;if(h.beginValid&&h.endValid?(o=h.end[t]-h.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=h.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=h.strides[t]<0?0:Math.trunc(o/h.strides[t])+(o%h.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<h.finalShapeGatherIndices.length;++e){let t=h.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===mf&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>h.finalShapeGatherIndices[t]!==mf)),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function Rf(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var Df="4.7.0",Mf=class{static sgd(e){return new Cc(e)}static momentum(e,t,n=!1){return new Ec(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new $c(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Tc(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Sc(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new _c(e,t,n,r,a)}static adagrad(e,t=.1){return new Nc(e,t)}},Of=Mf,Lf="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function zf(){return new Promise((e=>Lf((()=>e()))))}var Pf,Bf={};function Wf(e,t){let n=e[0].length;e.forEach(((e,t)=>{Y(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Y(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));let r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)Y(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Vf(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function Uf(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){let s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}return r}function Gf(e){let t={FIRST_DIM_SIZE:Pf.FIRST_DIM_SIZE,VALUE_ROWIDS:Pf.VALUE_ROWIDS,ROW_LENGTHS:Pf.ROW_LENGTHS,ROW_SPLITS:Pf.ROW_SPLITS,ROW_LIMITS:Pf.ROW_LIMITS,ROW_STARTS:Pf.ROW_STARTS},n=[];for(let r of e){if(!(r in t))break;n.push(t[r])}return n}function Hf(e){return 0===e.length?0:e[0]===Pf.FIRST_DIM_SIZE?e.length-1:e.length}function jf(e,t){if(null==e||null==t)return;let n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){let n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${r}`)}}g(Bf,{ERF_A1:()=>am,ERF_A2:()=>sm,ERF_A3:()=>im,ERF_A4:()=>om,ERF_A5:()=>lm,ERF_P:()=>rm,PARALLELIZE_THRESHOLD:()=>qf,RowPartitionType:()=>Pf,SELU_SCALE:()=>nm,SELU_SCALEALPHA:()=>tm,applyActivation:()=>uh,assertAndGetBroadcastShape:()=>Dl,assertAxesAreInnerMostDims:()=>Kl,assertParamsConsistent:()=>Wf,assignToTypedArray:()=>fm,axesAreInnerMostDims:()=>Gl,calculateShapes:()=>zd,checkEinsumDimSizes:()=>Im,checkPadOnDimRoundingMode:()=>Vo,combineLocations:()=>Hl,combineRaggedTensorToTensorShapes:()=>Uf,complexWithEvenIndex:()=>dm,complexWithOddIndex:()=>hm,computeConv2DInfo:()=>Ao,computeConv3DInfo:()=>Fo,computeDefaultPad:()=>Ro,computeDilation2DInfo:()=>Co,computeOptimalWindowSize:()=>Kf,computeOutAndReduceShapes:()=>jl,computeOutShape:()=>Vf,computePool2DInfo:()=>Eo,computePool3DInfo:()=>$o,convertConv2DDataFormat:()=>Wo,decodeEinsumEquation:()=>vm,eitherStridesOrDilationsAreOne:()=>Po,expandShapeToKeepDim:()=>ql,exponent:()=>gm,exponents:()=>mm,fromStringArrayToUint8:()=>Hm,fromUint8ToStringArray:()=>Gm,getAxesPermutation:()=>Xl,getBroadcastDims:()=>Fl,getComplexWithIndex:()=>cm,getEinsumComputePath:()=>Sm,getEinsumPermutation:()=>km,getFusedBiasGradient:()=>lh,getFusedDyActivation:()=>oh,getImageCenter:()=>Xf,getInnerMostAxes:()=>Zl,getPermuted:()=>Zf,getRaggedRank:()=>Hf,getReductionAxes:()=>Rl,getReshaped:()=>Yf,getReshapedPermuted:()=>Jf,getRowPartitionTypesHelper:()=>Gf,getSliceBeginCoords:()=>Qf,getSliceSize:()=>em,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Cm,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Em,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>$m,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Rm,getSparseReshapeInputOutputMismatchErrorMessage:()=>Mm,getSparseReshapeInputOutputMultipleErrorMessage:()=>Dm,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Am,getSparseReshapeNegativeOutputDimErrorMessage:()=>Fm,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Pm,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Om,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Lm,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>zm,getUndoAxesPermutation:()=>Yl,isIdentityPermutation:()=>Nm,log:()=>pa,mergeRealAndImagArrays:()=>um,prepareAndValidate:()=>cf,prepareSplitSize:()=>_m,segment_util:()=>Bm,shouldFuse:()=>ph,slice_util:()=>ff,splitRealAndImagArrays:()=>pm,stridesOrDilationsArePositive:()=>Bo,tupleValuesAreOne:()=>zo,upcastType:()=>cs,validateDefaultValueShape:()=>jf,validateInput:()=>Ld,validateUpdateShape:()=>Od,warn:()=>ua}),function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Pf||(Pf={}));var qf=30;function Kf(e){return e<=qf?e:Se(e,Math.floor(Math.sqrt(e)))}function Xf(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Yf(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Zf(e,t,n=!0){let r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Jf(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Qf(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function em(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var tm=1.7580993408473768,nm=1.0507009873554805,rm=.3275911,am=.254829592,sm=-.284496736,im=1.421413741,om=-1.453152027,lm=1.061405429;function um(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function pm(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function dm(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function hm(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function cm(e,t){return{real:e[2*t],imag:e[2*t+1]}}function fm(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function mm(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function gm(e,t,n){let r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var ym="->",bm=/->/g,xm=",",wm="...";function vm(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace(bm,"").length)/ym.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${ym}").`);let[r,a]=e.split(ym);Y(-1===r.indexOf(wm),(()=>`The ellipsis notation ("${wm}") is not supported yet.`));let s=r.split(xm),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<a.length;++e){let t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){let t=r[e];-1===o.indexOf(t)&&t!==xm&&o.push(t)}let l=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<s[e].length;++t)l[e].push(o.indexOf(s[e][t]))}let u=o.length,p=[];for(let e=a.length;e<u;++e)p.push(e);return{allDims:o,summedDims:p,idDims:l}}function km(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;let r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Im(e,t,n){let r=new Array(e);for(let e=0;e<n.length;++e){let a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:Y(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function Sm(e,t){let n=e,r=[],a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);let s=[];for(let e=0;e<n.length;++e){let a=Tm(t,n[e]);for(let t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Nm(e){return e.every(((e,t)=>e===t))}function Tm(e,t){let n=[];for(let r=0;r<e.length;++r)(0===e[r].length||-1!==e[r].indexOf(t)||-1===t)&&n.push(r);return n}function _m(e,t,n=0){let r=[];if("number"==typeof t)Y(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{Y(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));let a=t.indexOf(-1);if(-1!==a){let r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}Y(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Cm(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Em(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function $m(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Am(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Fm(e,t){return`size ${e} must be non-negative, not ${t}`}function Rm(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Dm(e,t){return`Input to reshape is a SparseTensor with ${Q(e)}\n  dense values, but the requested shape requires a multiple of ${Q(t)}. inputShape=${e} outputShape= ${t}`}function Mm(e,t){return`Input to reshape is a tensor with ${Q(e)} dense values, but the requested shape has ${Q(t)}. inputShape=${e} outputShape=${t}`}function Om(){return"segment ids must be >= 0"}function Lm(){return"segment ids are not increasing"}function zm(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Pm(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var Bm={};function Wm(e,t){let n,r=!1;for(e<=qf?(n=e,r=!0):n=Se(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Se(e,n+1);return n}function Vm(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Um(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);let i=e.shape[n],o=[],l=1,u=1,p=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),p*=e.shape[t];return{batchSize:l,sliceSize:p,outerSize:u,dimSize:i,outputShape:o}}function Gm(e){try{return e.map((e=>Ua(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Hm(e){return e.map((e=>Va(e)))}g(Bm,{collectGatherOpShapeInfo:()=>Um,computeOutShape:()=>Vm,segOpComputeOptimalWindowSize:()=>Wm});var jm={};g(jm,{nonMaxSuppressionV3Impl:()=>Ch,nonMaxSuppressionV4Impl:()=>Eh,nonMaxSuppressionV5Impl:()=>$h,whereImpl:()=>qd}),function(){for(let e of Ac)kc(e)}();var qm={kernelName:Ge,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fo(e,Td(Bi(n,"float32"),-1))}}},Km={kernelName:He,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=ru(Bi(n,"float32")),r=nu(zu(tu(1),t));return Mu(co(e,r))}}}},Xm={kernelName:je,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=nu(zu(ru(Bi(n,"float32")),1));return co(e,t)}}}},Ym={kernelName:qe,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Dl(n.shape,r.shape);return{a:()=>{let t=e,r=Rl(n.shape,a);return r.length>0&&(t=au(t,r)),Uo(t,n.shape)},b:()=>{let t=e,n=Rl(r.shape,a);return n.length>0&&(t=au(t,n)),Uo(t,r.shape)}}}},Zm={kernelName:Ke,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Jm={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ll(n)}}},Qm={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ll(n)}}},eg={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>co(e,nu(zu(tu(1),ru(Bi(n,"float32")))))}}},tg={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=nu(po(tu(1),ru(Bi(n,"float32"))));return co(e,t)}}}},ng={kernelName:rt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Dl(n.shape,r.shape);return{a:()=>{let t=po(ru(n),ru(r)),s=fo(e,co(r,t)),i=Rl(n.shape,a);return i.length>0&&(s=au(s,i)),Uo(s,n.shape)},b:()=>{let t=po(ru(n),ru(r)),s=Mu(fo(e,co(n,t))),i=Rl(r.shape,a);return i.length>0&&(s=au(s,i)),Uo(s,r.shape)}}}},rg={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>co(e,po(ru(Bi(n,"float32")),1))}}},ag={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>co(e,zu(tu(1),ru(Bi(n,"float32"))))}}};var sg=Bs({avgPool3dGrad_:function(e,t,n,r,a,s){let i=Ls(e,"dy","avgPool3dGrad"),o=Ls(t,"input","avgPool3dGrad"),l=i,u=o,p=!1;4===o.rank&&(p=!0,l=Uo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Uo(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Y(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),Y(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Vo("avgPool3dGrad",a,s);let d={dy:l,input:u},h={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=Ts.runKernel(ot,d,h);return p?Uo(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),ig={kernelName:it,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>sg(e,r,a,s,i,o)}}};var og=Bs({avgPoolGrad_:function(e,t,n,r,a){let s=Ls(e,"dy","avgPoolGrad"),i=Ls(t,"input","avgPoolGrad");Y(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=Uo(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Uo(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Y(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),Y(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));let p={dy:l,input:o},d={filterSize:n,strides:r,pad:a},h=Ts.runKernel(st,p,d);return u?Uo(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),lg={kernelName:at,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>og(e,r,a,s,i)}}},ug={kernelName:lt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>qo(e,a,!1,!1),b:()=>qo(e,r,!0,!1)}:s&&!i?{a:()=>qo(a,e,!1,!0),b:()=>qo(r,e,!1,!1)}:{a:()=>qo(a,e,!0,!0),b:()=>qo(e,r,!0,!0)}:{a:()=>qo(e,a,!1,!0),b:()=>qo(r,e,!0,!1)}}},pg={kernelName:ut,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>yp(e,r,a)}}},dg={kernelName:ht,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>au(e,o,!0)}}},hg={kernelName:ft,gradFunc:e=>({x:()=>e.clone()})},cg={kernelName:mt,gradFunc:e=>({x:()=>Ll(e)})},fg={kernelName:gt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Ol(Wu(gu(r,a),Iu(r,s)),e,Ll(e))}}},mg={kernelName:bt,inputsToSave:["x"],gradFunc:qm.gradFunc},gg={kernelName:xt,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map((e=>e.shape)),{axis:a}=n,s=pe(a,t[0].shape)[0],i=r.map((e=>e[s]));return vd(e,i,s).map((e=>()=>e))}},yg={kernelName:wt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return Y(zo(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>yl(r.shape,e,a,i,o,l),filter:()=>ih(r,e,a.shape,i,o,l)}}},bg={kernelName:kt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>ml(e,a,s,i,o,1,l),filter:()=>ih(e,r,a.shape,s,i,o,l)}}};var xg=Bs({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Uo(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Uo(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Y(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),Y(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),Y(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Y(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),Y(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return Ts.runKernel(St,o,l)}}),wg={kernelName:It,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;Y(zo(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));let[i,o]=t;return{x:()=>wl(i.shape,e,o,a,s),filter:()=>xg(i,e,o.shape,a,s)}}},vg={kernelName:Tt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fo(Mu(dd(Bi(n,"float32"))),e)}}},kg={kernelName:_t,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fo(hd(Bi(n,"float32")),e)}}},Ig={kernelName:Et,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let t=Xl([a],r.rank),n=Nl(e,a,s,!i);return null!=t&&(n=Yd(n,t)),n}}}},Sg={kernelName:Rt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;Y(zo(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));let[l,u]=t;return Y(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),Y(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),Y(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Y(Po(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),Vo("depthwiseConv2d",s,i),{x:()=>ch(l.shape,e,u,a,s,o,i),filter:()=>hh(l,e,u.shape,a,s,o,i)}}},Ng={kernelName:Lt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>Ts.runKernel(zt,s,n),filter:()=>Ts.runKernel(Pt,i,n)}}},Tg={kernelName:Ut,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>Ts.runKernel(Gt,r)}}},_g={kernelName:Ht,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=fo(lu(Mu(ru(n))),2/Math.sqrt(Math.PI));return{x:()=>fo(e,r)}}},Cg={kernelName:qt,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fo(e,n)}}},Eg={kernelName:Kt,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>Uo(e,n.shape)}}},$g={kernelName:Xt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fo(e,lu(n))}}},Ag={kernelName:Qt,gradFunc:e=>({x:()=>Ll(e)})},Fg={kernelName:en,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Dl(n.shape,r.shape);return{a:()=>{let t=co(e,Bi(r,"float32")),s=Rl(n.shape,a);return s.length>0?Uo(au(t,s),n.shape):t},b:()=>{let t=fo(e,Bi(n,"float32")),s=Rl(r.shape,a);s.length>0&&(t=Uo(au(t,s),r.shape));let i=ru(r);return Mu(co(t,Bi(i,"float32")))}}}},Rg={kernelName:tn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?tu(1):o,u=Rl(s.shape,a.shape),p=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)p.push(a.shape[e]);p.push(1)}let d=zu(a,s),h=fo(e,l),c=id(po(i,tu(r))),f=fo(fo(fo(c,c),c),tu(-.5));return{x:()=>1===s.rank?Uo(fo(fo(e,du(Uo(c,[1,1,1,s.shape[0]]),p)),l),a.shape):Uo(fo(fo(e,c),l),a.shape),mean:()=>{let e=fo(fo(c,tu(-1)),h);return 1===s.rank&&(e=au(e,u)),Uo(e,s.shape)},variance:()=>{let e=fo(fo(f,d),h);return 1===s.rank&&(e=au(e,u)),Uo(e,s.shape)},scale:()=>{let t=fo(d,c),n=fo(e,t);return 1===s.rank&&(n=au(n,u)),Uo(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=au(t,u)),Uo(t,s.shape)}}}},Dg={kernelName:nn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s}=n,i=pe(s,r.shape)[0];return{x:()=>{let t=r.shape,n=a.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),p=u.length,d=Mg(0,l),h=Mg(l+1,l+1+p),c=Og([o,[n],u]),f=Uo(e,c),m=Uo(a,[n]),g=Og([[l],d,h]),y=Yd(f,g),b=Ud(y,m,r.shape[i]),x=Yl(g);return b=Yd(b,x),b},indices:()=>a}}};function Mg(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function Og(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var Lg={kernelName:sn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Ll(n),b:()=>Ll(r)}}},zg={kernelName:on,gradFunc:e=>({x:()=>Bi(e,"float32")})},Pg={kernelName:pn,gradFunc:e=>({x:()=>Ll(e)})},Bg={kernelName:dn,gradFunc:e=>({x:()=>Ll(e)})},Wg={kernelName:hn,gradFunc:e=>({x:()=>Ll(e)})},Vg={kernelName:cn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=mu(r,0);return{x:()=>Ol(s,e,fo(e,a))}}},Ug={kernelName:bn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>co(e,po(n,1))}}},Gg={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>co(e,Bi(n,"float32"))}}},Hg={kernelName:In,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let t=lu(r);return zu(e,fo(au(e,a,!0),t))}}}};var jg=Bs({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return Ts.runKernel(Tn,o,l)}}),qg={kernelName:Nn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>jg(r,a,e,s,i,o,l)}}};function Kg(e,t,n,r){return t.rank<n.rank&&(t=Uo(t,ql(t.shape,r))),e.rank<n.rank&&(e=Uo(e,ql(e.shape,r))),{x:()=>fo(e,Bi(Ml(n,t),e.dtype))}}var Xg={kernelName:Cn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=Kg(e,t[1],s,pe(a,s.shape));return{x:()=>i.x()}}},Yg={kernelName:En,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>fo(e,Bi(gu(n,r),"float32")),b:()=>fo(e,Bi(ku(n,r),"float32"))}}};var Zg=Bs({maxPool3dGrad_:function(e,t,n,r,a,s,i){let o=Ls(e,"dy","maxPool3dGrad"),l=Ls(t,"input","maxPool3dGrad"),u=Ls(n,"output","maxPool3dGrad"),p=o,d=l,h=u,c=!1;4===l.rank&&(c=!0,p=Uo(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=Uo(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=Uo(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Y(5===p.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`)),Y(5===d.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`)),Y(5===h.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`)),Vo("maxPool3dGrad",s,i);let f={dy:p,input:d,output:h},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=Ts.runKernel(Rn,f,m);return c?Uo(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Jg={kernelName:Fn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Zg(e,r,a,s,i,o,l)}}};var Qg=Bs({maxPoolGrad_:function(e,t,n,r,a,s,i){let o=Ls(e,"dy","maxPoolGrad"),l=Ls(t,"input","maxPoolGrad"),u=Ls(n,"output","maxPoolGrad");Y(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),Y(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),Y(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Vo("maxPoolGrad",s,i);let p={dy:o,input:l,output:u},d={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return Ts.runKernel(An,p,d)}}),ey={kernelName:$n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>Qg(e,r,a,s,i,o)}}},ty={kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=pe(a,r.shape),i=Q(jl(r.shape,s)[1]);return{x:()=>{let t=r.shape.slice();s.forEach((e=>{t[e]=1}));let n=Uo(e,t);return co(fo(n,ep(r.shape,"float32")),i)}}}},ny={kernelName:On,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=Kg(e,i,s,pe(a,s.shape));return{x:()=>o.x()}}},ry={kernelName:Ln,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>fo(e,Bi(Iu(n,r),"float32")),b:()=>fo(e,Bi(mu(n,r),"float32"))}}},ay={kernelName:zn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Xo(e,s,r.shape)}}},sy={kernelName:Pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Dl(n.shape,r.shape);return{a:()=>{let t=Rl(n.shape,a);return t.length>0?Uo(au(e,t),n.shape):e},b:()=>{let t=fo(e,Mu(cu(co(n,r)))),s=Rl(r.shape,a);return s.length>0?Uo(au(t,s),r.shape):t}}}},iy={kernelName:Wn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Dl(n.shape,r.shape);return{a:()=>{let t=fo(e,Bi(r,"float32")),s=Rl(n.shape,a);return s.length>0?Uo(au(t,s),n.shape):t},b:()=>{let t=fo(e,Bi(n,"float32")),s=Rl(r.shape,a);return s.length>0?Uo(au(t,s),r.shape):t}}}},oy={kernelName:Vn,gradFunc:e=>({x:()=>Mu(e)})},ly={kernelName:Kn,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Qu(n.shape,"float32")}}},uy={kernelName:qn,gradFunc:e=>({x:()=>Ll(e)})},py={kernelName:Xn,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return Gd(e,r).map((e=>()=>e))}},dy={kernelName:Yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Xo(e,s,r.shape)}}},hy={kernelName:Jn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=Dl(s.shape,i.shape);return{a:()=>{let t=Bi(i,"float32"),n=fo(e,fo(t,eu(s,zu(t,tu(1))))),r=Rl(s.shape,o);return r.length>0&&(n=au(n,r)),Uo(n,s.shape)},b:()=>{let t=mu(s,0),n=Ol(t,Tu(s),Ll(s)),r=fo(e,fo(a,n)),l=Rl(i.shape,o);return l.length>0&&(r=au(r,l)),Uo(r,i.shape)}}}},cy={kernelName:Qn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=mu(n,0);return{x:()=>Ol(a,e,fo(e,r)),alpha:()=>{let t=Ol(a,Ll(e),fo(e,n)),s=Rl(r.shape,e.shape);return s.length>0&&(t=au(t,s)),Uo(t,r.shape)}}}};function fy(e,t,n){let r=e.shape.length,a=r-n.length,s=Bf.getAxesPermutation(n,r),i=e;null!=s&&(i=Yd(e,s));let o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){let r=e.shape.slice();r[n]=1;let a=Uo(t,r),s=Sl(e,n,!0,!1),i=Sl(e,n,!0,!0),o=fo(s,i);return fo(a,o)}(i.reshape(o),t,a);if(u=u.reshape(i.shape),null!=s){let e=Bf.getUndoAxesPermutation(s);u=Yd(u,e)}return u}var my={kernelName:er,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return s=null==a?r.shape.map(((e,t)=>t)):"number"==typeof a?[a]:a,{x:()=>fy(r,e,s)}}},gy={kernelName:Wt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Dl(n.shape,r.shape);return{a:()=>{let t=co(e,Bi(r,"float32")),s=Rl(n.shape,a);return s.length>0?Uo(au(t,s),n.shape):t},b:()=>{let t=fo(e,Bi(n,"float32")),s=Rl(r.shape,a);s.length>0&&(t=Uo(au(t,s),r.shape));let i=ru(r);return Mu(co(t,Bi(i,"float32")))}}}},yy={kernelName:ir,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>co(e,Mu(ru(n)))}}},by={kernelName:cr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=fo(Iu(n,6),Td(n));return{x:()=>fo(e,Bi(r,"float32"))}}},xy={kernelName:or,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fo(e,Bi(Td(n),"float32"))}}},wy={kernelName:lr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Uo(e,n.shape)}}},vy={kernelName:dr,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>Ts.runKernel(hr,a,n)}}},ky={kernelName:ur,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>Ts.runKernel(pr,a,n)}}},Iy={kernelName:fr,gradFunc:(e,t,n)=>{let{dims:r}=n,a=pe(r,e.shape);return{x:()=>ed(e,a)}}},Sy={kernelName:mr,gradFunc:e=>({x:()=>Ll(e)})},Ny={kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Mu(co(e,fo(eu(n,1.5),2)))}}},Ty={kernelName:wr,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>Bi(Ll(n),"float32"),t:()=>fo(e,Bi(n,e.dtype)),e:()=>fo(e,Bi(Vu(n),e.dtype))}}},_y={kernelName:vr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=mu(n,tu(0)),r=tu(tm),a=tu(nm),s=fo(e,a),i=fo(fo(e,r),lu(Bi(n,"float32")));return Ol(t,s,i)}}}},Cy={kernelName:Tr,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fo(e,fo(n,zu(tu(1),n)))}}},Ey={kernelName:Nr,gradFunc:e=>({x:()=>Ll(e)})},$y={kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fo(kl(Bi(n,"float32")),e)}}},Ay={kernelName:Sr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fo(Il(Bi(n,"float32")),e)}}},Fy={kernelName:kr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=Af(r,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>hp(e,u)}}},Ry={kernelName:Fr,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=fo(e,r);return{logits:()=>zu(s,fo(au(s,[a],true),r))}}},Dy={kernelName:_r,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fo(e,Ko(n))}}},My={kernelName:$r,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>Jo(e,r,a)}}},Oy={kernelName:Ar,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>jo(e,r)}}},Ly={kernelName:Cr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>co(e,fo(nu(Bi(n,"float32")),2))}}},zy={kernelName:Pr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fo(e,fo(Bi(n,"float32"),2))}}},Py={kernelName:zr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=tu(2);return{a:()=>fo(e,fo(a,zu(n,r))),b:()=>fo(e,fo(a,zu(r,n)))}}},By={kernelName:ra,gradFunc:e=>({x:()=>Ll(e)})},Wy={kernelName:Hr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Dl(n.shape,r.shape);return{a:()=>{let t=e,r=Rl(n.shape,a);return r.length>0&&(t=au(t,r)),Uo(t,n.shape)},b:()=>{let t=e,n=Rl(r.shape,a);return n.length>0&&(t=au(t,n)),Uo(Mu(t),r.shape)}}}},Vy={kernelName:Er,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;pe(s,r.shape).forEach((e=>{a[e]=1}));let i=Uo(e,a),o=fo(i,ep(r.shape,"float32"));return{x:()=>o}}},Uy={kernelName:jr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>co(e,ru(kl(n)))}}},Gy={kernelName:qr,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fo(zu(tu(1),ru(n)),e)}}},Hy={kernelName:Kr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let t=Ll(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=po(t,Xo(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=po(t,Xo(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=po(t,Xo(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=po(t,Xo(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},jy={kernelName:Zr,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=Yl(a);return{x:()=>Yd(e,s)}}},qy={kernelName:Qr,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>Nd(e,a)}}},Ky={kernelName:ea,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>function(e,t){let n=Zu(t,Ll(t)),r=fu(e,n),a=gu(t,tu(0,"int32")),s=r.rank-a.rank;for(let e=0;e<s;++e)a=uu(a,e+1);a=Wu(a,ep(r.shape,"bool"));let i=Ll(r);return Ol(a,r,i)}(e,n)}}};var Xy={kernelName:na,gradFunc:e=>({x:()=>Ll(e)})},Yy=[qm,Km,Xm,Ym,Zm,Jm,Qm,eg,tg,ng,rg,ag,ig,lg,ug,pg,dg,hg,cg,fg,mg,gg,bg,yg,wg,vg,kg,Ig,Sg,Ng,gy,Tg,_g,Cg,Eg,$g,Fg,Ag,Rg,Dg,Lg,zg,Pg,Bg,Wg,Vg,Ug,Gg,Hg,qg,Xg,Xg,Yg,Jg,ey,ty,ny,ry,ay,sy,iy,oy,ly,uy,py,dy,dy,hy,cy,my,yy,by,xy,wy,vy,ky,Iy,Sy,Ny,Ty,_y,Cy,Ey,$y,Ay,Fy,Ry,Dy,My,My,Oy,Oy,Ly,Py,zy,By,Wy,Vy,Uy,Gy,Hy,jy,qy,Ky,Xy];for(let e of Yy)ya(e);as().prototype.abs=function(){return this.throwIfDisposed(),mo(this)},as().prototype.acos=function(){return this.throwIfDisposed(),go(this)},as().prototype.acosh=function(){return this.throwIfDisposed(),yo(this)},as().prototype.add=function(e){return this.throwIfDisposed(),po(this,e)},as().prototype.all=function(e,t){return this.throwIfDisposed(),xo(this,e,t)},as().prototype.any=function(e,t){return this.throwIfDisposed(),wo(this,e,t)},as().prototype.argMax=function(e){return this.throwIfDisposed(),vo(this,e)},as().prototype.argMin=function(e){return this.throwIfDisposed(),ko(this,e)},as().prototype.asScalar=function(){return this.throwIfDisposed(),Y(1===this.size,(()=>"The array must have only 1 element.")),Uo(this,[])},as().prototype.asType=function(e){return this.throwIfDisposed(),Bi(this,e)},as().prototype.as1D=function(){return this.throwIfDisposed(),Uo(this,[this.size])},as().prototype.as2D=function(e,t){return this.throwIfDisposed(),Uo(this,[e,t])},as().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Uo(this,[e,t,n])},as().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Uo(this,[e,t,n,r])},as().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Uo(this,[e,t,n,r,a])},as().prototype.asin=function(){return this.throwIfDisposed(),Io(this)},as().prototype.asinh=function(){return this.throwIfDisposed(),So(this)},as().prototype.atan=function(){return this.throwIfDisposed(),No(this)},as().prototype.atan2=function(e){return this.throwIfDisposed(),To(this,e)},as().prototype.atanh=function(){return this.throwIfDisposed(),_o(this)},as().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Go(this,e,t,n,r)},as().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Jo(this,e,t)},as().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),el(this,e,t,n,r,a)},as().prototype.broadcastTo=function(e){return this.throwIfDisposed(),ol(this,e)},as().prototype.cast=function(e){return this.throwIfDisposed(),Bi(this,e)},as().prototype.ceil=function(){return this.throwIfDisposed(),ll(this)},as().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),pl(this,e,t)},as().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof rs&&(e=[e]),jo([this,...e],t)},as().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),gl(this,e,t,n,r,a,s)},as().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),bl(this,e,t,n,r,a)},as().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),ml(this,e,t,n,r,a,s)},as().prototype.cos=function(){return this.throwIfDisposed(),kl(this)},as().prototype.cosh=function(){return this.throwIfDisposed(),Il(this)},as().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Sl(this,e,t,n)},as().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Nl(this,e,t,n)},as().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),_l(this,e,t)},as().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Cl(this,e,t,n,r,a,s)},as().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),$l(this,e,t,n,r,a)},as().prototype.divNoNan=function(e){return this.throwIfDisposed(),zl(this,e)},as().prototype.div=function(e){return this.throwIfDisposed(),co(this,e)},as().prototype.dot=function(e){return this.throwIfDisposed(),Pl(this,e)},as().prototype.elu=function(){return this.throwIfDisposed(),Wl(this)},as().prototype.equal=function(e){return this.throwIfDisposed(),Ml(this,e)},as().prototype.erf=function(){return this.throwIfDisposed(),Ul(this)},as().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),ou(this,e,t)},as().prototype.exp=function(){return this.throwIfDisposed(),lu(this)},as().prototype.expandDims=function(e){return this.throwIfDisposed(),uu(this,e)},as().prototype.expm1=function(){return this.throwIfDisposed(),pu(this)},as().prototype.fft=function(){return this.throwIfDisposed(),bd(this)},as().prototype.flatten=function(){return this.throwIfDisposed(),Uo(this,[this.size])},as().prototype.floor=function(){return this.throwIfDisposed(),cu(this)},as().prototype.floorDiv=function(e){return this.throwIfDisposed(),ho(this,e)},as().prototype.gather=function(e,t,n){return this.throwIfDisposed(),fu(this,e,t,n)},as().prototype.greaterEqual=function(e){return this.throwIfDisposed(),gu(this,e)},as().prototype.greater=function(e){return this.throwIfDisposed(),mu(this,e)},as().prototype.ifft=function(){return this.throwIfDisposed(),xd(this)},as().prototype.irfft=function(){return this.throwIfDisposed(),wd(this)},as().prototype.isFinite=function(){return this.throwIfDisposed(),bu(this)},as().prototype.isInf=function(){return this.throwIfDisposed(),xu(this)},as().prototype.isNaN=function(){return this.throwIfDisposed(),wu(this)},as().prototype.leakyRelu=function(e){return this.throwIfDisposed(),vu(this,e)},as().prototype.lessEqual=function(e){return this.throwIfDisposed(),Iu(this,e)},as().prototype.less=function(e){return this.throwIfDisposed(),ku(this,e)},as().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Nu(this,e,t,n,r)},as().prototype.logSigmoid=function(){return this.throwIfDisposed(),Lu(this)},as().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Pu(this,e)},as().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Bu(this,e,t)},as().prototype.log=function(){return this.throwIfDisposed(),Tu(this)},as().prototype.log1p=function(){return this.throwIfDisposed(),_u(this)},as().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Wu(this,e)},as().prototype.logicalNot=function(){return this.throwIfDisposed(),Vu(this)},as().prototype.logicalOr=function(e){return this.throwIfDisposed(),Uu(this,e)},as().prototype.logicalXor=function(e){return this.throwIfDisposed(),Gu(this,e)},as().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),qo(this,e,t,n)},as().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Ku(this,e,t,n,r)},as().prototype.max=function(e,t){return this.throwIfDisposed(),Jl(this,e,t)},as().prototype.maximum=function(e){return this.throwIfDisposed(),Zu(this,e)},as().prototype.mean=function(e,t){return this.throwIfDisposed(),Ju(this,e,t)},as().prototype.min=function(e,t){return this.throwIfDisposed(),Ql(this,e,t)},as().prototype.minimum=function(e){return this.throwIfDisposed(),np(this,e)},as().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),rp(this,e,t)},as().prototype.mod=function(e){return this.throwIfDisposed(),ap(this,e)},as().prototype.mul=function(e){return this.throwIfDisposed(),fo(this,e)},as().prototype.neg=function(){return this.throwIfDisposed(),Mu(this)},as().prototype.norm=function(e,t,n){return this.throwIfDisposed(),iu(this,e,t,n)},as().prototype.notEqual=function(e){return this.throwIfDisposed(),lp(this,e)},as().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),up(this,e,t,n)},as().prototype.onesLike=function(){return this.throwIfDisposed(),pp(this)},as().prototype.pad=function(e,t){return this.throwIfDisposed(),hp(this,e,t)},as().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),bp(this,e,t,n,r,a,s)},as().prototype.pow=function(e){return this.throwIfDisposed(),eu(this,e)},as().prototype.prelu=function(e){return this.throwIfDisposed(),xp(this,e)},as().prototype.prod=function(e,t){return this.throwIfDisposed(),wp(this,e,t)},as().prototype.reciprocal=function(){return this.throwIfDisposed(),Zp(this)},as().prototype.relu=function(){return this.throwIfDisposed(),Jp(this)},as().prototype.relu6=function(){return this.throwIfDisposed(),Qp(this)},as().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Uo(this,e.shape)},as().prototype.reshape=function(e){return this.throwIfDisposed(),Uo(this,e)},as().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Bh(this,e,t,n)},as().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Wh(this,e,t,n)},as().prototype.reverse=function(e){return this.throwIfDisposed(),ed(this,e)},as().prototype.rfft=function(){return this.throwIfDisposed(),kd(this)},as().prototype.round=function(){return this.throwIfDisposed(),sd(this)},as().prototype.rsqrt=function(){return this.throwIfDisposed(),id(this)},as().prototype.selu=function(){return this.throwIfDisposed(),od(this)},as().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),ld(this,e,t,n,r,a,s)},as().prototype.sigmoid=function(){return this.throwIfDisposed(),Ko(this)},as().prototype.sign=function(){return this.throwIfDisposed(),pd(this)},as().prototype.sin=function(){return this.throwIfDisposed(),dd(this)},as().prototype.sinh=function(){return this.throwIfDisposed(),hd(this)},as().prototype.slice=function(e,t){return this.throwIfDisposed(),Xo(this,e,t)},as().prototype.softmax=function(e){return this.throwIfDisposed(),yd(this,e)},as().prototype.softplus=function(){return this.throwIfDisposed(),Ou(this)},as().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),yp(this,e,t)},as().prototype.split=function(e,t){return this.throwIfDisposed(),vd(this,e,t)},as().prototype.sqrt=function(){return this.throwIfDisposed(),nu(this)},as().prototype.square=function(){return this.throwIfDisposed(),ru(this)},as().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Id(this,e)},as().prototype.squeeze=function(e){return this.throwIfDisposed(),Sd(this,e)},as().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof rs?[this,e]:[this,...e];return Nd(n,t)},as().prototype.step=function(e){return this.throwIfDisposed(),Td(this,e)},as().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),_d(this,e,t,n,r,a,s,i,o)},as().prototype.sub=function(e){return this.throwIfDisposed(),zu(this,e)},as().prototype.sum=function(e,t){return this.throwIfDisposed(),au(this,e,t)},as().prototype.tan=function(){return this.throwIfDisposed(),Cd(this)},as().prototype.tanh=function(){return this.throwIfDisposed(),Yo(this)},as().prototype.tile=function(e){return this.throwIfDisposed(),du(this,e)},as().prototype.toBool=function(){return this.throwIfDisposed(),Bi(this,"bool")},as().prototype.toFloat=function(){return this.throwIfDisposed(),Bi(this,"float32")},as().prototype.toInt=function(){return this.throwIfDisposed(),Bi(this,"int32")},as().prototype.topk=function(e,t){return this.throwIfDisposed(),Bd(this,e,t)},as().prototype.transpose=function(e){return this.throwIfDisposed(),Yd(this,e)},as().prototype.unique=function(e){return this.throwIfDisposed(),Vd(this,e)},as().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Ud(this,e,t)},as().prototype.unstack=function(e){return this.throwIfDisposed(),Gd(this,e)},as().prototype.where=function(e,t){return this.throwIfDisposed(),Ol(e,this,t)},as().prototype.zerosLike=function(){return this.throwIfDisposed(),Ll(this)};var Zy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Zy.prototype)}},Jy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Jy.prototype)}},Qy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qy.prototype)}},eb=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,eb.prototype)}},tb=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,tb.prototype)}},nb=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}};function rb(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=new Array(t);return n.fill(e),n}}function ab(e,t){if(!e)throw new tb(t)}function sb(e,t){let n=0;for(let r of e)r===t&&n++;return n}function ib(e){return 1===e.length?e[0]:e}function ob(e){return Array.isArray(e)?e:[e]}function lb(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function ub(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var pb={};function db(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function hb(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>hb(e)));else{let t=Object.keys(e);for(let n of t){let t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?hb(t):e[n]=t.value)}}}function cb(e,t={},n={},r="object",a=!1){if("string"==typeof e){let a,s=e;if(s in n)a=n[s];else if(s in pb)a=pb[s];else if(a=t[s],null==a)throw new Qy(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{let s=e;if(null==s.className||null==s.config)throw new Qy(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);let i,o,l=s.className;if(l in n?[i,o]=n[l]:l in pb?[i,o]=pb.className:l in t&&([i,o]=t[l]),null==i)throw new Qy(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let e={};for(let t of Object.keys(pb))e[t]=pb[t];for(let t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;let t=Object.assign({},pb);for(let e of Object.keys(n))pb[e]=n[e];hb(s.config);let r=o(i,s.config,n,a);return pb=Object.assign({},t),r}{let e=Object.assign({},pb);for(let e of Object.keys(n))pb[e]=n[e];let t=new i(s.config);return pb=Object.assign({},e),t}}}function fb(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function mb(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function gb(e){if(null==e)throw new Qy(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function yb(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Qy(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function bb(e,t,n=0,r=1/0){return ab(n>=0),ab(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function xb(e,t){Array.isArray(e)?(ka.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>xb(e,`element ${n+1} of ${t}`)))):ka.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${wb(e)}.`))}function wb(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>wb(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function vb(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}var kb=0;function Ib(){return kb++}var Sb={};function Nb(e=""){return e in Sb||(Sb[e]=0),Sb[e]+=1,e+Sb[e].toString()}var Tb=["channelsFirst","channelsLast"],_b=["nearest","bilinear"],Cb=["valid","same","causal"],Eb=["max","avg"],$b=["sum","mul","concat","ave"],Ab=new Map;function Fb(e){yb(Tb,"DataFormat",e)}function Rb(e){yb(Cb,"PaddingMode",e)}function Db(e){yb(Eb,"PoolMode",e)}var Mb=[];function Ob(e,t){Mb.push(e);try{let e=t();return Mb.pop(),e}catch(e){throw Mb.pop(),e}}function Lb(e){if(!Wb(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Mb.length?"":Mb.join("/")+"/")+e}function zb(e){if(!Wb(e))throw new Error("Not a valid tensor name: '"+e+"'");Ab.has(e)||Ab.set(e,0);let t=Ab.get(e);if(Ab.set(e,Ab.get(e)+1),t>0){let n=`${e}_${t}`;return Ab.set(n,1),n}return e}var Pb,Bb=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Wb(e){return!!e.match(Bb)}function Vb(e){return e===parseInt(e.toString(),10)}function Ub(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Gb(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function Hb(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function jb(e,t){if(t<e)throw new Qy(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function qb(){return null==Pb&&(Pb=lo().epsilon()),Pb}function Kb(e,t){return Bi(e,t)}function Xb(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Uo(e,n)}function Yb(e,t,n){return Zi((()=>{switch(e.rank){case 1:return cd(e,t,n);case 2:return fd(e,[t,0],[n,e.shape[1]]);case 3:return md(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return gd(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Xo(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Xo(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Qy(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Zb(e,t,n){return Zi((()=>{switch(e.rank){case 1:return cd(e,t,n);case 2:return fd(e,[0,t],[e.shape[0],n]);case 3:return md(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return gd(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Qy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Jb(e,t,n,r){return Zi((()=>{switch(e.rank){case 1:return cd(e,t,n);case 2:switch(r){case 1:return Yb(e,t,n);case 2:return Zb(e,t,n);default:throw new Qy(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Yb(e,t,n);case 2:return md(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Zb(e,t,n);default:throw new Qy(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Yb(e,t,n);case 2:return gd(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return gd(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Zb(e,t,n);default:throw new Qy(`The axis is not within the rank of the tensor ${r}`)}default:throw new Qy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Qb(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),jo(e,t)}function ex(e,t){switch(e.rank){case 1:return dl([e,t]);case 2:return hl([e,t],0);case 3:return cl([e,t],0);case 4:return fl([e,t],0);default:throw new Qy(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function tx(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Qy(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return du(e,t)}function nx(e,t=0,n=1,r,a){return Hp(e,t,n,r,a)}function rx(e,t,n,r){if(e.rank<2||t.rank<2)throw new eb(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new eb(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank)return sh.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?ix(e.rank,r,"channelsLast"):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=Uo(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],p=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Uo(Yd(t,p),[l,-1]);let d=[...a,...u],h=!1,c=!1;return Uo(sh.matMul({a:e,b:t,transposeA:h,transposeB:c,bias:r?ix(e.rank,r,"channelsLast"):null,activation:n}),d)}}function ax(e,t,n){return Zi((()=>(t=Array.isArray(t)?Ed(t,"int32"):Bi(t,"int32"),fu(e,t,n))))}function sx(e){return fo(e,e)}function ix(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Qy(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Uo(t,[1,r[0],1,1,1]):Uo(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Uo(t,[1,1,1,1,r[0]]):Uo(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Uo(t,[1,r[0],1,1]):Uo(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Uo(t,[1,1,1,r[0]]):Uo(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Uo(t,[1,r[0],1]):Uo(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Uo(t,[1,1,r[0]]):Uo(t,[1].concat(r))}else if(e<3)return t;throw new Qy(`Unsupported input rank by biasAdd: ${t.rank}`)}function ox(e,t,n){return Zi((()=>(null==n&&(n="channelsLast"),Fb(n),po(e,ix(e.rank,t,n)))))}function lx(e,t,n,r){return Zi((()=>th(e,t,n,r)))}function ux(e,t,n=!1){return n?e():t()}var px=["fanIn","fanOut","fanAvg"],dx=["normal","uniform","truncatedNormal"];var hx=class extends xc.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},cx=class extends hx{apply(e,t){return Qu(e,t)}};cx.className="Zeros",xc.registerClass(cx);var fx=class extends hx{apply(e,t){return ep(e,t)}};fx.className="Ones",xc.registerClass(fx);var mx=class extends hx{constructor(e){if(super(),"object"!=typeof e)throw new Qy(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Qy(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Zi((()=>fo(tu(this.value),ep(e,t))))}getConfig(){return{value:this.value}}};mx.className="Constant",xc.registerClass(mx);var gx=class extends hx{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return qp(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};gx.className="RandomUniform",xc.registerClass(gx);var yx=class extends hx{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new eb(`randomNormal does not support dType ${t}.`);return nx(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};yx.className="RandomNormal",xc.registerClass(yx);var bx=class extends hx{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new eb(`truncatedNormal does not support dType ${t}.`);return Wd(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};bx.className="TruncatedNormal",xc.registerClass(bx);var xx=class extends hx{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Zi((()=>{if(2!==e.length||e[0]!==e[1])throw new Qy("Identity matrix initializer can only be used for 2D square matrices.");return fo(this.gain,hu(e[0]))}))}getConfig(){return{gain:this.gain}}};xx.className="Identity",xc.registerClass(xx);var wx=class extends hx{constructor(e){if(super(),e.scale<0)throw new Qy(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function(e){yb(px,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){yb(dx,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){let n=function(e,t="channelsLast"){let n,r;if(Fb(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=Ub(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){let t=Ub(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{let t=Ub(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){let n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new eb(`${this.getClassName()} does not support dType ${t}.`);return Wd(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return qp(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};wx.className="VarianceScaling",xc.registerClass(wx);var vx=class extends wx{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return wx.className}};vx.className="GlorotUniform",xc.registerClass(vx);var kx=class extends wx{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return wx.className}};kx.className="GlorotNormal",xc.registerClass(kx);var Ix=class extends wx{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return wx.className}};Ix.className="HeNormal",xc.registerClass(Ix);var Sx=class extends wx{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return wx.className}};Sx.className="HeUniform",xc.registerClass(Sx);var Nx=class extends wx{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return wx.className}};Nx.className="LeCunNormal",xc.registerClass(Nx);var Tx=class extends wx{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return wx.className}};Tx.className="LeCunUniform",xc.registerClass(Tx);var _x=class extends hx{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Zi((()=>{if(e.length<2)throw new eb("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);let n=ka.sizeFromShape(e.slice(0,-1)),r=e[e.length-1],a=n*r;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);let s=nx([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),i=mc.qr(s,!1),o=i[0],l=i[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=fo(o,l.sign()),n<r&&(o=o.transpose()),fo(tu(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}};_x.className="Orthogonal",xc.registerClass(_x);var Cx={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ex(e,t={}){return cb(e,xc.SerializationMap.getMap().classNameMap,t,"initializer")}function $x(e){return db(e)}function Ax(e){if("string"==typeof e){let t=e in Cx?Cx[e]:e;if("GlorotNormal"===t)return new kx;if("GlorotUniform"===t)return new vx;if("HeNormal"===t)return new Ix;if("HeUniform"===t)return new Sx;if("LeCunNormal"===t)return new Nx;if("LeCunUniform"===t)return new Tx;{let e={};return e.className=t,e.config={},Ex(e)}}return e instanceof hx?e:Ex(e)}function Fx(e){return Array.isArray(e)&&Array.isArray(e[0])}function Rx(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Dx(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Qy(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Mx(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Qy(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Ox(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var Lx="Variable",zx=class{constructor(e,t="float32",n=Lx,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Ib(),n=null==n?Lx:n,this.originalName=Lb(n),this.name=zb(this.originalName),this.trainable_=r,this.constraint=a,this.val=jd(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function Px(e){return e.map((e=>e.read()))}function Bx(e){e.forEach((e=>{e[0].write(e[1])}))}var Wx=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Vx=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=Ib(),null!=s&&(this.originalName=Lb(s),this.name=zb(this.originalName)),this.rank=t.length}},Ux=0,Gx=class{constructor(e,t){this.callArgs=t,this.id=Ux++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},Hx=0,jx=class extends xc.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Hx++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=lb(e)+"_"+Nb(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Jy(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Qy(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ib(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ib(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Zy(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Zy(`Layer ${this.name} is not connected, no input to return.`);return ib(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Zy(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Zy(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ib(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ob(e),null==this.inputSpec||0===this.inputSpec.length)return;let t=ob(this.inputSpec);if(e.length!==t.length)throw new Qy(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],a=t[n];if(null==a)continue;let s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new Qy(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new Qy(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new Qy(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new Qy(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let e=r.shape;for(let t in a.axes){let r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new Qy(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){let t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new Qy(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=ob(e),r=!0;for(let e of n)if(!(e instanceof Vx)){r=!1;break}let a=!0;for(let e of n)if(e instanceof Vx){a=!1;break}if(r===a)throw new Qy("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ob(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of ob(e))t.push(n.shape);this.build(ib(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t),a=ob(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=ib(s),null!=this.activityRegularizer)throw new eb("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{let n,r=function(e){e=ob(e);let t=[];for(let n of e)t.push(n.shape);return ib(t)}(e),a=this.computeOutputShape(r),s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),n=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,r)=>new Vx(s,n,this,ob(e),t,this.name,r))):new Vx(s,a,this,ob(e),t,this.name),this.addInboundNode(e,n,null,null,r,a,t),this._refCount++,null!=this.activityRegularizer)throw new eb("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Zy(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Zy(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Jy(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ox(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Px(e?this.trainableWeights:this.weights)}setWeights(e){Zi((()=>{let t=this.weights;if(t.length!==e.length)throw new Qy(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=Px(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!ka.arraysEqual(s.shape,o.shape))throw new Qy(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Bx(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Qy(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Ax("zeros"));let l=r.apply(t,n),u=new zx(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ob(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){let o=ob(e);t=ob(t),n=ob(n),r=ob(r),a=Rx(a),s=Rx(s);let l=[],u=[],p=[];for(let e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),p.push(e.tensorIndex);new Gx({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:p,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function qx(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{let e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{let t=[];for(let n=0;n<e.inboundLayers.length;n++){let r=qx(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(let e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var Kx=class extends jx{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Nb("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Qy("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Qy("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Qy("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new Vx(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Gx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Qy(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function Xx(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Qy("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Kx({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}Kx.className="InputLayer",xc.registerClass(Kx);var Yx=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Yx)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Qy(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Bi(t,e.dtype)}catch(n){throw new Qy(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Vx){if(null==this.id2Value[e.id])throw new Qy(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new Qy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Vx){if(null==this.id2Value[e.id])throw new Qy(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new Qy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Ji(this.id2Mask)}},Zx=new nb,Jx=new nb;function Qx(e,t,n,r){let a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(let e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let p,d=o.join(",")+"|"+t.names().sort().join(","),h=Zx.get(d);if(null==h){let e=function(e,t){ka.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){let a=tw(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=tw(s,t);for(let t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(let e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:ew(r)}}(i,t);h=e.sorted,p=e.recipientCounts,Zx.put(d,h),Jx.put(d,p)}p={},a||Object.assign(p,Jx.get(d));let c=new Yx(t);for(let e=0;e<h.length;++e){if(null!=r){let e=Xi().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}let s=h[e],i=s.sourceLayer;if(i instanceof Kx)continue;let u=[],d=[],f=[],m=!1;for(let e of s.inputs){let n=c.getValue(e),r=c.getMask(e);u.push(n),d.push(r),null!=r&&(m=!0),a||(p[e.name]--,0===p[e.name]&&!t.hasKey(e)&&-1===o.indexOf(e.name)&&!n.isDisposed&&!0!==e.sourceLayer.stateful&&f.push(n))}m&&((n=n||{}).mask=d[0]);let g=ob(i.apply(u,n)),y=null;i.supportsMasking&&(y=i.computeMask(u,d));let b=nw(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){c.hasKey(x[e])||c.add(x[e],g[e],Array.isArray(y)?y[0]:y);let t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}a||Ji(f)}return c.disposeMasks(),s?l:l[0]}function ew(e){let t={};for(let n in e)t[n]=e[n].size;return t}function tw(e,t){let n=new Set,r=[],a={};for(let e of t.names())n.add(e);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(let t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),!n.has(t.name)&&s.push(t)}}return{sorted:r,recipientMap:a}}function nw(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}Pe().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Zx&&Zx.setMaxEntries(e),null!=Jx&&Jx.setMaxEntries(e)}));var rw={};function aw(e,t){return Zi((()=>nu(au(fo(e,e),t,!0))))}g(rw,{maxNorm:()=>fw,minMaxNorm:()=>yw,nonNeg:()=>gw,unitNorm:()=>mw});var sw=class extends xc.Serializable{getConfig(){return{}}},iw=class extends sw{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Zi((()=>{let t=aw(e,this.axis),n=pl(t,0,this.maxValue);return fo(e,co(n,po(qb(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};iw.className="MaxNorm",xc.registerClass(iw);var ow=class extends sw{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Zi((()=>co(e,po(qb(),aw(e,this.axis)))))}getConfig(){return{axis:this.axis}}};ow.className="UnitNorm",xc.registerClass(ow);var lw=class extends sw{apply(e){return Jp(e)}};lw.className="NonNeg",xc.registerClass(lw);var uw=class extends sw{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Zi((()=>{let t=aw(e,this.axis),n=po(fo(this.rate,pl(t,this.minValue,this.maxValue)),fo(1-this.rate,t));return fo(e,co(n,po(qb(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};uw.className="MinMaxNorm",xc.registerClass(uw);var pw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function dw(e){return db(e)}function hw(e,t={}){return cb(e,xc.SerializationMap.getMap().classNameMap,t,"constraint")}function cw(e){if(null==e)return null;if("string"==typeof e){return hw({className:e in pw?pw[e]:e,config:{}})}return e instanceof sw?e:hw(e)}function fw(e){return new iw(e)}function mw(e){return new ow(e)}function gw(){return new lw}function yw(e){return new uw(e)}var bw={};function xw(){return new cx}function ww(){return new fx}function vw(e){return new mx(e)}function kw(e){return new gx(e)}function Iw(e){return new yx(e)}function Sw(e){return new bx(e)}function Nw(e){return new xx(e)}function Tw(e){return new wx(e)}function _w(e){return new vx(e)}function Cw(e){return new kx(e)}function Ew(e){return new Ix(e)}function $w(e){return new Sx(e)}function Aw(e){return new Nx(e)}function Fw(e){return new Tx(e)}function Rw(e){return new _x(e)}g(bw,{constant:()=>vw,glorotNormal:()=>Cw,glorotUniform:()=>_w,heNormal:()=>Ew,heUniform:()=>$w,identity:()=>Nw,leCunNormal:()=>Aw,leCunUniform:()=>Fw,ones:()=>ww,orthogonal:()=>Rw,randomNormal:()=>Iw,randomUniform:()=>kw,truncatedNormal:()=>Sw,varianceScaling:()=>Tw,zeros:()=>xw});var Dw,Mw={};async function Ow(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if("number"!=typeof s){let e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Ji(r)}}function Lw(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}g(Mw,{Layer:()=>jx,RNN:()=>Xk,RNNCell:()=>Yk,activation:()=>CS,add:()=>LS,alphaDropout:()=>_N,average:()=>zS,averagePooling1d:()=>qS,averagePooling2d:()=>YS,averagePooling3d:()=>QS,avgPool1d:()=>KS,avgPool2d:()=>ZS,avgPool3d:()=>eN,avgPooling1d:()=>XS,avgPooling2d:()=>JS,avgPooling3d:()=>tN,batchNormalization:()=>GS,bidirectional:()=>xN,categoryEncoding:()=>FN,centerCrop:()=>$N,concatenate:()=>PS,conv1d:()=>xS,conv2d:()=>wS,conv2dTranspose:()=>vS,conv3d:()=>kS,conv3dTranspose:()=>IS,convLstm2d:()=>mN,convLstm2dCell:()=>gN,cropping2D:()=>NS,dense:()=>ES,depthwiseConv2d:()=>_S,dot:()=>US,dropout:()=>$S,elu:()=>cS,embedding:()=>OS,flatten:()=>FS,gaussianDropout:()=>TN,gaussianNoise:()=>NN,globalAveragePooling1d:()=>nN,globalAveragePooling2d:()=>rN,globalMaxPool1d:()=>vN,globalMaxPool2d:()=>kN,globalMaxPooling1d:()=>aN,globalMaxPooling2d:()=>sN,gru:()=>uN,gruCell:()=>pN,input:()=>Yv,inputLayer:()=>hS,layerNormalization:()=>HS,leakyReLU:()=>mS,lstm:()=>dN,lstmCell:()=>hN,masking:()=>CN,maxPool1d:()=>IN,maxPool2d:()=>SN,maxPooling1d:()=>iN,maxPooling2d:()=>oN,maxPooling3d:()=>lN,maximum:()=>BS,minimum:()=>WS,multiply:()=>VS,permute:()=>MS,prelu:()=>gS,randomWidth:()=>RN,reLU:()=>fS,repeatVector:()=>RS,rescaling:()=>EN,reshape:()=>DS,resizing:()=>AN,rnn:()=>yN,separableConv2d:()=>SS,simpleRNN:()=>cN,simpleRNNCell:()=>fN,softmax:()=>yS,spatialDropout1d:()=>AS,stackedRNNCells:()=>bN,thresholdedReLU:()=>bS,timeDistributed:()=>wN,upSampling2d:()=>TS,zeroPadding2d:()=>jS}),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Dw||(Dw={}));var zw=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},Pw=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},Bw=class extends zw{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;this.seen+=n;for(let e in t){let r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let a=Zi((()=>po(this.totals[e],fo(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Zi((()=>{let n=fo(co(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Qi(t[e])})))}},Ww=class extends zw{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(let e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){let i=a[s];e.push(i.data()),t.push(r),n.push(s)}}let r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}},Vw=class extends zw{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||zf,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ka.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():ka.now();return(...s)=>{let i=null!=n?n():ka.now();return i-a<t||(a=i,r=e(...s)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];null!=this.yield&&(await Ow(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Ow(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await Ow(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Ow(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await Ow(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):ka.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Ow(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Ow(e),await this.trainEnd(e))}};function Uw(e,t){return null==e&&(e={}),e instanceof zw?[e]:Array.isArray(e)&&e[0]instanceof zw?e:ob(e).map((e=>new Vw(e,t)))}var Gw=class{constructor(){}static registerCallbackConstructor(e,t){ka.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Gw.checkForDuplicate(t),null==Gw.constructors[e]&&(Gw.constructors[e]=[]),Gw.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Gw.constructors)Gw.constructors[+t].forEach((t=>{if(t===e)throw new Qy("Duplicate callback constructor.")}))}static clear(){Gw.constructors={}}static createCallbacks(e){let t=[];for(let n in Gw.constructors){let r=+n;e>=r&&t.push(...Gw.constructors[r])}return t.map((e=>new e))}};function Hw(e,t,n,r,a,s,i,o,l){let u=new Ww,p=[new Bw,...Gw.createCallbacks(t)];null!=e&&p.push(...e),p.push(u);let d=new Pw(p);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:d,history:u}}function jw(e,t={},n=!1){return cb(e,xc.SerializationMap.getMap().classNameMap,t,"layer",n)}function qw(e,t){return Zi((()=>{"float32"!==e.dtype&&(e=Bi(e,"float32"));let n=au(sx(e),t,!0),r=ul(n.shape,qb()),a=nu(Zu(n,r));return co(e,a)}))}function Kw(e,t){return Zi((()=>Ju(sx(zu(t,e)),-1)))}function Xw(e,t){return Zi((()=>Ju(mo(zu(t,e)),-1)))}function Yw(e,t){return Zi((()=>{let n=zu(e,t),r=pl(mo(e),qb(),Number.MAX_VALUE),a=mo(co(n,r));return fo(100,Ju(a,-1))}))}function Zw(e,t,n=!1){return Zi((()=>{if(n)t=yd(t);else{let e=au(t,t.shape.length-1,!0);t=co(t,e)}return t=pl(t,qb(),1-qb()),Mu(au(fo(Bi(e,"float32"),Tu(t)),t.shape.length-1))}))}function Jw(e,t,n=!1){return Zi((()=>{let r=Bi(cu(function(e){let t=[Ub(e.shape)];return Uo(e,t)}(e)),"int32"),a=(t=pl(t,qb(),1-qb())).shape;return Zw(Uo(up(r,a[a.length-1]),a),t,n)}))}function Qw(e,t){return Zi((()=>{let n;return n=pl(t,qb(),1-qb()),n=Tu(co(n,zu(1,n))),Ju(function(e,t){if(!ka.arraysEqual(e.shape,t.shape))throw new Qy(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Zi((()=>{let n=Jp(t),r=Mu(mo(t));return po(zu(n,fo(t,e)),_u(lu(r)))}))}(e,n),-1)}))}function ev(e,t){return Zi((()=>{let n=qw(e,-1),r=qw(t,-1),a=fo(n,r);return Mu(au(a,-1))}))}Gw.constructors={};var tv={meanSquaredError:Kw,meanAbsoluteError:Xw,meanAbsolutePercentageError:Yw,meanSquaredLogarithmicError:function(e,t){return Zi((()=>{let n=pl(t,qb(),Number.MAX_VALUE),r=Tu(po(1,n)),a=pl(e,qb(),Number.MAX_VALUE),s=Tu(po(1,a));return Ju(sx(zu(r,s)),-1)}))},squaredHinge:function(e,t){return Zi((()=>{let n=Zu(0,zu(1,fo(e,t)));return Ju(sx(n),-1)}))},hinge:function(e,t){return Zi((()=>{let n=Zu(0,zu(1,fo(e,t)));return Ju(n,-1)}))},categoricalHinge:function(e,t){return Zi((()=>{let n=au(fo(e,t),-1),r=Jl(fo(zu(1,e),t),-1);return Zu(0,po(1,zu(r,n)))}))},logcosh:function(e,t){return Zi((()=>{let n=Math.log(2),r=zu(t,e),a=zu(po(r,Ou(fo(-2,r))),n);return Ju(a,-1)}))},categoricalCrossentropy:Zw,sparseCategoricalCrossentropy:Jw,binaryCrossentropy:Qw,kullbackLeiblerDivergence:function(e,t){return Zi((()=>{let n=pl(e,qb(),1),r=pl(t,qb(),1);return au(fo(e,Tu(co(n,r))),-1)}))},poisson:function(e,t){return Zi((()=>{let n=Tu(po(qb(),t));return Ju(zu(t,fo(e,n)),-1)}))},cosineProximity:ev};function nv(e){if("string"==typeof e){if(e in tv)return tv[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Qy(t)}return e}function rv(e,t){return Zi((()=>{let n=fo(.5,pp(t)),r=Kb(mu(t,n),e.dtype);return Ju(Ml(e,r),-1)}))}function av(e,t){return Zi((()=>Kb(Ml(vo(e,-1),vo(t,-1)),"float32")))}function sv(e,t){return Zi((()=>Bi(au(Wu(Ml(e,1),Ml(t,1))),"float32")))}function iv(e,t){return Zi((()=>{let n=sv(e,t),r=function(e,t){return Zi((()=>Bi(au(Wu(Ml(e,0),Ml(t,1))),"float32")))}(e,t),a=po(n,r);return Bi(Ol(mu(a,0),co(n,a),0),"float32")}))}function ov(e,t){return Zi((()=>{let n=sv(e,t),r=function(e,t){return Zi((()=>Bi(au(Wu(Ml(e,1),Ml(t,0))),"float32")))}(e,t),a=po(n,r);return Bi(Ol(mu(a,0),co(n,a),0),"float32")}))}function lv(e,t){return Qw(e,t)}function uv(e,t){return e.rank===t.rank&&(e=Sd(e,[e.rank-1])),(t=vo(t,-1)).dtype!==e.dtype&&(t=Bi(t,e.dtype)),Bi(Ml(e,t),"float32")}var pv=Zw,dv=Jw,hv={binaryAccuracy:rv,categoricalAccuracy:av,precision:iv,categoricalCrossentropy:pv,sparseCategoricalCrossentropy:dv,mse:Kw,MSE:Kw,mae:Xw,MAE:Xw,mape:Yw,MAPE:Yw,cosine:ev};function cv(e){if("string"==typeof e&&e in hv)return hv[e];if("string"!=typeof e&&null!=e)return e;throw new Qy(`Unknown metric ${e}`)}function fv(e){if(ab(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys(tv))if(tv[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(hv))if(hv[n]===e){t=n;break}return void 0!==t?t:e.name}}function mv(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!gv(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function gv(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if("string"!=typeof n||!gv(e[n]))return!1;return!0}if(Array.isArray(e)){for(let t of e)if(!gv(t))return!1;return!0}return!1}{let t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function yv(e,t,n,r=console.log){let a,s=function(e){let t=!0,n=[],r=[];for(let t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(let e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(let n of e.layers){let e=!1;for(let a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),a=[];for(let t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),bv(i,n,r),r("=".repeat(t));let o=e.layers;for(let e=0;e<o.length;++e)s?xv(o[e],n,r):wv(o[e],n,a,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=function(e){let t;return t=null!=e.collectedTrainableWeights?Ox(e.collectedTrainableWeights):Ox(e.trainableWeights),t}(e),u=Ox(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function bv(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function xv(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}bv([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function wv(e,t,n,r){let a,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}let i=[];for(let t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){let n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];i.push(`${n}[${r}][${a}]`)}let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];bv([`${o} (${l})`,s,a,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)bv(["","","","",i[e]],t,r)}function vv(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function kv(e,t){if(null===e)return null;if("string"==typeof e)return ub(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];vv(t,a,r)?n.push(r):n.push(kv(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{let e=ub(n);t[e]=kv(r,e)}}return t}}function Iv(e,t){if(null==e)return null;if("string"==typeof e)return lb(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];vv(t,a,r)?n.push(r):n.push(Iv(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n],a=lb(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?Iv(r,n):r}return t}}var Sv="4.7.0",Nv=class extends jx{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=Nb(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],mb(this.inputs).length!==this.inputs.length)throw new Qy(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);mb(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let e of this.outputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(let e of this.inputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;ab(0===n,"input layer has >1 nodes"),ab(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){let n=this.inputLayers[t];if(!(n instanceof Kx))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));let t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{(null==r||null==a||null==l)&&(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);let u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new Jy(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Nv.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);let p=u.inboundLayers.length;for(let e=0;e<p;e++){let r=u.inputTensors[e],a=u.inboundLayers[e],s=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(let e of this.outputs)o(e,l,u);let p=i.slice().reverse();for(let e of p){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id],i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){let a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),n[o.id]=o}}let d={};for(let e in t){let r=t[e];r in d||(d[r]=[]),d[r].push(n[e])}let h={};for(let e in r){let t=r[e];t in h||(h[t]=[]),h[t].push(a[e])}let c=Object.keys(h).map((e=>parseInt(e,10))).sort(fb);this.layers=[];for(let e of c){let t=h[e];t.sort(((e,t)=>{let n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(let e of t)e instanceof Nv&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=h,c=Object.keys(d).map((e=>parseInt(e,10))).sort(fb);let f=this.inputs.slice(),m=[];for(let e of c)for(let t of d[e]){let e=t.outboundLayer;if(null!=e){for(let n of t.inputTensors)if(-1===f.indexOf(n))throw new Jy(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(let e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=d;let g=this.layers.map((e=>e.name));for(let e of g){let t=g.filter((t=>t===e)).length;if(1!==t)throw new Jy(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Gx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Qy("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0;for(let e of this.layers)for(let t of e.weights){if(null!=n[t.originalName])throw new Qy(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}let a=[];for(let r in e){let s=r;if(null==n[r]){let e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new Qy(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new Qy(`${e.length} of ${r} weights are not set: ${e}`)}Bx(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Sv}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=Iv(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Zi((()=>{e=ob(e);let n=new Yx;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Qx(this.outputs,n,t)}))}computeMask(e,t){return Zi((()=>{let n;return e=ob(e),n=null==t?rb(null,e.length):ob(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){let t=Rx(e);if(t.length!==this.inputLayers.length)throw new Qy(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let e=0;e<t.length;e++){let r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(fb);if(r.length>1)for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;let r=[];for(let t=0;t<e.inboundLayers.length;t++){let a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}let a=Rx(t.computeOutputShape(ib(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${s}_${e}`]=a[e]}}}let a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){let t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){let t=s[e];ab(t in n),a.push(n[t])}return ib(a)}runInternalGraph(e,t){null==t&&(t=rb(null,e.length));let n={};for(let r=0;r<this.inputs.length;++r){let a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(fb);for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(let e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){let[e,n]=s[0];null==u.mask&&(u.mask=n),o=ob(t.call(e,u)),l=ob(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=ob(t.call(r,u)),l=ob(t.computeMask(r,i));if(t.activityRegularizer)throw new eb("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){let t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}let a=[],s=[],i=[];for(let e of this.outputs){ab(e.id in n,`Could not compute output ${e.name} : ${e.id}`);let[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){let t,n={};for(let e of this.layers){t=e instanceof Nv?1:0;for(let r=0;r<e.inboundNodes.length;r++){let a=Nv.nodeKey(e,r);this.containerNodes.has(a)&&(n[a]=t,t+=1)}}return n}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Qy("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(let t of this.layers)if(t.name===e)return t;throw new Qy(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new Qy(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return Zi((()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=Nv.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let e of this.layers){let r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){let r=e.inboundNodes[n],a=Nv.nodeKey(e,n),i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){let e=[];for(let n=0;n<r.inboundLayers.length;n++){let a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n],l=t[Nv.nodeKey(a,s)];null==l&&(l=0),e.push([a.name,l,o,i])}s.push(e)}}}let i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;let r=[];for(let e=0;e<this.inputLayers.length;e++){let n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=Nv.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;let a=[];for(let e=0;e<this.outputLayers.length;e++){let n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=Nv.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){let a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){let n,r=[];for(let s of t){let o=s[0],l=s[1],u=s[2];if(n=null==s[3]?{}:s[3],!(o in a))return void i(e,t);let p=a[o];if(p.inboundNodes.length<=l)return void i(e,t);let d=p.inboundNodes[l];r.push(d.outputTensors[u])}r.length>0&&e.apply(ib(r),n)}function l(e){let n=e.name,s=jw(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Qy(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}let u=t.name,p=t.layers;for(let e of p)l(e);for(;!gb(s);)for(let e of p){let t=a[e.name];if(t.name in s){let e=s[t.name];delete s[t.name];for(let n of e)o(t,n)}}let d=[],h=[],c=t.inputLayers;for(let e of c){let t=e[0],n=e[1],r=e[2];ab(t in a);let s=a[t].inboundNodes[n].outputTensors;d.push(s[r])}let f=t.outputLayers;for(let e of f){let t=e[0],n=e[1],r=e[2];ab(t in a);let s=a[t].inboundNodes[n].outputTensors;h.push(s[r])}return new e({inputs:d,outputs:h,name:u})}get stateful(){if(this._stateful)throw new Qy("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Zi((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function Tv(e,t){return function(e,t,n){let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function _v(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){let t=Zi((()=>{if(1===e.shape.length)return Wi(e);if(2===e.shape.length){if(e.shape[1]>1)return vo(e,1);if(1===e.shape[1])return Uo(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Ji(t);let a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),Ed(a,"float32")}return null}function Cv(e,t){return fo(e,t)}function Ev(e,t){let n,r,a=t;n=a.xs,r=a.ys,ka.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));let s=$v("input",e.inputNames,n),i=$v("output",e.outputNames,r),o=s[0].shape[0];ka.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),ka.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)ka.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)ka.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function $v(e,t,n){if(n instanceof rs)return[n];if(Array.isArray(n))return ka.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{let r=[];for(let a of t){if(null==n[a])throw new Qy(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function Av(e,t,n){let r=null!=n.batchesPerEpoch;if(ka.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),ka.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),ka.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),ka.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),ka.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a,s,i=null!=n.validationData;if(i)if(Fv(n.validationData))ka.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{let e=function(e){if(3===e.length)throw new eb("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,s=e.ys}let o,l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();o=i?u.slice().concat(u.map((e=>"val_"+e))):u.slice();let p=Uw(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:h,history:c}=Hw(p,d,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,i,o);h.setModel(e),e.history=c,await h.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let o={};await h.onEpochBegin(f);let p=0,d=0;for(r||(m=await t.iterator());!r||p<n.batchesPerEpoch;){let t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${p} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:r,ys:a}=Ev(e,t.value),s={};s.batch=d,s.size=r[0].shape[0],await h.onBatchBegin(d,s);let i=[];if(null!=n.classWeight){let t=Tv(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await _v(a[e],null,t[e]))}let o=r.concat(a).concat(i),c=l(o);Ji(o);for(let e=0;e<u.length;++e){let t=u[e],n=c[e];s[t]=n,Qi(n)}await h.onBatchEnd(d,s),Lw(s),d++,p++}if(r?p>=n.batchesPerEpoch:t.done){if(i){let t;t=Fv(n.validationData)?ob(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ob(e.evaluate(a,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)o[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(f,o),f++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Fv(e){return"function"==typeof e.iterator}function Rv(e){ka.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Dv(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Yb(e,t,n-t))):Yb(e,t,n-t)}function Mv(e,t){return Zi((()=>null==e?null:Array.isArray(e)?e.map((e=>Mv(e,t))):ax(e,"int32"===t.dtype?t:Bi(t,"int32"))))}function Ov(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function Lv(e){let t=[];e instanceof rs&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(Xb(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function zv(e,t){if(null==e)return;let n=[];if(t instanceof rs)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(let e in t){let r=t[e];n.push(r.id)}let r=[];if(e instanceof rs)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(let t in e){let a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Pv(e){return Array.isArray(e)}function Bv(e){return!function(e){return e instanceof rs}(e)&&!Pv(e)}function Wv(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Pv(e)&&e.length>0)t=!0;else if(Bv(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Qy(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(Bv(e)){s=[];for(let n of t){if(null==e[n])throw new Qy(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(Pv(e)){if(e.length!==t.length)throw new Qy(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new Qy(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=Lv(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new Qy(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;let s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new Qy(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function Vv(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new Qy(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new Qy(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new Qy(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;let o=i.shape[s],l=n[e][s];if(null!=l&&l!==o)throw new Qy(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}var Uv=class extends Nv{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Qy("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");yv(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){let t={Adagrad:()=>Of.adagrad(.01),Adadelta:()=>Of.adadelta(1,.95,qb()),Adam:()=>Of.adam(.001,.9,.999,qb()),Adamax:()=>Of.adamax(.002,.9,.999,qb(),0),RMSProp:()=>Of.rmsprop(.001,.9,0,qb()),SGD:()=>Of.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Qy(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ic))throw new Qy("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Qy(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>nv(e)))}else{let n=nv(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(let t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Qy(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(nv(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){let t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ob("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));let r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{let e=[];for(let r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ob("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,s;for(let i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){let t,a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===Qw?-1!==["accuracy","acc"].indexOf(i)?r=rv:-1!==["crossentropy","ce"].indexOf(i)&&(r=lv):this.lossFunctions[e]===Jw?-1!==["accuracy","acc"].indexOf(i)?r=uv:-1!==["crossentropy","ce"].indexOf(i)&&(r=dv):-1!==["accuracy","acc"].indexOf(i)?r=av:-1!==["crossentropy","ce"].indexOf(i)&&(r=pv),-1!==["accuracy","acc"].indexOf(i)?t="acc":-1!==["crossentropy","ce"].indexOf(i)&&(t="ce"),s=r,n=""+t}else s=cv(i),n=""+fv(i);let t;Ob(n,(()=>{t=s})),a(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=null==n.batchSize?32:n.batchSize;Rv(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let e=a[0].concat(a[1]);this.makeTestFunction();let t=this.testFunction;return ib(this.testLoop(t,e,r,n.verbose,n.steps))}finally{zv(a[0],e),zv(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){let r=null!=(n=n||{}).batches,a=e.testFunction,s=[];if(n.verbose>0)throw new eb("Verbose mode is not implemented yet.");ka.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));let i=function(e){return"function"==typeof e.next}(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let t=await i.next();if(s=Zi((()=>{if(t.value){let{xs:n,ys:r}=Ev(e,t.value),i=n.concat(r),u=Zi((()=>a(i)));if(Ji(i),0===l)for(let e=0;e<u.length;++e)s.push(tu(0));let p=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=Zi((()=>po(s[e],fo(p,t)))),l>0&&Ji(n)}Ji(u),o+=p,++l}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){let t=s[e];s[e]=co(s[e],o),Ji(t)}return ib(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new Qy(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Qy(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Qy("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new Yx;if(e instanceof rs&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Qy(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let t of this.inputs){let n=e[t.name];if(null==n)throw new Qy(`No value is provided for the model's input ${t.name}`);s.add(t,n)}let i=Qx(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=rb(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){let i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Qy(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Zi((()=>{let r=this.checkNumSamples(e);if(n)throw new eb("Verbose predictLoop() is not implemented yet.");let a=Ov(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)Zi((()=>{let n=a[t][0],r=a[t][1],s=Dv(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});let o=new Yx(i);return Qx(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return ib(s.map((e=>jo(e,0))))}))}predict(e,t={}){let n=Lv(e);Vv(n,this.inputNames,this.feedInputShapes,!1);try{let e=null==t.batchSize?32:t.batchSize;return Rv(e),this.predictLoop(n,e)}finally{zv(n,e)}}predictOnBatch(e){Vv(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Jy("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let e=0;e<this.feedOutputShapes.length;++e){let t=this.feedOutputShapes[e];this.feedLossFns[e]===Jw?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t){let n=mb(e.map((e=>e.shape[0])));n.sort();let r=mb(t.map((e=>e.shape[0])));if(r.sort(),n.length>1)throw new Qy(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new Qy(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&r.length>0&&!ka.arraysEqual(n,r))throw new Qy(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Wv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Wv(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){let r=[Kw,Qw,Zw];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===Zw&&1===s.shape[s.shape.length-1])throw new Qy(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let r=e[n],a=t[n];if(null!=a&&r!==a)throw new Qy(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Qy(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){let e=Tv(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await _v(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return Zi((()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new eb("Verbose mode is not implemented yet.");if(null!=a)throw new eb("steps mode in testLoop() is not implemented yet");{let r=Ov(s,n),a=Ed(jb(0,s));for(let n=0;n<r.length;++n){let s=r[n][0],o=r[n][1],l=Yb(a,s,o-s),u=Mv(t,l),p=e(u);if(0===n)for(let e=0;e<p.length;++e)i.push(tu(0));for(let e=0;e<p.length;++e){let t=p[e];i[e]=po(i[e],fo(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=co(i[e],s)}return i}))}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;if(sb(e,r)>1){a+=`_${sb(e.slice(0,n),r)}`}t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{let e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});let i,o=new Yx(e),l=Qx(this.outputs,o,{training:!0});for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],l[e]);null!=a[e]&&(n=Cv(n,a[e]));let s=Ju(n);t.push(s),i=0===e?n:po(i,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{let t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Ju(t(r[a],l[a]))}Qi(n),s.push(n)}return i=Ju(i),this.calculateLosses().forEach((e=>{i=po(i,e)})),i}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>Zi((()=>{let t,n=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});let i=new Yx(s),o=Qx(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let r=this.lossFunctions[e],s=Ju(r(a[e],o[e]));t=0===e?s:po(t,s),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Ju(t(a[r],o[r]));n.push(s)}return n}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,a,s,i,o,l,u,p,d;this.isTraining=!0;try{let h=null==n.batchSize?32:n.batchSize;Rv(h);let c=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,c,h);r=f[0],a=f[1],d=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new eb("validationData including sample weights is not supported yet."):new Qy(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];let e=!0,t=await this.standardizeUserData(o,l,null,null,e,h);u=t[0],p=t[1],m=u.concat(p)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;let e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];u=Dv(r,e,t),s=r,r=Dv(r,0,e),p=Dv(a,e,t),i=a,a=Dv(a,0,e),m=u.concat(p)}else null!=n.validationSteps&&(g=!0);let y=r.concat(a).concat(d);this.checkTrainableWeightsConsistency();let b,x,w=this.makeTrainFunction(),v=this.getDedupedMetricsNames();g?(this.makeTestFunction(),b=this.testFunction,x=v.slice().concat(v.map((e=>"val_"+e)))):(b=null,m=[],x=v.slice());let k=Uw(n.callbacks,n.yieldEvery);return await this.fitLoop(w,y,v,h,n.epochs,n.verbose,k,b,m,n.shuffle,x,n.initialEpoch,null,null)}finally{this.isTraining=!1,zv(r,e),zv(a,t),zv(s,e),zv(i,t),zv(u,o),zv(p,l),null!=d&&Ji(d)}}async fitLoop(e,t,n,r,a,s,i,o,l,u,p,d,h,c){null==r&&(r=32),null==a&&(a=1),null==u&&(u=!0),null==d&&(d=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=c&&(f=!0,null==h))throw new Qy("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let m,g=this.checkNumSamples(t,r,h,"steps_per_epoch");null!=g&&(m=jb(0,g)),null==s&&(s=1);let{callbackList:y,history:b}=Hw(i,s,a,d,g,h,r,f,p);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let s=d;s<a;++s){await y.onEpochBegin(s);let a={};if(null!=h)throw new eb("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new eb("batch shuffling is not implemneted yet");u&&ka.shuffle(m);let s=Ed(m),i=Ov(g,r);for(let u=0;u<i.length;++u){let p={};if(await y.onBatchBegin(u,p),Zi((()=>{let d=i[u][0],h=i[u][1],c=Yb(s,d,h-d);p.batch=u,p.size=h-d;let m=Mv(t,c),g=e(m);for(let e=0;e<n.length;++e){let t=n[e],r=g[e];p[t]=r,Qi(r)}if(u===i.length-1&&f){let e=this.testLoop(o,l,r);for(let t=0;t<n.length;++t){let r=n[t],s=e[t];Qi(s),a["val_"+r]=s}}})),await y.onBatchEnd(u,p),Lw(p),this.stopTraining_)break}s.dispose()}if(await y.onEpochEnd(s,a),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return Av(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let e of s){let t=await e.data();i.push(t[0])}return Ji(s),zv(n[0],e),zv(n[1],t),ib(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=Xi().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Xi().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=lb(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>lb(e)))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=lb(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[lb(fv(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>lb(fv(e))));{let e={};for(let t in this.metrics)e[t]=lb(fv(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let t,n,r=jw(kv(e.optimizer_config));if("string"==typeof e.loss)t=ub(e.loss);else if(Array.isArray(e.loss))t=e.loss.map((e=>ub(e)));else if(null!=e.loss){t={};for(let n in e.loss)t[n]=ub(e.loss[n])}if(Array.isArray(e.metrics))n=e.metrics.map((e=>ub(e)));else if(null!=e.metrics){n={};for(let t in e.metrics)n[t]=ub(e.metrics[t])}this.compile({loss:t,metrics:n,optimizer:r})}async save(e,t){if("string"==typeof e){let t=Fc.getSaveHandlers(e);if(0===t.length)throw new Qy(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Qy(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Qy("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Fc.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Sv}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();let e="optimizer",{data:t,specs:a}=await Fc.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Fc.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(mv(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){mv(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Uv.className="Model",xc.registerClass(Uv);var Gv=class extends Uv{};async function Hv(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);let r=jw(kv(n),t);if(null!=e.weightsManifest){let t=await Fc.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(let e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),Ji(t)}return r}async function jv(e,t){if(null==t&&(t={}),"string"==typeof e){let n=Fc.getLoadHandlers(e,t);if(0===n.length)n.push(Fc.browserHTTPRequest(e,t));else if(n.length>1)throw new Qy(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new Qy("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=jw(kv(a),t,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Qy("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=function(e,t){let n=Fc.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Ji(e),Ji(t.map((e=>e.tensor)))}return o}(e,void 0,t)}Gv.className="Functional",xc.registerClass(Gv);var qv=class extends Uv{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Nb("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Qy(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t,n=e instanceof qv||e instanceof Uv;if(n){if(t=e,1!==t.outputs.length)throw new Qy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new Qy("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Qy("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=Xx({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(n)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new Qy(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Qy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=qx(this.outputs[0])}this.inboundNodes=[],new Gx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:rb(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Mx(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Uv({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Jy("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Jy("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Jy("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Jy("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Qy("Legacy serialization format not supported yet.");a=t}else ka.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof qv))throw new eb(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let e of a){let t=jw(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Qy("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Qy("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function Kv(e){return new Uv(e)}function Xv(e){return new qv(e)}function Yv(e){return Xx(e)}function Zv(e,t){Gw.registerCallbackConstructor(e,t)}qv.className="Sequential",xc.registerClass(qv);var Jv=class extends xc.Serializable{getConfig(){return{}}},Qv=class extends Jv{apply(e,t=1){return function(e,t=1){if(1!==t)throw new eb(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Wl(e)}(e,t)}};Qv.className="elu",xc.registerClass(Qv);var ek=class extends Jv{apply(e){return od(e)}};ek.className="selu",xc.registerClass(ek);var tk=class extends Jv{apply(e){return Jp(e)}};tk.className="relu",xc.registerClass(tk);var nk=class extends Jv{apply(e){return Zi((()=>np(6,Jp(e))))}};nk.className="relu6",xc.registerClass(nk);var rk=class extends Jv{apply(e){return e}};rk.className="linear",xc.registerClass(rk);var ak=class extends Jv{apply(e){return Ko(e)}};ak.className="sigmoid",xc.registerClass(ak);var sk=class extends Jv{apply(e){return function(e){return Zi((()=>{let t=po(.5,fo(.2,e));return pl(t,0,1)}))}(e)}};sk.className="hardSigmoid",xc.registerClass(sk);var ik=class extends Jv{apply(e){return Ou(e)}};ik.className="softplus",xc.registerClass(ik);var ok=class extends Jv{apply(e){return function(e){return Zi((()=>co(e,po(mo(e),1))))}(e)}};ok.className="softsign",xc.registerClass(ok);var lk=class extends Jv{apply(e){return Yo(e)}};lk.className="tanh",xc.registerClass(lk);var uk=class extends Jv{apply(e,t=-1){return yd(e,t)}};uk.className="softmax",xc.registerClass(uk);var pk=class extends Jv{apply(e,t=-1){return Pu(e,t)}};pk.className="logSoftmax",xc.registerClass(pk);var dk=class extends Jv{apply(e,t=1){return Zi((()=>fo(Ko(fo(e,t)),e)))}};dk.className="swish",xc.registerClass(dk);var hk=class extends Jv{apply(e){return Zi((()=>fo(e,Yo(Ou(e)))))}};function ck(e){return e.getClassName()}function fk(e,t={}){return cb(e,xc.SerializationMap.getMap().classNameMap,t,"activation")}function mk(e){if(null==e){let e={className:"linear",config:{}};return fk(e)}if("string"==typeof e){let t={};return t.className=e,t.config={},fk(t)}return e instanceof Jv?e:fk(e)}function gk(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}hk.className="mish",xc.registerClass(hk);var yk=class extends xc.Serializable{},bk=class extends yk{constructor(e){super(),gk(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Zi((()=>{let t=Qu([1]);return this.hasL1&&(t=po(t,au(fo(this.l1,mo(e))))),this.hasL2&&(t=po(t,au(fo(this.l2,sx(e))))),Uo(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};bk.className="L1L2",xc.registerClass(bk);var xk={l1l2:"L1L2"};function wk(e){return db(e)}function vk(e,t={}){return cb(e,xc.SerializationMap.getMap().classNameMap,t,"regularizer")}function kk(e){if(null==e)return null;if("string"==typeof e){return vk({className:e in xk?xk[e]:e,config:{}})}return e instanceof yk?e:vk(e)}var Ik=class extends jx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Dx(e);let n=Jp(e);return null!=this.maxValue&&(n=pl(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Ik.className="ReLU",xc.registerClass(Ik);var Sk=class extends jx{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Dx(e);return vu(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Sk.className="LeakyReLU",xc.registerClass(Sk);var Nk=class extends jx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ax(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=kk(e.alphaRegularizer),this.alphaConstraint=cw(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Qy(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){let t=(e=Mx(e)).slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Wx({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Dx(e),xp(e,this.alpha.read())}getConfig(){let e={alphaInitializer:$x(this.alphaInitializer),alphaRegularizer:wk(this.alphaRegularizer),alphaConstraint:dw(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Nk.className="PReLU",xc.registerClass(Nk);var Tk=class extends jx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new eb(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Dx(e);return Wl(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Tk.className="ELU",xc.registerClass(Tk);var _k=class extends jx{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=Dx(e);return fo(n,Bi(mu(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};_k.className="ThresholdedReLU",xc.registerClass(_k);var Ck=class extends jx{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new uk).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Dx(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Ek(e,t,n){if("number"==typeof e)return rb(e,t);if(e.length!==t)throw new Qy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!Vb(a))throw new Qy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function $k(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Ak(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Hb([n-t,0]);else{if("same"!==r)throw new Qy(`Unsupport padding mode: ${r}.`);e*=t}return e}function Fk(e,t){return Zi((()=>(Fb(t),"channelsFirst"===t?Yd(e,[0,2,3,1]):e)))}function Rk(e,t){return Zi((()=>(Fb(t),"channelsFirst"===t?Yd(e,[0,2,3,4,1]):e)))}function Dk(e,t,n,r=[1,1],a="valid",s,i,o=null){return Zi((()=>{if(null==s&&(s="channelsLast"),Fb(s),3!==e.rank&&4!==e.rank)throw new Qy(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Qy(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Fk(e,s);if("causal"===a)throw new eb("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=sh.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=Yd(l,[0,3,1,2])),l}))}Ck.className="Softmax",xc.registerClass(Ck);var Mk=class extends jx{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Mk.verifyArgs(t),this.rank=e,xb(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new eb(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ek(t.kernelSize,e,"kernelSize"),this.strides=Ek(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Rb(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Fb(this.dataFormat),this.activation=mk(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Ax(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=cw(t.biasConstraint),this.biasRegularizer=kk(t.biasRegularizer),this.activityRegularizer=kk(t.activityRegularizer),this.dilationRate=Ek(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Qy(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Qy(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Qy(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ab("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!bb(e.kernelSize,"number",1,3))throw new Qy(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ck(this.activation),useBias:this.useBias,biasInitializer:$x(this.biasInitializer),biasRegularizer:wk(this.biasRegularizer),activityRegularizer:wk(this.activityRegularizer),biasConstraint:dw(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Ok=class extends Mk{constructor(e,t){super(e,t),this.kernel=null,Ok.verifyArgs(t),this.filters=t.filters,xb(this.filters,"filters"),this.kernelInitializer=Ax(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=cw(t.kernelConstraint),this.kernelRegularizer=kk(t.kernelRegularizer)}build(e){e=Mx(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Qy(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Zi((()=>{e=Dx(e);let t,n=null==this.bias?null:this.bias.read(),r=vb(this.activation.getClassName());if(null!=r&&2===this.rank)t=Dk(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return Zi((()=>{if(null==s&&(s="channelsLast"),Fb(s),3!==e.shape.length)throw new Qy(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Qy(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Qy(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Yd(e,[0,2,1])),"causal"===a)throw new eb("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=gl(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=ox(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Dk(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new eb("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return Zi((()=>{if(null==s&&(s="channelsLast"),Fb(s),4!==e.rank&&5!==e.rank)throw new Qy(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Qy(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Rk(e,s);if("causal"===a)throw new eb("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=xl(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=ox(o,n)),"channelsFirst"===s&&(o=Yd(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Mx(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){let r=$k(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:$x(this.kernelInitializer),kernelRegularizer:wk(this.kernelRegularizer),kernelConstraint:dw(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Qy(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},Lk=class extends Ok{constructor(e){super(2,e),Lk.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!bb(e.kernelSize,"number",1,2))throw new Qy(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};Lk.className="Conv2D",xc.registerClass(Lk);var zk=class extends Ok{constructor(e){super(3,e),zk.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Qy(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};zk.className="Conv3D",xc.registerClass(zk);var Pk=class extends Lk{constructor(e){if(super(e),this.inputSpec=[new Wx({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Qy(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Mx(e)).length)throw new Qy("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Qy("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Wx({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Zi((()=>{let t=Dx(e);if(4!==t.shape.length)throw new Qy(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a=t.shape,s=a[0];"channelsFirst"===this.dataFormat?(n=2,r=3):(n=1,r=2);let i=a[n],o=a[r],l=this.kernelSize[0],u=this.kernelSize[1],p=this.strides[0],d=this.strides[1],h=[s,Ak(i,p,l,this.padding),Ak(o,d,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Yd(t,[0,2,3,1]));let c=bl(t,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(c=Yd(c,[0,3,1,2])),null!=this.bias&&(c=ox(c,this.bias.read(),this.dataFormat)),null!=this.activation&&(c=this.activation.apply(c)),c}))}computeOutputShape(e){let t,n,r,a=(e=Mx(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3):(t=3,n=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return a[t]=this.filters,a[n]=Ak(a[n],o,s,this.padding),a[r]=Ak(a[r],l,i,this.padding),a}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Pk.className="Conv2DTranspose",xc.registerClass(Pk);var Bk=class extends zk{constructor(e){if(super(e),this.inputSpec=[new Wx({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Qy(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Mx(e)).length)throw new Qy("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Qy("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Wx({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Zi((()=>{let t=Dx(e);if(5!==t.shape.length)throw new Qy(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a,s=t.shape,i=s[0];"channelsFirst"===this.dataFormat?(a=2,n=3,r=4):(a=1,n=2,r=3);let o=s[a],l=s[n],u=s[r],p=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],c=this.strides[0],f=this.strides[1],m=this.strides[2],g=[i,Ak(o,c,p,this.padding),Ak(l,f,d,this.padding),Ak(u,m,h,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Yd(t,[0,2,3,4,1]));let y=vl(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Yd(y,[0,4,1,2,3])),null!==this.bias&&(y=ox(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){let t,n,r,a,s=(e=Mx(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3,a=4):(t=4,n=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],p=this.strides[1],d=this.strides[2];return s[t]=this.filters,s[n]=Ak(s[n],u,i,this.padding),s[r]=Ak(s[r],p,o,this.padding),s[a]=Ak(s[a],d,l,this.padding),s}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Bk.className="Conv3DTranspose",xc.registerClass(Bk);var Wk=class extends Ok{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Qy("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Qy("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Qy(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Ax(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=kk(t.depthwiseRegularizer),this.depthwiseConstraint=cw(t.depthwiseConstraint),this.pointwiseInitializer=Ax(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=kk(t.pointwiseRegularizer),this.pointwiseConstraint=cw(t.pointwiseConstraint)}build(e){if((e=Mx(e)).length<this.rank+2)throw new Qy(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Qy(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Wx({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Zi((()=>{let t;if(e=Dx(e),1===this.rank)throw new eb("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Yd(e,[0,2,3,1])),t=ld(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=ox(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Yd(t,[0,3,1,2])),t}))}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=$x(this.depthwiseInitializer),e.pointwiseInitializer=$x(this.pointwiseInitializer),e.depthwiseRegularizer=wk(this.depthwiseRegularizer),e.pointwiseRegularizer=wk(this.pointwiseRegularizer),e.depthwiseConstraint=dw(this.depthwiseConstraint),e.pointwiseConstraint=dw(this.pointwiseConstraint),e}};Wk.className="SeparableConv";var Vk=class extends Wk{constructor(e){super(2,e)}};Vk.className="SeparableConv2D",xc.registerClass(Vk);var Uk=class extends Ok{constructor(e){super(1,e),Uk.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!bb(e.kernelSize,"number",1,1))throw new Qy(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};Uk.className="Conv1D",xc.registerClass(Uk);var Gk=class extends jx{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Zi((()=>{if(e=Dx(e),"channelsLast"===this.dataFormat){let t=Jb(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Jb(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=Jb(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Jb(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Gk.className="Cropping2D",xc.registerClass(Gk);var Hk=class extends jx{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Fb(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function(e){yb(_b,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Zi((()=>{let t=Dx(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=Yd(t,[0,2,3,1]);let e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?fc.resizeNearestNeighbor(t,[e,r]):fc.resizeBilinear(t,[e,r]);return Yd(a,[0,3,1,2])}{let e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?fc.resizeNearestNeighbor(t,[e,r]):fc.resizeBilinear(t,[e,r])}}))}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};Hk.className="UpSampling2D",xc.registerClass(Hk);var jk=class extends Mk{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Ax(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=cw(e.depthwiseConstraint),this.depthwiseRegularizer=kk(e.depthwiseRegularizer)}build(e){if((e=Mx(e)).length<4)throw new Qy(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Qy(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Zi((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return Zi((()=>{null==a&&(a="channelsLast"),Fb(a);let i=Fk(e,a);if(4!==e.rank)throw new Qy(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Qy(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Cl(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Yd(i,[0,3,1,2])),i}))}(e=Dx(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=ox(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Mx(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=$k(t,this.kernelSize[0],this.padding,this.strides[0]),s=$k(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=$x(this.depthwiseInitializer),e.depthwiseRegularizer=wk(this.depthwiseRegularizer),e.depthwiseConstraint=dw(this.depthwiseRegularizer),e}};function qk(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Qy("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function Kk(e,t,n,r=!1,a,s,i=!1,o=!1){return Zi((()=>{let l=t.shape.length;if(l<3)throw new Qy(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(jb(2,l));if(t=Yd(t,u),null!=s)throw new eb("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=Bi(Bi(a,"bool"),"float32")).rank===l-1&&(a=uu(a,-1)),a=Yd(a,u)),r&&(t=ed(t,0),null!=a&&(a=ed(a,0)));let p,d,h,c=[],f=n,m=t.shape[0],g=Gd(t);null!=a&&(d=Gd(a));for(let t=0;t<m;++t){let n=g[t],r=Zi((()=>e(n,f)));if(null==a)p=r[0],f=r[1];else{let e=Zi((()=>{let e=d[t],n=zu(pp(e),e);return{output:po(fo(r[0],e),fo(f[0],n)),newStates:f.map(((t,a)=>po(fo(r[1][a],e),fo(t,n))))}}));p=e.output,f=e.newStates}o&&c.push(p)}return o&&(h=Nd(c,1)),[p,h,f]}))}jk.className="DepthwiseConv2D",xc.registerClass(jk);var Xk=class extends jx{constructor(e){let t;if(super(e),null==e.cell)throw new Qy("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new rI({cells:e.cell}):e.cell,null==t.stateSize)throw new Qy("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Wx({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return jb(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Fx(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n,r=t[0];if(n=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){let r=[];for(let n of t)r.push([e[0],n]);return[n].concat(r)}return n}computeMask(e,t){return Zi((()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;if(this.returnState){let t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new eb("Constants support is not implemented in RNN yet.");Fx(e)&&(e=e[0]);let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Wx({shape:[t,null,...n]});let r,a=[e[0]].concat(e.slice(2));if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ka.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new Qy(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new Wx({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Zi((()=>{if(!this.stateful)throw new Zy("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new Qy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Qu([n,e]))):this.states_=[Qu([n,this.cell.stateSize])];else if(null==e)Ji(this.states_),null!=this.keptStates&&(Ji(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Qu([n,e]))):this.states_[0]=Qu([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Qy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Ji(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!ka.arraysEqual(r.shape,s))throw new Qy(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Qi(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=qk(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let e of n)this.stateSpec.push(new Wx({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Vx){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Zi((()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=Dx(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new Qy(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=Kk(((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],p=o[2];this.stateful&&this.resetStates(p,r);let d=this.returnSequences?u:l;return this.returnState?[d].concat(p):d}))}getInitialState(e){return Zi((()=>{let t=Qu(e.shape);return t=au(t,[1,2]),t=Xb(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?tx(t,[1,e]):t)):this.cell.stateSize>1?[tx(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===Xk.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){let r=jw(t.cell,n);return new e(Object.assign(t,{cell:r}))}};Xk.className="RNN",xc.registerClass(Xk);var Yk=class extends jx{},Zk=class extends Yk{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,xb(this.units,"units"),this.activation=mk(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ax(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ax(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ax(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=kk(e.kernelRegularizer),this.recurrentRegularizer=kk(e.recurrentRegularizer),this.biasRegularizer=kk(e.biasRegularizer),this.kernelConstraint=cw(e.kernelConstraint),this.recurrentConstraint=cw(e.recurrentConstraint),this.biasConstraint=cw(e.biasConstraint),this.dropout=Gb([1,Hb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Gb([1,Hb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Mx(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Zi((()=>{if(2!==e.length)throw new Qy(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=aI({ones:()=>pp(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=aI({ones:()=>pp(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;a=rx(null!=s?fo(e,s):e,this.kernel.read()),null!=this.bias&&(a=ox(a,this.bias.read())),null!=i&&(n=fo(n,i));let o=po(a,rx(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ck(this.activation),useBias:this.useBias,kernelInitializer:$x(this.kernelInitializer),recurrentInitializer:$x(this.recurrentInitializer),biasInitializer:$x(this.biasInitializer),kernelRegularizer:wk(this.kernelRegularizer),recurrentRegularizer:wk(this.recurrentRegularizer),biasRegularizer:wk(this.biasRegularizer),activityRegularizer:wk(this.activityRegularizer),kernelConstraint:dw(this.kernelConstraint),recurrentConstraint:dw(this.recurrentConstraint),biasConstraint:dw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};Zk.className="SimpleRNNCell",xc.registerClass(Zk);var Jk=class extends Xk{constructor(e){e.cell=new Zk(e),super(e)}call(e,t){return Zi((()=>{null!=this.cell.dropoutMask&&(Ji(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ji(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};Jk.className="SimpleRNN",xc.registerClass(Jk);var Qk=class extends Yk{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Qy("GRUCell does not support reset_after parameter set to true.");this.units=e.units,xb(this.units,"units"),this.activation=mk(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=mk(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ax(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ax(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ax(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=kk(e.kernelRegularizer),this.recurrentRegularizer=kk(e.recurrentRegularizer),this.biasRegularizer=kk(e.biasRegularizer),this.kernelConstraint=cw(e.kernelConstraint),this.recurrentConstraint=cw(e.recurrentConstraint),this.biasConstraint=cw(e.biasConstraint),this.dropout=Gb([1,Hb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Gb([1,Hb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){let t=(e=Mx(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Zi((()=>{if(2!==e.length)throw new Qy(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=aI({ones:()=>pp(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=aI({ones:()=>pp(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a,s,i,o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=fo(e,o[0]));let u=rx(e,this.kernel.read());this.useBias&&(u=ox(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=fo(r,l[0]));let p=this.recurrentKernel.read(),[d,h]=vd(p,[2*this.units,this.units],p.rank-1),c=rx(r,d),[f,m,g]=vd(u,3,u.rank-1),[y,b]=vd(c,2,c.rank-1);a=this.recurrentActivation.apply(po(f,y)),s=this.recurrentActivation.apply(po(m,b));let x=rx(fo(s,r),h);i=this.activation.apply(po(g,x));let w=po(fo(a,r),fo(po(1,Mu(a)),i));return[w,w]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ck(this.activation),recurrentActivation:ck(this.recurrentActivation),useBias:this.useBias,kernelInitializer:$x(this.kernelInitializer),recurrentInitializer:$x(this.recurrentInitializer),biasInitializer:$x(this.biasInitializer),kernelRegularizer:wk(this.kernelRegularizer),recurrentRegularizer:wk(this.recurrentRegularizer),biasRegularizer:wk(this.biasRegularizer),activityRegularizer:wk(this.activityRegularizer),kernelConstraint:dw(this.kernelConstraint),recurrentConstraint:dw(this.recurrentConstraint),biasConstraint:dw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}};Qk.className="GRUCell",xc.registerClass(Qk);var eI=class extends Xk{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Qk(e),super(e)}call(e,t){return Zi((()=>{null!=this.cell.dropoutMask&&(Ji(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ji(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};eI.className="GRU",xc.registerClass(eI);var tI=class extends Yk{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,xb(this.units,"units"),this.activation=mk(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=mk(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ax(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ax(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ax(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=kk(e.kernelRegularizer),this.recurrentRegularizer=kk(e.recurrentRegularizer),this.biasRegularizer=kk(e.biasRegularizer),this.kernelConstraint=cw(e.kernelConstraint),this.recurrentConstraint=cw(e.recurrentConstraint),this.biasConstraint=cw(e.biasConstraint),this.dropout=Gb([1,Hb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Gb([1,Hb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n,r=(e=Mx(e))[e.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,r=this.units;n=new((t=class extends hx{apply(t,n){let a=e.apply([r]),s=(new fx).apply([r]),i=e.apply([2*r]);return ex(ex(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Zi((()=>{let n=null!=t.training&&t.training;if(3!==e.length)throw new Qy(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=aI({ones:()=>pp(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=aI({ones:()=>pp(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s,i,o,l,u=this.dropoutMask,p=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=fo(e,u[0]));let d=rx(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=fo(r,p[0])),d=po(d,rx(r,this.recurrentKernel.read())),this.useBias&&(d=ox(d,this.bias.read()));let[h,c,f,m]=vd(d,4,d.rank-1);s=this.recurrentActivation.apply(h),i=this.recurrentActivation.apply(c),o=po(fo(i,a),fo(s,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=fo(l,this.activation.apply(o));return[g,g,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ck(this.activation),recurrentActivation:ck(this.recurrentActivation),useBias:this.useBias,kernelInitializer:$x(this.kernelInitializer),recurrentInitializer:$x(this.recurrentInitializer),biasInitializer:$x(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:wk(this.kernelRegularizer),recurrentRegularizer:wk(this.recurrentRegularizer),biasRegularizer:wk(this.biasRegularizer),activityRegularizer:wk(this.activityRegularizer),kernelConstraint:dw(this.kernelConstraint),recurrentConstraint:dw(this.recurrentConstraint),biasConstraint:dw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}};tI.className="LSTMCell",xc.registerClass(tI);var nI=class extends Xk{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new tI(e),super(e)}call(e,t){return Zi((()=>{null!=this.cell.dropoutMask&&(Ji(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ji(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};nI.className="LSTM",xc.registerClass(nI);var rI=class extends Yk{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Zi((()=>{let n=e.slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a,s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(let e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Fx(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Ob(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){let e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){let r=[];for(let e of t.cells)r.push(jw(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Px(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Bx(t)}};function aI(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):lx(t(),n),o=()=>ux(i,t,r);return!a||a<=1?Qi(o().clone()):Array(a).fill(void 0).map(o).map((e=>Qi(e.clone())))}rI.className="StackedRNNCells",xc.registerClass(rI);var sI=class extends Xk{constructor(e){if(e.unroll)throw new eb("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new eb("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Wx({ndim:5})]}call(e,t){return Zi((()=>{if(null!=this.cell.dropoutMask&&(Ji(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ji(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Qy("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Zi((()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=Qu([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){Zi((()=>{if(!this.stateful)throw new Zy("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new Qy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Qu(a))):this.states_=[Qu(a)];else if(null==e)Ji(this.states_),null!=this.keptStates&&(Ji(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Qu(a))):this.states_[0]=Qu(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Qy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ji(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],r=a;if(!ka.arraysEqual(n.shape,r))throw new Qy(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Qi(e.clone())))}))}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],p=$k(l,r[0],a,s[0],i[0]),d=$k(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,p,d]:[p,d,n]]}};sI.className="ConvRNN2D";var iI=class extends tI{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,xb(this.filters,"filters"),this.kernelSize=Ek(n,2,"kernelSize"),this.kernelSize.forEach((e=>xb(e,"kernelSize"))),this.strides=Ek(r||1,2,"strides"),this.strides.forEach((e=>xb(e,"strides"))),this.padding=a||"valid",Rb(this.padding),this.dataFormat=s||"channelsLast",Fb(this.dataFormat),this.dilationRate=Ek(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>xb(e,"dilationRate")))}build(e){var t;e=Mx(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Qy(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,r=this.filters;e=new((t=class extends hx{apply(e,t){return Qb([n.apply([r]),ep([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Zi((()=>{if(3!==e.length)throw new Qy(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=aI({ones:()=>pp(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?fo(t[n],e):e,l=o(r,i,0),u=o(r,i,1),p=o(r,i,2),d=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=aI({ones:()=>pp(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,c=o(a,h,0),f=o(a,h,1),m=o(a,h,2),g=o(a,h,3),[y,b,x,w]=vd(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?vd(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,b,k,this.padding),p=this.inputConv(p,x,I,this.padding),d=this.inputConv(d,w,S,this.padding);let[N,T,_,C]=vd(this.recurrentKernel.read(),4,3);c=this.recurrentConv(c,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,_),g=this.recurrentConv(g,C);let E=this.recurrentActivation.apply(po(l,c)),$=this.recurrentActivation.apply(po(u,f)),A=po(fo($,s),fo(E,this.activation.apply(po(p,m)))),F=fo(this.recurrentActivation.apply(po(d,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){let e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){let a=ml(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?ox(a,n,this.dataFormat):a}recurrentConv(e,t){return ml(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};iI.className="ConvLSTM2DCell",xc.registerClass(iI);var oI=class extends sI{constructor(e){let t=new iI(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}};oI.className="ConvLSTM2D",xc.registerClass(oI);var lI=class extends jx{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Zi((()=>{this.invokeCallHook(e,t);let n=Dx(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,r=this.getNoiseShape(n);return ux((()=>lx(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};lI.className="Dropout",xc.registerClass(lI);var uI=class extends lI{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};uI.className="SpatialDropout1D",xc.registerClass(uI);var pI=class extends jx{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,xb(this.units,"units"),this.activation=mk(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Ax(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ax(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=cw(e.kernelConstraint),this.biasConstraint=cw(e.biasConstraint),this.kernelRegularizer=kk(e.kernelRegularizer),this.biasRegularizer=kk(e.biasRegularizer),this.activityRegularizer=kk(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=Mx(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=Mx(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Zi((()=>{this.invokeCallHook(e,t);let n,r=Dx(e),a=vb(this.activation.getClassName());return null!=a?n=rx(r,this.kernel.read(),a,this.bias?this.bias.read():null):(n=rx(r,this.kernel.read()),null!=this.bias&&(n=ox(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n}))}getConfig(){let e={units:this.units,activation:ck(this.activation),useBias:this.useBias,kernelInitializer:$x(this.kernelInitializer),biasInitializer:$x(this.biasInitializer),kernelRegularizer:wk(this.kernelRegularizer),biasRegularizer:wk(this.biasRegularizer),activityRegularizer:wk(this.activityRegularizer),kernelConstraint:dw(this.kernelConstraint),biasConstraint:dw(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};pI.className="Dense",xc.registerClass(pI);var dI=class extends jx{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Mx(e);for(let t of e.slice(1))if(null==t)throw new Qy(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ub(e,1)]}call(e,t){return Zi((()=>{this.invokeCallHook(e,t);let n=Dx(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Yd(n,e)}return function(e){if(e.rank<=1)throw new Qy(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Ub(e.shape,1)];return Uo(e,t)}(n)}))}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};dI.className="Flatten",xc.registerClass(dI);var hI=class extends jx{constructor(e){super(e),this.supportsMasking=!0,this.activation=mk(e.activation)}call(e,t){return Zi((()=>{this.invokeCallHook(e,t);let n=Dx(e);return this.activation.apply(n)}))}getConfig(){let e={activation:ck(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};hI.className="Activation",xc.registerClass(hI);var cI=class extends jx{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Zi((()=>function(e,t){return Zi((()=>{if(2!==e.shape.length)throw new Qy(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return tx(Xb(e,1),[1,t,1])}))}(e=Dx(e),this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};cI.className="RepeatVector",xc.registerClass(cI);var fI=class extends jx{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let e=0;e<r.length;++e){let t=r[e];if(this.isUnknown(t)){if(null!==s)throw new Qy("Can only specifiy one unknown dimension.");s=e}else a*=t}let i=Ub(e);if(null!==s){if(0===a||i%a!=0)throw new Qy(n);r[s]=i/a}else if(i!==a)throw new Qy(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Zi((()=>{this.invokeCallHook(e,t);let n=Dx(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Uo(n,a)}))}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};fI.className="Reshape",xc.registerClass(fI);var mI=class extends jx{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=jb(1,e.dims.length+1);if(!ka.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Wx({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=Mx(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Yd(Dx(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};mI.className="Permute",xc.registerClass(mI);var gI=class extends jx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Dx(e);return wo(lp(n,this.maskValue),-1)}call(e,t){return Zi((()=>{this.invokeCallHook(e,t);let n=Dx(e),r=wo(lp(n,this.maskValue),-1,!0);return fo(n,Bi(r,n.dtype))}))}};gI.className="Masking",xc.registerClass(gI);var yI=class extends jx{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ob(e.inputLength))}this.inputDim=e.inputDim,xb(this.inputDim,"inputDim"),this.outputDim=e.outputDim,xb(this.outputDim,"outputDim"),this.embeddingsInitializer=Ax(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=kk(e.embeddingsRegularizer),this.activityRegularizer=kk(e.activityRegularizer),this.embeddingsConstraint=cw(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Zi((()=>this.maskZero?(e=Dx(e),lp(e,Ll(e))):null))}computeOutputShape(e){if(e=Mx(e),null==this.inputLength)return[...e,this.outputDim];let t=ob(this.inputLength);if(t.length!==e.length-1)throw new Qy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new Qy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Zi((()=>{this.invokeCallHook(e,t);let n=Dx(e);"int32"!==n.dtype&&(n=Kb(n,"int32"));let r=ax(this.embeddings.read(),Uo(n,[n.size]));return Uo(r,Mx(this.computeOutputShape(n.shape)))}))}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:$x(this.embeddingsInitializer),embeddingsRegularizer:wk(this.embeddingsRegularizer),activityRegularizer:wk(this.activityRegularizer),embeddingsConstraint:dw(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};yI.className="Embedding",xc.registerClass(yI);var bI=class extends jx{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new eb}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new Qy("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Mx(e)]),e.length<2)throw new Qy(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=mb(t),t.length>1)throw new Qy(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}let r=e.map((e=>e.length));-1===e.indexOf(null)&&1===mb(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Zi((()=>{if(this.reshapeRequired){let t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){let r=Hb(n);for(let n of e){let e=n.rank;for(let t=0;t<r-e;++t)n=Xb(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let r of e){let e=r.rank;if(null==e){let e=r.shape,a=e[0],s=e.slice(1).concat([a]),i=Uo(r,[a].concat(Ub(e.slice(1))));i=Yd(i,[1,0]),i=Uo(i,s),t.push(i),n=!0}else if(e>1){let a=jb(1,e).concat([0]);t.push(Yd(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t),a=r.rank;if(n)if(null==a){let e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Uo(Yd(Uo(r,[-1,t]),[1,0]),n)}else if(a>1){let e=[a-1].concat(jb(0,a-1));r=Yd(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){let r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=mb(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Zi((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Qy("`mask` should be an Array");if(!Array.isArray(e))throw new Qy("`inputs` should be an Array");if(t.length!==e.length)throw new Qy(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:uu(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Wu(n,t[e]);return n}))}},xI=class extends bI{constructor(e){super(e)}mergeFunction(e){return Zi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=po(t,e[n]);return t}))}};xI.className="Add",xc.registerClass(xI);var wI=class extends bI{constructor(e){super(e)}mergeFunction(e){return Zi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=fo(t,e[n]);return t}))}};wI.className="Multiply",xc.registerClass(wI);var vI=class extends bI{constructor(e){super(e)}mergeFunction(e){return Zi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=po(t,e[n]);return fo(1/e.length,t)}))}};vI.className="Average",xc.registerClass(vI);var kI=class extends bI{constructor(e){super(e)}mergeFunction(e){return Zi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Zu(t,e[n]);return t}))}};kI.className="Maximum",xc.registerClass(kI);var II=class extends bI{constructor(e){super(e)}mergeFunction(e){return Zi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=np(t,e[n]);return t}))}};II.className="Minimum",xc.registerClass(II);var SI=class extends bI{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Qy("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let n of e)if(null!=n){t=!1;break}if(t)return;let n=[];for(let t=0;t<e.length;++t){let r=e[t].slice();r.splice(this.axis,1);let a=!1;for(let e of n)if(ka.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new Qy("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Zi((()=>Qb(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Qy("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Qy("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Qy("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Qy(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Zi((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;let r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Bi(pp(e[n]),"bool")):t[n].rank<e[n].rank?r.push(uu(t[n],-1)):r.push(t[n]);let a=jo(r,this.axis);return xo(a,-1,!1)}))}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function NI(e,t){for(;e<0;)e+=t;return e}SI.className="Concatenate",xc.registerClass(SI);var TI=class extends bI{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ka.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new eb("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Qy(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Qy(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>NI(t,e[n].shape.length))):[NI(this.axes,n.shape.length),NI(this.axes,r.shape.length)],this.normalize&&(n=qw(n,t[0]),r=qw(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new eb("batchDot is not implemented for tensors of 4D or higher rank yet");if(ka.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),ka.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new eb("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);let s=n;return Zi((()=>{let n,i;if(r>a){n=r-a;let e=[];for(let t=0;t<n;++t)e.push(1);t=Uo(t,t.shape.concat(e))}else if(a>r){n=a-r;let t=[];for(let e=0;e<n;++e)t.push(1);e=Uo(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?au(fo(e,t),s[0]):au(fo(Yd(e,[1,0]),t),s[1]);else{let n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=qo(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;let t=[];for(let r=e;r<e+n;++r)t.push(r);i=Sd(i,t)}return 1===i.shape.length&&(i=uu(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[NI(this.axes,e.length),NI(this.axes,t.length)],n}computeOutputShape(e){ka.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new eb("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};TI.className="Dot",xc.registerClass(TI);var _I=class extends jx{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Zi((()=>{this.invokeCallHook(e,t);let n=Dx(e);return ux((()=>po(nx(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}};_I.className="GaussianNoise",xc.registerClass(_I);var CI=class extends jx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Zi((()=>{this.invokeCallHook(e,t);let n=Dx(e);return this.rate>0&&this.rate<1?ux((()=>{let e=Math.sqrt(this.rate/(1-this.rate));return fo(n,nx(n.shape,1,e))}),(()=>n),t.training||!1):n}))}};CI.className="GaussianDropout",xc.registerClass(CI);var EI=class extends jx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Dx(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Zi((()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return ux((()=>{let t=Dx(e),r=-1.7580993408473766,a=gu(qp(n),this.rate);a=Kb(a,"float32");let s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=po(fo(t,a),fo(po(a,-1),r));return po(fo(o,s),i)}),(()=>Dx(e)),t.training||!1)}return e}))}};function $I(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=tl(e,t,n,r,a,s);else if(3===e.rank)i=nl(e,t,n,r,a,s);else{if(4!==e.rank)throw new eb(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=rl(e,t,n,r,a,s)}return i}function AI(e,t,n,r,a=.001){return ka.arraysEqual(r.slice().sort(),jb(0,e.rank-1))?function(e,t,n,r,a=.001){return Zi((()=>{let s=sp(e,r),i=s.mean,o=s.variance;return[$I(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return Zi((()=>{let s=sp(e,r),i=s.mean,o=s.variance,l=[];for(let t of jb(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=Uo(i,l),p=Uo(o,l),d=null==t?null:Uo(t,l),h=null==n?null:Uo(n,l);return[$I(e,u,p,h,d,a),i,o]}))}(e,t,n,r,a)}EI.className="AlphaDropout",xc.registerClass(EI);var FI=class extends jx{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ax(e.betaInitializer||"zeros"),this.gammaInitializer=Ax(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ax(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ax(e.movingVarianceInitializer||"ones"),this.betaConstraint=cw(e.betaConstraint),this.gammaConstraint=cw(e.gammaConstraint),this.betaRegularizer=kk(e.betaRegularizer),this.gammaRegularizer=kk(e.gammaRegularizer)}build(e){e=Mx(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Qy(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Wx({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Zi((()=>{let n=null!=t.training&&t.training,r=Dx(e),a=r.shape,s=a.length,i=jb(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=rb(1,s);l[o]=a[o];let u=i.slice();u.sort();let p=!ka.arraysEqual(u,jb(0,s).slice(0,s-1));if(!n)return(()=>{if(p){let e=Uo(this.movingMean.read(),l),t=Uo(this.movingVariance.read(),l),n=this.center?Uo(this.beta.read(),l):null,a=this.scale?Uo(this.gamma.read(),l):null;return $I(r,e,t,n,a,this.epsilon)}return $I(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();let[d,h,c]=AI(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Zi((()=>{let r=1-n,a=e.read(),s=fo(zu(a,t),r);e.write(zu(a,s))}))};return f(this.movingMean,h,this.momentum),f(this.movingVariance,c,this.momentum),d}))}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:$x(this.betaInitializer),gammaInitializer:$x(this.gammaInitializer),movingMeanInitializer:$x(this.movingMeanInitializer),movingVarianceInitializer:$x(this.movingVarianceInitializer),betaRegularizer:wk(this.betaRegularizer),gammaRegularizer:wk(this.gammaRegularizer),betaConstraint:dw(this.betaConstraint),gammaConstraint:dw(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};FI.className="BatchNormalization",xc.registerClass(FI);var RI=class extends jx{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ax(e.betaInitializer||"zeros"),this.gammaInitializer=Ax(e.gammaInitializer||"ones"),this.betaRegularizer=kk(e.betaRegularizer),this.gammaRegularizer=kk(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=Mx(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(let e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==mb(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let n=Dx(e),r=n.shape,a=r.length;return Zi((()=>{let{mean:e,variance:t}=sp(n,this.axis,!0),s=rb(1,a);for(let e of this.axis)s[e]=r[e];let i=e=>null!=e&&e.shape.length!==a?Uo(e,s):e,o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null,u=[],p=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),p.push(1)):(u.push(1),p.push(r[e]));return e=du(e,u),t=du(t,u),null!=o&&(o=du(o,p)),null!=l&&(l=du(l,p)),$I(n,e,t,l,o,this.epsilon)}))}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:$x(this.betaInitializer),gammaInitializer:$x(this.gammaInitializer),betaRegularizer:wk(this.betaRegularizer),gammaRegularizer:wk(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};RI.className="LayerNormalization",xc.registerClass(RI);var DI=class extends jx{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Qy(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Qy(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Qy(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Wx({ndim:4})]}computeOutputShape(e){let t,n;return e=Mx(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Zi((()=>function(e,t,n){return Zi((()=>{if(4!==e.rank)throw new Qy(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new Qy("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new Qy(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],hp(e,r)}))}(Dx(e),this.padding,this.dataFormat)))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function MI(e,t,n,r,a,s){return Zi((()=>{Fb(a),Db(s),Rb(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Fk(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Ku(e,t,n,o):Go(e,t,n,o),"channelsFirst"===a&&(i=Yd(i,[0,3,1,2])),i}))}function OI(e,t,n,r,a,s){return Zi((()=>{Fb(a),Db(s),Rb(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Rk(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Xu(e,t,n,o):Ho(e,t,n,o),"channelsFirst"===a&&(i=Yd(i,[0,4,1,2,3])),i}))}DI.className="ZeroPadding2D",xc.registerClass(DI);var LI=class extends jx{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Qy(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(xb(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Qy(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}xb(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Rb(this.padding),this.inputSpec=[new Wx({ndim:3})]}computeOutputShape(e){let t=$k((e=Mx(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Zi((()=>{this.invokeCallHook(e,t),e=Xb(Dx(e),2);let n=this.poolingFunction(Dx(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Sd(n,[2])}))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},zI=class extends LI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Fb(a),Rb(r),MI(e,t,n,r,a,"max")}};zI.className="MaxPooling1D",xc.registerClass(zI);var PI=class extends LI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Fb(a),Rb(r),MI(e,t,n,r,a,"avg")}};PI.className="AveragePooling1D",xc.registerClass(PI);var BI=class extends jx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Qy(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];xb(this.poolSize,"poolSize"),xb(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Fb(this.dataFormat),Rb(this.padding),this.inputSpec=[new Wx({ndim:4})]}computeOutputShape(e){e=Mx(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=$k(t,this.poolSize[0],this.padding,this.strides[0]),n=$k(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Zi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Dx(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},WI=class extends BI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Fb(a),Rb(r),MI(e,t,n,r,a,"max")}};WI.className="MaxPooling2D",xc.registerClass(WI);var VI=class extends BI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Fb(a),Rb(r),MI(e,t,n,r,a,"avg")}};VI.className="AveragePooling2D",xc.registerClass(VI);var UI=class extends jx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Qy(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];xb(this.poolSize,"poolSize"),xb(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Fb(this.dataFormat),Rb(this.padding),this.inputSpec=[new Wx({ndim:5})]}computeOutputShape(e){e=Mx(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=$k(t,this.poolSize[0],this.padding,this.strides[0]),n=$k(n,this.poolSize[1],this.padding,this.strides[1]),r=$k(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Zi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Dx(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},GI=class extends UI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Fb(a),Rb(r),OI(e,t,n,r,a,"max")}};GI.className="MaxPooling3D",xc.registerClass(GI);var HI=class extends UI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Fb(a),Rb(r),OI(e,t,n,r,a,"avg")}};HI.className="AveragePooling3D",xc.registerClass(HI);var jI=class extends jx{constructor(e){super(e),this.inputSpec=[new Wx({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new eb}},qI=class extends jI{constructor(e){super(e||{})}call(e,t){return Zi((()=>{let t=Dx(e);return Ju(t,1)}))}};qI.className="GlobalAveragePooling1D",xc.registerClass(qI);var KI=class extends jI{constructor(e){super(e||{})}call(e,t){return Zi((()=>{let t=Dx(e);return Jl(t,1)}))}};KI.className="GlobalMaxPooling1D",xc.registerClass(KI);var XI=class extends jx{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Fb(this.dataFormat),this.inputSpec=[new Wx({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new eb}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},YI=class extends XI{call(e,t){return Zi((()=>{let t=Dx(e);return"channelsLast"===this.dataFormat?Ju(t,[1,2]):Ju(t,[2,3])}))}};YI.className="GlobalAveragePooling2D",xc.registerClass(YI);var ZI=class extends XI{call(e,t){return Zi((()=>{let t=Dx(e);return"channelsLast"===this.dataFormat?Jl(t,[1,2]):Jl(t,[2,3])}))}};ZI.className="GlobalMaxPooling2D",xc.registerClass(ZI);var JI=class extends jx{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=jw(t.layer,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},QI=class extends JI{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Mx(e)).length<3)throw new Qy(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=Mx(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Zi((()=>Kk(((e,n)=>[Dx(this.layer.call(e,t)),[]]),e=Dx(e),[],!1,null,null,!1,!0)[1]))}};QI.className="TimeDistributed",xc.registerClass(QI);var eS=class extends JI{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=jw(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=jw(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function(e){yb($b,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new eb("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(r=a.slice(1)),t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):ib(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=qk(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new Qy("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let r=n.map((e=>new Wx({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new eb("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof Vx;for(let e of s)if(e instanceof Vx!==o)throw new Qy("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Zi((()=>{let n,r,a,s,i=t.initialState;if(null==i)n=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let a=i.slice(0,i.length/2),s=i.slice(i.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(n)&&(a=n.slice(1).concat(r.slice(1))),n=n[0],r=r[0]),this.returnSequences&&(r=ed(r,1)),"concat"===this.mergeMode?s=Qb([n,r]):"sum"===this.mergeMode?s=po(n,r):"ave"===this.mergeMode?s=fo(.5,po(n,r)):"mul"===this.mergeMode?s=fo(n,r):null==this.mergeMode&&(s=[n,r]),this.returnState?null==this.mergeMode?s.concat(a):[s].concat(a):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ob(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ob(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){let e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=jw(t.layer);if(delete t.layer,null!=t.numConstants)throw new eb("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};eS.className="Bidirectional",xc.registerClass(eS);var tS=class extends jx{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Zi((()=>("float32"!==(e=Dx(e)).dtype&&(e=Kb(e,"float32")),po(fo(e,this.scale),this.offset))))}};tS.className="Rescaling",xc.registerClass(tS);var{resizeBilinear:nS,cropAndResize:rS}=fc,aS=class extends jx{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,s,i,o){return Zi((()=>{let l,u=!1,p=[t/s,n/i,(r+t)/s,(a+n)/i],d=[];3===e.rank?(u=!0,l=Nd([e])):l=e;for(let e=0;e<l.shape[0];e++)d.push(p);let h=Us(d,[d.length,4]),c=Xp(0,d.length,1,"int32"),f=rS(l,h,c,[r,a],"nearest");return Kb(u?Dx(Gd(f)):f,o)}))}upsize(e,t,n,r){return Zi((()=>Kb(nS(e,[t,n]),r)))}call(e,t){return Zi((()=>{let t=Dx(e),n=t.dtype,r=t.shape,a=r[r.length-3],s=r[r.length-2],i=0;a!==this.height&&(i=Math.floor((a-this.height)/2));let o=0;return s!==this.width&&(o=Math.floor((s-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,a,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){let e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){let t=(e=Mx(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}};aS.className="CenterCrop",xc.registerClass(aS);var sS=class extends jx{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Mx(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Zi((()=>{let n;if("int32"!==(e=Dx(e)).dtype&&(e=Kb(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new Qy(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=Dx(t.countWeights)}let r=Jl(e),a=Ql(e),s=mu(this.numTokens,r).bufferSync().get(0),i=gu(a,0).bufferSync().get(0);if(!s||!i)throw new Qy(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let a=Dx(e);if("int32"!==a.dtype&&(a=Kb(a,"int32")),"int"===t)return a;let s=a.shape;if(0===a.rank&&(a=uu(a,-1)),"oneHot"===t&&1!==a.shape[a.shape.length-1]&&(a=uu(a,-1)),a.rank>2)throw new Qy(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${a.rank}.`);let i,o=["multiHot","oneHot"].includes(t),l=a;if(i=Tl(l,void 0!==r&&"count"===t?r:[],n,o),"tfIdf"!==t)return i;if(r)return fo(i,r);throw new Qy("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}};sS.className="CategoryEncoding",xc.registerClass(sS);var iS=new Set(["bilinear","nearest"]),oS=class extends jx{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!iS.has(e.interpolation))throw new Qy(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){let t=(e=Mx(e))[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Zi((()=>{let t=[this.height,this.width];if("bilinear"===this.interpolation)return fc.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return fc.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...iS]} are supported`)}))}};oS.className="Resizing",xc.registerClass(oS);var lS=class{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}};lS.className="RandomSeed";var uS=class extends jx{constructor(e){super(e),this.randomGenerator=new lS(e.seed)}getConfig(){let e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}};uS.className="BaseRandomLayer";var pS=new Set(["bilinear","nearest"]),dS=class extends uS{constructor(e){super(e);let{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Qy(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Qy(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new Qy(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!pS.has(n))throw new Qy(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){let e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){let t=(e=Mx(e))[2];return[this.imgHeight,-1,t]}call(e,t){return Zi((()=>{let t=Dx(e);this.imgHeight=t.shape[t.shape.length-3];let n=t.shape[t.shape.length-2];this.widthFactor=qp([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);let a=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return fc.resizeBilinear(e,a);case"nearest":return fc.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...pS]} are supported`)}}))}};function hS(e){return new Kx(e)}function cS(e){return new Tk(e)}function fS(e){return new Ik(e)}function mS(e){return new Sk(e)}function gS(e){return new Nk(e)}function yS(e){return new Ck(e)}function bS(e){return new _k(e)}function xS(e){return new Uk(e)}function wS(e){return new Lk(e)}function vS(e){return new Pk(e)}function kS(e){return new zk(e)}function IS(e){return new Bk(e)}function SS(e){return new Vk(e)}function NS(e){return new Gk(e)}function TS(e){return new Hk(e)}function _S(e){return new jk(e)}function CS(e){return new hI(e)}function ES(e){return new pI(e)}function $S(e){return new lI(e)}function AS(e){return new uI(e)}function FS(e){return new dI(e)}function RS(e){return new cI(e)}function DS(e){return new fI(e)}function MS(e){return new mI(e)}function OS(e){return new yI(e)}function LS(e){return new xI(e)}function zS(e){return new vI(e)}function PS(e){return new SI(e)}function BS(e){return new kI(e)}function WS(e){return new II(e)}function VS(e){return new wI(e)}function US(e){return new TI(e)}function GS(e){return new FI(e)}function HS(e){return new RI(e)}function jS(e){return new DI(e)}function qS(e){return new PI(e)}function KS(e){return qS(e)}function XS(e){return qS(e)}function YS(e){return new VI(e)}function ZS(e){return YS(e)}function JS(e){return YS(e)}function QS(e){return new HI(e)}function eN(e){return QS(e)}function tN(e){return QS(e)}function nN(e){return new qI(e)}function rN(e){return new YI(e)}function aN(e){return new KI(e)}function sN(e){return new ZI(e)}function iN(e){return new zI(e)}function oN(e){return new WI(e)}function lN(e){return new GI(e)}function uN(e){return new eI(e)}function pN(e){return new Qk(e)}function dN(e){return new nI(e)}function hN(e){return new tI(e)}function cN(e){return new Jk(e)}function fN(e){return new Zk(e)}function mN(e){return new oI(e)}function gN(e){return new iI(e)}function yN(e){return new Xk(e)}function bN(e){return new rI(e)}function xN(e){return new eS(e)}function wN(e){return new QI(e)}dS.className="RandomWidth",xc.registerClass(dS);var vN=aN,kN=sN,IN=iN,SN=oN;function NN(e){return new _I(e)}function TN(e){return new CI(e)}function _N(e){return new EI(e)}function CN(e){return new gI(e)}function EN(e){return new tS(e)}function $N(e){return new aS(e)}function AN(e){return new oS(e)}function FN(e){return new sS(e)}function RN(e){return new dS(e)}var DN={};function MN(e,t){return rv(e,t)}function ON(e,t){return lv(e,t)}function LN(e,t){return uv(e,t)}function zN(e,t){return av(e,t)}function PN(e,t){return pv(e,t)}function BN(e,t){return iv(e,t)}function WN(e,t){return ov(e,t)}function VN(e,t){return ev(e,t)}function UN(e,t){return Xw(e,t)}function GN(e,t){return Yw(e,t)}function HN(e,t){return Yw(e,t)}function jN(e,t){return Yw(e,t)}function qN(e,t){return Kw(e,t)}function KN(e,t){return Kw(e,t)}function XN(e,t){return Kw(e,t)}g(DN,{MAPE:()=>HN,MSE:()=>KN,binaryAccuracy:()=>MN,binaryCrossentropy:()=>ON,categoricalAccuracy:()=>zN,categoricalCrossentropy:()=>PN,cosineProximity:()=>VN,mape:()=>jN,meanAbsoluteError:()=>UN,meanAbsolutePercentageError:()=>GN,meanSquaredError:()=>qN,mse:()=>XN,precision:()=>BN,recall:()=>WN,sparseCategoricalAccuracy:()=>LN});var YN={};g(YN,{modelFromJSON:()=>Hv});var ZN={};function JN(e){return new bk(e)}function QN(e){return function(e){return gk(e),new bk({l1:null!=e?e.l1:null,l2:0})}(e)}function eT(e){return function(e){return gk(e),new bk({l2:null!=e?e.l2:null,l1:0})}(e)}g(ZN,{l1:()=>QN,l1l2:()=>JN,l2:()=>eT});var tT=class extends zw{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Uv))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function nT(e,t){return e<t}function rT(e,t){return e>t}var aT=class extends tT{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new eb("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=nT:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=rT:this.monitorFunc=nT,this.monitorFunc===nT&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===nT?1/0:-1/0}async onEpochEnd(e,t){await Ow(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};var sT,iT,oT={earlyStopping:function(e){return new aT(e)}};Pe().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(sT||(sT={})),function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(iT||(iT={}));var lT={};function uT(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};lT[e]=n}function pT(e){return lT[e]}function dT(e){delete lT[e]}function hT(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return cT(t.inputNames[o],n,r,a);if("tensors"===s.type){let s=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>cT(e,n,r,a)))}let l=cT(t.inputNames[o],n,r,a),u=l.dataSync();return"number"===s.type?u[0]:ka.toNestedArray(l.shape,u)}let i=t.attrParams[e];return i&&i.value}function cT(e,t,n,r){let[a,s]=yT(e,n);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let i=n.currentContextIds.find((e=>!!t[gT(a,e)]));return void 0!==i?t[gT(a,i)][s]:void 0}function fT(e,t,n){return t[gT(e,n.currentContextId)]}function mT(e,t){let[n,r,a]=yT(e,t);return[gT(n,t&&t.currentContextId),r,a]}function gT(e,t){return t?`${e}-${t}`:e}function yT(e,t){if(""===e)return["",0,void 0];let n=null!=t&&null!=t.parseNodeNameCache;if(n){let n=t.parseNodeNameCache.get(e);if(null!=n)return n}let r,a=e.split(":");if(1===a.length)r=[e,0,void 0];else{let e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function bT(e,t,n){let r=hT("pad",e,t,n);if("explicit"===r){r=hT("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function xT(e){return e.kept?e:Wi(e)}var wT={};g(wT,{json:()=>vT});var vT=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],kT={};g(kT,{json:()=>IT});var IT=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ST={};g(ST,{json:()=>NT});var NT=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],TT={};g(TT,{json:()=>_T});var _T=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],CT={};g(CT,{json:()=>ET});var ET=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],$T={};g($T,{json:()=>AT});var AT=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],FT={};g(FT,{json:()=>RT});var RT=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],DT={};g(DT,{json:()=>MT});var MT=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],OT={};g(OT,{json:()=>LT});var LT=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],zT={};g(zT,{json:()=>PT});var PT=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],BT={};g(BT,{json:()=>WT});var WT=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],VT={};g(VT,{json:()=>UT});var UT=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],GT={};g(GT,{json:()=>HT});var HT=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],jT={};g(jT,{json:()=>qT});var qT=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],KT={};g(KT,{json:()=>XT});var XT=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],YT={};g(YT,{json:()=>ZT});var ZT=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],JT={};g(JT,{json:()=>QT});var QT=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],e_={};g(e_,{json:()=>t_});var t_=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],n_={};g(n_,{json:()=>r_});var r_=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],a_=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[wT,kT,ST,TT,CT,$T,FT,DT,OT,zT,BT,VT,GT,jT,KT,YT,JT,e_,n_].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e)),{}),o=[],l=[],u={},p={};null!=t&&(u=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));let d=Object.keys(i);d.forEach((e=>{let t=i[e];t.inputNames.forEach(((e,n)=>{let[r,,a]=mT(e),s=i[r];if(null!=s.outputs){let e=s.outputs.indexOf(a);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(p).length?d.forEach((e=>{let t=i[e];0===t.children.length&&l.push(t)})):Object.keys(p).forEach((e=>{let[t]=mT(e),n=i[t];null!=n&&(n.signatureKey=p[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{let[t]=mT(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:h};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){let t=pT(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{let r,a=n.type;switch(n.type){case"string":r=i_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=i_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=g_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=g_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=l_(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=l_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=m_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=m_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=o_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=o_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=b_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=b_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=f_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=f_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=y_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=y_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=d_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=d_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=h_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=h_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=p_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=p_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){let t=e.nodeDef,n=[],r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));let a=[],s=[];e.signature.inputArg.forEach((e=>{let[t]=mT(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:u_(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{let t=r[e];t.inputNames.forEach(((e,n)=>{let[a,,s]=mT(e),i=r[a];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));let i=e.ret;e.signature.outputArg.forEach((e=>{let[t,n]=mT(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));let o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function s_(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=Pe().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function i_(e,t,n,r=!1){let a=e[t];return null!=a?s_(a.s,r):n}function o_(e,t,n){let r=e[t];return r?r.b:n}function l_(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function u_(e){switch("string"==typeof e&&(e=sT[e]),e){case sT.DT_FLOAT:case sT.DT_HALF:return"float32";case sT.DT_INT32:case sT.DT_INT64:case sT.DT_INT8:case sT.DT_UINT8:return"int32";case sT.DT_BOOL:return"bool";case sT.DT_DOUBLE:return"float32";case sT.DT_STRING:return"string";default:return null}}function p_(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function d_(e,t,n){let r=e[t];return r&&r.type?u_(r.type):n}function h_(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>u_(e))):n}function c_(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function f_(e,t,n){let r=e[t];return r&&r.shape?c_(r.shape):n}function m_(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function g_(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>s_(e,r))):n}function y_(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>c_(e))):n}function b_(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var x_=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return cT(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return cT(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return l_(this.node.rawAttrs,e,t);if(null!=n.s)return i_(this.node.rawAttrs,e,t);if(null!=n.b)return o_(this.node.rawAttrs,e,t);if(null!=n.shape)return f_(this.node.rawAttrs,e,t);if(null!=n.type)return d_(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return m_(this.node.rawAttrs,e,t);if(null!=n.list.s)return g_(this.node.rawAttrs,e,t);if(null!=n.list.shape)return y_(this.node.rawAttrs,e,t);if(null!=n.list.b)return b_(this.node.rawAttrs,e,t);if(null!=n.list.type)return h_(this.node.rawAttrs,e,t)}return t}},w_={};g(w_,{OP_SCOPE_SUFFIX:()=>Ps,abs:()=>mo,acos:()=>go,acosh:()=>yo,add:()=>po,addN:()=>bo,all:()=>xo,any:()=>wo,argMax:()=>vo,argMin:()=>ko,asin:()=>Io,asinh:()=>So,atan:()=>No,atan2:()=>To,atanh:()=>_o,avgPool:()=>Go,avgPool3d:()=>Ho,basicLSTMCell:()=>Zo,batchNorm:()=>el,batchNorm2d:()=>tl,batchNorm3d:()=>nl,batchNorm4d:()=>rl,batchToSpaceND:()=>Jo,bincount:()=>al,bitwiseAnd:()=>sl,booleanMaskAsync:()=>Xd,broadcastArgs:()=>il,broadcastTo:()=>ol,buffer:()=>Pi,cast:()=>Bi,ceil:()=>ll,clipByValue:()=>pl,clone:()=>Wi,complex:()=>Ws,concat:()=>jo,concat1d:()=>dl,concat2d:()=>hl,concat3d:()=>cl,concat4d:()=>fl,conv1d:()=>gl,conv2d:()=>ml,conv2dTranspose:()=>bl,conv3d:()=>xl,conv3dTranspose:()=>vl,cos:()=>kl,cosh:()=>Il,cosineWindow:()=>rh,cumprod:()=>Sl,cumsum:()=>Nl,denseBincount:()=>Tl,depthToSpace:()=>_l,depthwiseConv2d:()=>Cl,diag:()=>El,dilation2d:()=>$l,div:()=>co,divNoNan:()=>zl,dot:()=>Pl,dropout:()=>th,einsum:()=>Bl,elu:()=>Wl,enclosingPowerOfTwo:()=>nh,ensureShape:()=>Vl,equal:()=>Ml,erf:()=>Ul,euclideanNorm:()=>ou,exp:()=>lu,expandDims:()=>uu,expm1:()=>pu,eye:()=>hu,fft:()=>bd,fill:()=>ul,floor:()=>cu,floorDiv:()=>ho,fused:()=>sh,gather:()=>fu,gatherND:()=>eh,greater:()=>mu,greaterEqual:()=>gu,ifft:()=>xd,imag:()=>yu,image:()=>fc,inTopKAsync:()=>ah,irfft:()=>wd,isFinite:()=>bu,isInf:()=>xu,isNaN:()=>wu,leakyRelu:()=>vu,less:()=>ku,lessEqual:()=>Iu,linalg:()=>mc,linspace:()=>Su,localResponseNormalization:()=>Nu,log:()=>Tu,log1p:()=>_u,logSigmoid:()=>Lu,logSoftmax:()=>Pu,logSumExp:()=>Bu,logicalAnd:()=>Wu,logicalNot:()=>Vu,logicalOr:()=>Uu,logicalXor:()=>Gu,losses:()=>gc,lowerBound:()=>qu,matMul:()=>qo,max:()=>Jl,maxPool:()=>Ku,maxPool3d:()=>Xu,maxPoolWithArgmax:()=>Yu,maximum:()=>Zu,mean:()=>Ju,meshgrid:()=>tp,min:()=>Ql,minimum:()=>np,mirrorPad:()=>rp,mod:()=>ap,moments:()=>sp,movingAverage:()=>Zd,mul:()=>fo,multiRNNCell:()=>ip,multinomial:()=>op,neg:()=>Mu,norm:()=>iu,notEqual:()=>lp,oneHot:()=>up,ones:()=>ep,onesLike:()=>pp,op:()=>Bs,outerProduct:()=>dp,pad:()=>hp,pad1d:()=>cp,pad2d:()=>fp,pad3d:()=>mp,pad4d:()=>gp,pool:()=>bp,pow:()=>eu,prelu:()=>xp,print:()=>Vi,prod:()=>wp,raggedGather:()=>vp,raggedRange:()=>kp,raggedTensorToTensor:()=>Ip,rand:()=>Sp,randomGamma:()=>Gp,randomNormal:()=>Hp,randomStandardNormal:()=>jp,randomUniform:()=>qp,randomUniformInt:()=>Kp,range:()=>Xp,real:()=>Yp,reciprocal:()=>Zp,relu:()=>Jp,relu6:()=>Qp,reshape:()=>Uo,reverse:()=>ed,reverse1d:()=>td,reverse2d:()=>nd,reverse3d:()=>rd,reverse4d:()=>ad,rfft:()=>kd,round:()=>sd,rsqrt:()=>id,scalar:()=>tu,scatterND:()=>Jd,searchSorted:()=>ju,selu:()=>od,separableConv2d:()=>ld,setdiff1dAsync:()=>ud,sigmoid:()=>Ko,sign:()=>pd,signal:()=>cc,sin:()=>dd,sinh:()=>hd,slice:()=>Xo,slice1d:()=>cd,slice2d:()=>fd,slice3d:()=>md,slice4d:()=>gd,softmax:()=>yd,softplus:()=>Ou,spaceToBatchND:()=>yp,sparse:()=>yc,sparseToDense:()=>Qd,spectral:()=>hc,split:()=>vd,sqrt:()=>nu,square:()=>ru,squaredDifference:()=>Id,squeeze:()=>Sd,stack:()=>Nd,step:()=>Td,stridedSlice:()=>_d,string:()=>bc,sub:()=>zu,sum:()=>au,tan:()=>Cd,tanh:()=>Yo,tensor:()=>Us,tensor1d:()=>Ed,tensor2d:()=>$d,tensor3d:()=>Ad,tensor4d:()=>Fd,tensor5d:()=>Rd,tensor6d:()=>Dd,tensorScatterUpdate:()=>Pd,tile:()=>du,topk:()=>Bd,transpose:()=>Yd,truncatedNormal:()=>Wd,unique:()=>Vd,unsortedSegmentSum:()=>Ud,unstack:()=>Gd,upperBound:()=>Hd,variable:()=>jd,where:()=>Ol,whereAsync:()=>Kd,zeros:()=>Qu,zerosLike:()=>Ll});function v_(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){ka.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){let a=e[r],s=t[r];ka.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function k_(e){return!("number"==typeof e||e.some((e=>e<0)))}function I_(e,t,n){let r=S_(e,n),a=!k_(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=S_(e.shape,r)})),!k_(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function S_(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var N_=class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=tu(0),Qi(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),v_(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Qi(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Us([],[0].concat(this.elementShape));let n=this.readMany(e);return v_(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Nd(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Us([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let n=this.readMany(t);return v_(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),jo(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Gd(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];Zi((()=>{t=Uo(t,[1,n,a]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Uo(Xo(t,i,o),this.elementShape)}return s}));let i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}},T_=class{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);v_(t,e.shape,"TensorList shape mismatch: "),Qi(e)})),this.idTensor=tu(0),this.maxNumElements=r,Qi(this.idTensor)}copy(){return new T_([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);v_(e,this.elementShape,"TensorList shape mismatch: ");let r=I_(this.elementShape,this.tensors,e);return Zi((()=>{let e=this.tensors.map((e=>Uo(e,r)));return Nd(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=I_(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,v_(r.shape,e,"TensorList shape mismatch: "),Uo(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(v_(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Qi(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new T_([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);v_(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=I_(this.elementShape,this.tensors,t);return Uo(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);v_(this.elementShape,t.shape,"TensorList shape mismatch: "),Qi(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);v_(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=I_(this.elementShape,this.tensors,n);return 0===e.length?Us([],[0].concat(r)):Zi((()=>{let t=e.map((e=>Uo(this.tensors[e],r)));return Nd(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);v_(this.elementShape,t,"TensorList shape mismatch: ");let n=I_(this.elementShape,this.tensors,t);return 0===this.size()?Us([],[0].concat(n)):Zi((()=>{let e=this.tensors.map((e=>Uo(e,n)));return jo(e,0)}))}};var __=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=hT("thenBranch",e,t,n),a=hT("elseBranch",e,t,n),s=hT("cond",e,t,n),i=hT("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=hT("body",e,t,n),a=hT("cond",e,t,n),s=hT("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id)),l=await i[0].data();i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=s;for(;l[0];){let e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));let s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":return[xT(hT("pred",e,t,n))];case"Switch":{let r=hT("pred",e,t,n),a=hT("data",e,t,n);return a.kept||(a=xT(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find((e=>void 0!==cT(e,t,n)));if(r){return[xT(cT(r,t,n))]}return}case"Enter":{let r=hT("frameName",e,t,n),a=hT("tensor",e,t,n);return n.enterFrame(r),[xT(a)]}case"Exit":{let r=hT("tensor",e,t,n);return n.exitFrame(),[xT(r)]}case"NextIteration":{let r=hT("tensor",e,t,n);return n.nextIteration(),[xT(r)]}case"TensorArrayV3":{let r=hT("size",e,t,n),a=hT("dtype",e,t,n),s=hT("elementShape",e,t,n),i=hT("dynamicSize",e,t,n),o=hT("clearAfterRead",e,t,n),l=hT("identicalElementShapes",e,t,n),u=hT("name",e,t,n),p=new N_(u,a,r,s,l,i,o);return n.addTensorArray(p),[p.idTensor,tu(1)]}case"TensorArrayWriteV3":{let r=hT("tensorArrayId",e,t,n),a=hT("index",e,t,n),s=hT("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=hT("tensorArrayId",e,t,n),a=hT("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=hT("tensorArrayId",e,t,n),a=hT("indices",e,t,n),s=hT("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=hT("tensorArrayId",e,t,n),a=hT("indices",e,t,n),s=hT("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=hT("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=hT("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=hT("tensorArrayId",e,t,n),a=hT("tensor",e,t,n),s=hT("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=hT("tensorArrayId",e,t,n);return[tu(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{let r=hT("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=hT("tensorListId",e,t,n),a=hT("index",e,t,n),s=hT("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=hT("tensorListId",e,t,n),a=hT("index",e,t,n),s=hT("elementShape",e,t,n),i=hT("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=hT("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new T_([],n,e.dtype,r),i=Gd(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(hT("tensor",e,t,n),r,hT("elementShape",e,t,n),hT("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r,a=hT("elementShape",e,t,n),s=hT("elementDType",e,t,n);r="TensorListReserve"===e.op?"numElements":"maxNumElements";let i=hT(r,e,t,n),o=function(e,t,n,r){return new T_([],e,t,r)}(a,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{let r=hT("tensorListId",e,t,n),a=hT("indices",e,t,n),s=hT("elementShape",e,t,n),i=hT("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=hT("tensorListId",e,t,n),a=hT("elementShape",e,t,n),s=hT("elementDType",e,t,n),i=hT("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=function(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);v_(e.shape.slice(1),t,"TensorList shape mismatch: ");let a=Gd(e);return new T_(a,t,r)}(hT("tensor",e,t,n),hT("elementShape",e,t,n),hT("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=hT("tensorListId",e,t,n),a=n.getTensorList(r.id),s=hT("dtype",e,t,n),i=hT("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=hT("tensorListId",e,t,n),a=hT("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=hT("tensorListId",e,t,n),a=hT("elementShape",e,t,n),s=hT("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=hT("tensor",e,t,n),a=hT("elementShape",e,t,n),s=function(e,t,n){let r=0,a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);let s=S_(e.shape.slice(1),n),i=0===r?0:e.size/r,o=Zi((()=>{let n=[];e=Uo(e,[1,r,i]);for(let r=0;r<t.length;++r){let o=[0,0===r?0:a[r-1],0],l=[1,t[r],i];n[r]=Uo(Xo(e,o,l),s)}return e.dispose(),n})),l=new T_([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,hT("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{let r=hT("tensorListId",e,t,n);return[tu(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{let r=hT("tensorListId",e,t,n),a=hT("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function C_(e,t,n){let[r,a]=hT("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=hT("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let p=hT("strides",e,t,n),d=bT(e,t,n),h=hT("dataFormat",e,t,n).toUpperCase(),c=hT("dilations",e,t,n),[f,m]=hT("args",e,t,n);return i&&(m=f,f=void 0),{stride:p,pad:d,dataFormat:h,dilations:c,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:hT("leakyreluAlpha",e,t,n)}}function E_(e,t,n){return{boxes:hT("boxes",e,t,n),scores:hT("scores",e,t,n),maxOutputSize:hT("maxOutputSize",e,t,n),iouThreshold:hT("iouThreshold",e,t,n),scoreThreshold:hT("scoreThreshold",e,t,n),softNmsSigma:hT("softNmsSigma",e,t,n)}}var $_=class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=tu(0),this.tensorMap=new Map,Qi(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return tu(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Zi((()=>{let e=Gd(t),r=n.length,a=e.length;ka.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){let r=n[t],a=e[t];Qi(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return Zi((()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Nd(e)}))}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};function A_(e,t,n,r,a=Zi){let s=((e,t,n)=>{switch(e.category){case"arithmetic":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(hT("a",e,t,n),hT("b",e,t,n))];case"AddN":return[r.addN(hT("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(hT("a",e,t,n),hT("b",e,t,n))];case"Mul":return[r.mul(hT("a",e,t,n),hT("b",e,t,n))];case"RealDiv":case"Div":return[r.div(hT("a",e,t,n),hT("b",e,t,n))];case"DivNoNan":return[r.divNoNan(hT("a",e,t,n),hT("b",e,t,n))];case"FloorDiv":return[r.floorDiv(hT("a",e,t,n),hT("b",e,t,n))];case"Sub":return[r.sub(hT("a",e,t,n),hT("b",e,t,n))];case"Minimum":return[r.minimum(hT("a",e,t,n),hT("b",e,t,n))];case"Maximum":return[r.maximum(hT("a",e,t,n),hT("b",e,t,n))];case"Pow":return[r.pow(hT("a",e,t,n),hT("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(hT("a",e,t,n),hT("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(hT("x",e,t,n))];case"Acos":return[r.acos(hT("x",e,t,n))];case"Acosh":return[r.acosh(hT("x",e,t,n))];case"Asin":return[r.asin(hT("x",e,t,n))];case"Asinh":return[r.asinh(hT("x",e,t,n))];case"Atan":return[r.atan(hT("x",e,t,n))];case"Atan2":return[r.atan2(hT("x",e,t,n),hT("y",e,t,n))];case"Atanh":return[r.atanh(hT("x",e,t,n))];case"Ceil":return[r.ceil(hT("x",e,t,n))];case"Complex":return[r.complex(hT("real",e,t,n),hT("imag",e,t,n))];case"Cos":return[r.cos(hT("x",e,t,n))];case"Cosh":return[r.cosh(hT("x",e,t,n))];case"Elu":return[r.elu(hT("x",e,t,n))];case"Erf":return[r.erf(hT("x",e,t,n))];case"Exp":return[r.exp(hT("x",e,t,n))];case"Expm1":return[r.expm1(hT("x",e,t,n))];case"Floor":return[r.floor(hT("x",e,t,n))];case"Log":return[r.log(hT("x",e,t,n))];case"Log1p":return[r.log1p(hT("x",e,t,n))];case"Imag":return[r.imag(hT("x",e,t,n))];case"Neg":return[r.neg(hT("x",e,t,n))];case"Reciprocal":return[r.reciprocal(hT("x",e,t,n))];case"Real":return[r.real(hT("x",e,t,n))];case"Relu":return[r.relu(hT("x",e,t,n))];case"Round":return[r.round(hT("x",e,t,n))];case"Selu":return[r.selu(hT("x",e,t,n))];case"Sigmoid":return[r.sigmoid(hT("x",e,t,n))];case"Sin":return[r.sin(hT("x",e,t,n))];case"Sign":return[r.sign(hT("x",e,t,n))];case"Sinh":return[r.sinh(hT("x",e,t,n))];case"Softplus":return[r.softplus(hT("x",e,t,n))];case"Sqrt":return[r.sqrt(hT("x",e,t,n))];case"Square":return[r.square(hT("x",e,t,n))];case"Tanh":return[r.tanh(hT("x",e,t,n))];case"Tan":return[r.tan(hT("x",e,t,n))];case"ClipByValue":return[r.clipByValue(hT("x",e,t,n),hT("clipValueMin",e,t,n),hT("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(hT("x",e,t,n))];case"Rsqrt":return[r.rsqrt(cT(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(hT("x",e,t,n),hT("alpha",e,t,n))];case"Prelu":return[r.prelu(hT("x",e,t,n),hT("alpha",e,t,n))];case"IsNan":return[r.isNaN(cT(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(cT(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(cT(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return __(e,t,n);case"convolution":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"Conv1D":{let a=hT("stride",e,t,n),s=hT("pad",e,t,n),i=hT("dataFormat",e,t,n).toUpperCase(),o=hT("dilation",e,t,n);return[r.conv1d(hT("x",e,t,n),hT("filter",e,t,n),a,s,i,o)]}case"Conv2D":{let a=hT("strides",e,t,n),s=bT(e,t,n),i=hT("dataFormat",e,t,n).toUpperCase(),o=hT("dilations",e,t,n);return[r.conv2d(hT("x",e,t,n),hT("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:p,leakyreluAlpha:d}=C_(e,t,n);return[r.fused.conv2d({x:hT("x",e,t,n),filter:hT("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:p,preluActivationWeights:u,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:p,leakyreluAlpha:d}=C_(e,t,n);return[r.fused.depthwiseConv2d({x:hT("x",e,t,n),filter:hT("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:p,preluActivationWeights:u,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=hT("outputShape",e,t,n),s=hT("strides",e,t,n),i=bT(e,t,n);return[r.conv2dTranspose(hT("x",e,t,n),hT("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=hT("strides",e,t,n),s=bT(e,t,n),i=hT("dilations",e,t,n),o=hT("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(hT("input",e,t,n),hT("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=hT("strides",e,t,n),s=hT("pad",e,t,n),i=hT("dataFormat",e,t,n).toUpperCase(),o=hT("dilations",e,t,n);return[r.conv3d(hT("x",e,t,n),hT("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=hT("strides",e,t,n),s=hT("pad",e,t,n),i=hT("kernelSize",e,t,n);return[r.avgPool(hT("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=hT("strides",e,t,n),s=hT("pad",e,t,n),i=hT("kernelSize",e,t,n);return[r.maxPool(hT("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=hT("strides",e,t,n),s=hT("pad",e,t,n),i=hT("kernelSize",e,t,n),o=hT("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(hT("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[l,u]}case"AvgPool3D":{let a=hT("strides",e,t,n),s=hT("pad",e,t,n),i=hT("kernelSize",e,t,n);return[r.avgPool3d(hT("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=hT("strides",e,t,n),s=hT("pad",e,t,n),i=hT("kernelSize",e,t,n);return[r.maxPool3d(hT("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=hT("strides",e,t,n),s=hT("pad",e,t,n),i=hT("dilations",e,t,n),o=a[1],l=a[2],u=i[1],p=i[2];return[r.dilation2d(hT("x",e,t,n),hT("filter",e,t,n),[o,l],s,[u,p],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"Fill":{let a=hT("shape",e,t,n),s=hT("dtype",e,t,n),i=hT("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{let a=hT("start",e,t,n),s=hT("stop",e,t,n),i=hT("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{let a=hT("logits",e,t,n),s=hT("numSamples",e,t,n),i=hT("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{let a=hT("indices",e,t,n),s=hT("depth",e,t,n),i=hT("onValue",e,t,n),o=hT("offValue",e,t,n),l=hT("dtype",e,t,n);return[r.oneHot(a,s,i,o,l)]}case"Ones":return[r.ones(hT("shape",e,t,n),hT("dtype",e,t,n))];case"OnesLike":return[r.onesLike(hT("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(hT("shape",e,t,n),hT("dtype",e,t,n),hT("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(hT("shape",e,t,n),hT("minval",e,t,n),hT("maxval",e,t,n),hT("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(hT("shape",e,t,n),hT("minval",e,t,n),hT("maxval",e,t,n),hT("seed",e,t,n))];case"Range":{let a=hT("start",e,t,n),s=hT("stop",e,t,n),i=hT("step",e,t,n);return[r.range(a,s,i,hT("dtype",e,t,n))]}case"TruncatedNormal":{let a=hT("shape",e,t,n),s=hT("mean",e,t,n),i=hT("stdDev",e,t,n),o=hT("seed",e,t,n);return[r.truncatedNormal(a,s,i,hT("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(hT("shape",e,t,n),hT("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(hT("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,a=w_)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=E_(e,t,n),p=await a.image.nonMaxSuppressionWithScoreAsync(r,s,i,o,l,u);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=E_(e,t,n),u=hT("padToMaxOutputSize",e,t,n),p=await a.image.nonMaxSuppressionPaddedAsync(r,s,i,o,l,u);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=E_(e,t,n);return[await a.image.nonMaxSuppressionAsync(r,s,i,o,l)]}case"Where":{let r=a.cast(hT("condition",e,t,n),"bool"),s=[await a.whereAsync(r)];return r.dispose(),s}case"ListDiff":return a.setdiff1dAsync(hT("x",e,t,n),hT("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"LowerBound":{let a=hT("sortedSequence",e,t,n),s=hT("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{let a=hT("x",e,t,n),s=hT("k",e,t,n),i=hT("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=hT("sortedSequence",e,t,n),s=hT("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{let a=hT("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=hT("x",e,t,n),s=hT("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"ResizeBilinear":{let a=hT("images",e,t,n),s=hT("size",e,t,n),i=hT("alignCorners",e,t,n),o=hT("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=hT("images",e,t,n),s=hT("size",e,t,n),i=hT("alignCorners",e,t,n),o=hT("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=hT("image",e,t,n),s=hT("boxes",e,t,n),i=hT("boxInd",e,t,n),o=hT("cropSize",e,t,n),l=hT("method",e,t,n),u=hT("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let a=hT("images",e,t,n),s=hT("transforms",e,t,n),i=hT("outputShape",e,t,n),o=hT("fillValue",e,t,n),l=hT("interpolation",e,t,n),u=hT("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=hT("default",e,t,n);return[cT(e.name,t,n)||a];case"Placeholder":return[cT(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[xT(hT("x",e,t,n))];case"IdentityN":return hT("x",e,t,n).map((e=>xT(e)));case"Shape":return[r.tensor1d(hT("x",e,t,n).shape,"int32")];case"ShapeN":return hT("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(hT("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(hT("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let s=hT("x",e,t,n),i=hT("data",e,t,n),o=hT("message",e,t,n),l=hT("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"Equal":return[r.equal(hT("a",e,t,n),hT("b",e,t,n))];case"NotEqual":return[r.notEqual(hT("a",e,t,n),hT("b",e,t,n))];case"Greater":return[r.greater(hT("a",e,t,n),hT("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(hT("a",e,t,n),hT("b",e,t,n))];case"Less":return[r.less(hT("a",e,t,n),hT("b",e,t,n))];case"LessEqual":return[r.lessEqual(hT("a",e,t,n),hT("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(hT("a",e,t,n),hT("b",e,t,n))];case"LogicalNot":return[r.logicalNot(hT("a",e,t,n))];case"LogicalOr":return[r.logicalOr(hT("a",e,t,n),hT("b",e,t,n))];case"Select":case"SelectV2":return[r.where(hT("condition",e,t,n),hT("a",e,t,n),hT("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(hT("a",e,t,n),hT("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(hT("a",e,t,n),hT("b",e,t,n),hT("transposeA",e,t,n),hT("transposeB",e,t,n))];case"Einsum":return[r.einsum(hT("equation",e,t,n),...hT("tensors",e,t,n))];case"Transpose":return[r.transpose(hT("x",e,t,n),hT("perm",e,t,n))];case"_FusedMatMul":let[a,s]=hT("fusedOps",e,t,n),i="biasadd"===a,o="prelu"===s,l=hT("numArgs",e,t,n),u=hT("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[p,d]=hT("args",e,t,n);return[r.fused.matMul({a:hT("a",e,t,n),b:hT("b",e,t,n),transposeA:hT("transposeA",e,t,n),transposeB:hT("transposeB",e,t,n),bias:p,activation:s,preluActivationWeights:d,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(hT("a",e,t,n),hT("numLower",e,t,n),hT("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(hT("x",e,t,n),hT("axis",e,t,n),hT("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(hT("x",e,t,n),hT("mean",e,t,n),hT("variance",e,t,n),hT("offset",e,t,n),hT("scale",e,t,n),hT("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(hT("x",e,t,n),hT("radius",e,t,n),hT("bias",e,t,n),hT("alpha",e,t,n),hT("beta",e,t,n))];case"Softmax":return[r.softmax(hT("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(hT("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"ragged":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(hT("paramsNestedSplits",e,t,n),hT("paramsDenseValues",e,t,n),hT("indices",e,t,n),hT("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(hT("starts",e,t,n),hT("limits",e,t,n),hT("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(hT("shape",e,t,n),hT("values",e,t,n),hT("defaultValue",e,t,n),hT("rowPartitionTensors",e,t,n),hT("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"Max":{let a=hT("axis",e,t,n),s=hT("keepDims",e,t,n);return[r.max(hT("x",e,t,n),a,s)]}case"Mean":{let a=hT("axis",e,t,n),s=hT("keepDims",e,t,n);return[r.mean(hT("x",e,t,n),a,s)]}case"Min":{let a=hT("axis",e,t,n),s=hT("keepDims",e,t,n);return[r.min(hT("x",e,t,n),a,s)]}case"Sum":{let a=hT("axis",e,t,n),s=hT("keepDims",e,t,n);return[r.sum(hT("x",e,t,n),a,s)]}case"All":{let a=hT("axis",e,t,n),s=hT("keepDims",e,t,n);return[r.all(hT("x",e,t,n),a,s)]}case"Any":{let a=hT("axis",e,t,n),s=hT("keepDims",e,t,n);return[r.any(hT("x",e,t,n),a,s)]}case"ArgMax":{let a=hT("axis",e,t,n);return[r.argMax(hT("x",e,t,n),a)]}case"ArgMin":{let a=hT("axis",e,t,n);return[r.argMin(hT("x",e,t,n),a)]}case"Prod":{let a=hT("axis",e,t,n),s=hT("keepDims",e,t,n);return[r.prod(hT("x",e,t,n),a,s)]}case"Cumprod":{let a=hT("axis",e,t,n),s=hT("exclusive",e,t,n),i=hT("reverse",e,t,n);return[r.cumprod(hT("x",e,t,n),a,s,i)]}case"Cumsum":{let a=hT("axis",e,t,n),s=hT("exclusive",e,t,n),i=hT("reverse",e,t,n);return[r.cumsum(hT("x",e,t,n),a,s,i)]}case"Bincount":let a=hT("x",e,t,n),s=hT("weights",e,t,n),i=hT("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{let a=hT("x",e,t,n),s=hT("weights",e,t,n),i=hT("size",e,t,n),o=hT("binaryOutput",e,t,n);return[r.denseBincount(a,s,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=hT("n",e,t,n),s=hT("axis",e,t,n),i=hT("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{let a=hT("x",e,t,n),s=hT("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{let a=hT("axis",e,t,n),s=hT("batchDims",e,t,n),i=hT("x",e,t,n),o=hT("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{let a=hT("dims",e,t,n),s=[];for(let e=0;e<a.length;e++)a[e]&&s.push(e);let i=hT("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{let a=hT("axis",e,t,n),s=hT("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{let a=hT("begin",e,t,n),s=hT("size",e,t,n);return[r.slice(hT("x",e,t,n),a,s)]}case"StridedSlice":{let a=hT("begin",e,t,n),s=hT("end",e,t,n),i=hT("strides",e,t,n),o=hT("beginMask",e,t,n),l=hT("endMask",e,t,n),u=hT("ellipsisMask",e,t,n),p=hT("newAxisMask",e,t,n),d=hT("shrinkAxisMask",e,t,n),h=hT("x",e,t,n);return[r.stridedSlice(h,a,s,i,o,l,u,p,d)]}case"Pack":return Zi((()=>{let a=hT("axis",e,t,n),s=hT("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,l=s.map((e=>{let t=ka.arraysEqual(e.shape,i);if(!t&&!ka.arraysEqual(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)}));return[r.stack(l,a)]}));case"Unpack":{let a=hT("axis",e,t,n),s=hT("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{let a=hT("reps",e,t,n);return[r.tile(hT("x",e,t,n),a)]}case"Split":case"SplitV":{let a=hT("axis",e,t,n),s=hT("numOrSizeSplits",e,t,n),i=hT("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{let a=hT("indices",e,t,n),s=hT("values",e,t,n),i=hT("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{let a=hT("x",e,t,n),s=hT("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{let a=hT("sparseIndices",e,t,n),s=hT("outputShape",e,t,n),i=hT("sparseValues",e,t,n),o=hT("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{let a=hT("indices",e,t,n),s=hT("values",e,t,n),i=hT("tensor",e,t,n);return[r.tensorScatterUpdate(i,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(hT("indices",e,t,n),hT("values",e,t,n),hT("denseShape",e,t,n),hT("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(hT("inputIndices",e,t,n),hT("inputShape",e,t,n),hT("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(hT("data",e,t,n),hT("indices",e,t,n),hT("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(hT("data",e,t,n),hT("indices",e,t,n),hT("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"FFT":return[r.fft(hT("x",e,t,n))];case"IFFT":return[r.ifft(hT("x",e,t,n))];case"RFFT":return[r.rfft(hT("x",e,t,n))];case"IRFFT":return[r.irfft(hT("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(hT("input",e,t,n),hT("pattern",e,t,n),hT("rewrite",e,t,n),hT("replaceGlobal",e,t,n))];case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(hT("data",e,t,n),hT("dataSplits",e,t,n),hT("separator",e,t,n),hT("nGramWidths",e,t,n),hT("leftPad",e,t,n),hT("rightPad",e,t,n),hT("padWidth",e,t,n),hT("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=r.string.stringSplit(hT("input",e,t,n),hT("delimiter",e,t,n),hT("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(hT("input",e,t,n),hT("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return a((()=>((e,t,n,r=w_)=>{switch(e.op){case"Cast":return[r.cast(hT("x",e,t,n),hT("dtype",e,t,n))];case"ExpandDims":{let a=hT("axis",e,t,n);return[r.expandDims(hT("x",e,t,n),a)]}case"Squeeze":{let a=hT("axis",e,t,n);return[r.squeeze(hT("x",e,t,n),a)]}case"Reshape":return[r.reshape(hT("x",e,t,n),hT("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(hT("x",e,t,n),hT("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(hT("x",e,t,n),hT("padding",e,t,n),hT("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(hT("x",e,t,n),hT("padding",e,t,n),hT("constantValue",e,t,n))];case"SpaceToBatchND":{let a=hT("blockShape",e,t,n),s=hT("paddings",e,t,n);return[r.spaceToBatchND(hT("x",e,t,n),a,s)]}case"BatchToSpaceND":{let a=hT("blockShape",e,t,n),s=hT("crops",e,t,n);return[r.batchToSpaceND(hT("x",e,t,n),a,s)]}case"DepthToSpace":{let a=hT("blockSize",e,t,n),s=hT("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(hT("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(hT("x",e,t,n),hT("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(hT("s0",e,t,n),hT("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=r.getHashTableHandleByName(e.name);if(null!=a)return[a];{let a=hT("keyDType",e,t,n),s=hT("valueDType",e,t,n),i=new $_(a,s);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=hT("tableHandle",e,t,n,r),s=hT("keys",e,t,n),i=hT("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=hT("tableHandle",e,t,n,r),s=hT("keys",e,t,n),i=hT("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=hT("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":let s=pT(e.op);if(s&&s.customExecutor)return s.customExecutor(new x_(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return ka.isPromise(s)?s.then((e=>[].concat(e))):[].concat(s)}var F_=class{constructor(e={},t={},n={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function R_(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=new Set(Object.keys(e).map((e=>yT(e)[0])));r=r||[];let p=new Set(r.map((e=>yT(e.name)[0]))),d=[...t];for(;d.length>0;){let e=d.pop();if((P_(e)||B_(e)||W_(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&!u.has(e.name)&&!p.has(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),d.push(e))}))}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}function D_(e,t){let{usedNodes:n,inputs:r}=t,a=Object.keys(r).map((e=>yT(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],i=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}let l=o([...a,...e.weights,...s]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),p=new Map(u.map((e=>[e.name,e]))),d={};for(let e of u){d[e.name]=d[e.name]||0;for(let t of e.children)i(t)||(d[t.name]=Number.POSITIVE_INFINITY),d[t.name]=(d[t.name]||0)+1}let h=Object.entries(d).filter((([,e])=>0===e)).map((([e])=>e)),c=[...h];for(;h.length>0;){let e=h.pop(),t=p.get(e);for(let e of t.children.filter(i))0==--d[e.name]&&(c.push(e.name),h.push(e.name))}let f=function(e,t){let n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),a=new Set(r);for(;r.length>0;){let e=r.pop(),t=n.get(e);for(let e of t.children)!n.has(e.name)||a.has(e.name)||(a.add(e.name),r.push(e.name))}return e.filter((e=>a.has(e.name)))}(c.map((e=>p.get(e))),l);return function(e,t){let n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),a=e=>r.has("string"==typeof e?e:e.name),s=new Set(e.map((e=>e.name))),i=e=>s.has("string"==typeof e?e:e.name);for(let t of e){for(let e of t.children.filter(i)){if(!n.has(e.name))throw new M_(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new M_(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!a(t))for(let e of t.inputs){if(!n.has(e.name))throw new M_(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new M_(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}var M_=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}};var O_=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),L_=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),z_=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function P_(e){return O_.has(e.op)}function B_(e){return L_.has(e.op)}function W_(e){return z_.has(e.op)}var V_=class{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new V_(e.functions[t],this)}))}getCompilationKey(e,t){let n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){let n=R_(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}let i=D_(this.graph,n),o=function(e){let t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>P_(e)?n:t)),a=e=>{let n=r[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(a).reduce(((e,t)=>Math.max(e,t)),r[t]))),i=new Map;for(let t=0;t<e.length;++t){let r=s[t];if(r===n)continue;let a=e[t],o=e[r];i.has(o.name)||i.set(o.name,[]),i.get(o.name).push(a)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return Qi(t),t}cloneTensorList(e){return e?e.map((e=>this.cloneAndKeepTensor(e))):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map((e=>this.graph.nodes[yT(e)[0]])),a=t.map((e=>yT(e)[0])),s=new Set(a),i=a.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);let o=this.getCompilationKey(r,i),l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=Pe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let u={},p={};return Zi((()=>{let n=new F_(this.weightMap,u,p,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{let[a,s]=yT(t,n),i=[];i[s]=e[t],r[a]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[a]=this.cloneTensorList(i))}));let a=this.getFrozenTensorIds(r),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(let e of i){if(r[e.name])continue;let t=A_(e,r,n,this._resourceManager);if(ka.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,a,s,o.get(e.name))}return null==this.parent&&n.dispose(a),t.map((e=>cT(e,r,n)))}))}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){if(!P_(t)&&!s.has(e)){for(let r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(let e of t.inputs){if(P_(e))continue;let t=fT(e.name,n,r);if(null!=t)for(let e of t){if(!e||e.kept||a.has(e.id))continue;let t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,a,s){function i(e){return P_(e)||a.has(e.name)}if(!P_(e)&&null!=s)for(let e of s){if(i(e))continue;let a=fT(e.name,t,n);for(let e of a)!e||e.kept||r.has(e.id)||e.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},a={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Pe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let s=new F_(this.weightMap,r,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>cT(e,i,s))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),p=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{e&&!e.isDisposed&&!p.has(e.id)&&e.dispose()}))})),null==this.parent&&s.dispose(p),o}async executeFunctionAsync(e,t,n){let r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map((e=>this.graph.nodes[yT(e)[0]])),i=n.map((e=>yT(e)[0])),o=new Set(i),l=i.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);let{usedNodes:u,missingInputs:p,dynamicNode:d,syncInputs:h}=R_(e,l,this.weightMap,this._initNodes),c=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,r]=yT(t),a=[];a[r]=e[t],f[n]=a}));let m={},g=this.getFrozenTensorIds(f),y={};for(;c.length>0;){let e=this.processStack(s,c,t,f,y,g,o,m,u);await Promise.all(e)}null==d&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=l.filter((e=>!P_(e)&&!cT(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=d&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${a}]. Consider providing the following inputs: [${p}]. ${e}`)}return f}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let p="";if("Enter"===e.node.op&&hT("isConstant",e.node,r,n)&&([p]=mT(e.node.name,n)),null==r[e.node.name]){let d=A_(e.node,r,n,this._resourceManager);p||([p]=mT(e.node.name,n));let h=n.currentContext;ka.isPromise(d)?u.push(d.then((u=>(r[p]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(u)),n.currentContext=h,this.checkTensorForDisposal(p,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[p]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(d)),this.checkTensorForDisposal(p,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{let[i]=mT(e.name,n);a[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!cT(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!cT(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{let n=e[t],[r]=yT(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));ka.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&ka.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;let r={};for(let a in e){let s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[a];null!=s?r[s.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){let t=Object.keys(e).filter((e=>{let[t]=yT(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;let r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{let[t]=yT(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},U_=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},G_="?tfjs-format=file",H_="model.json",j_=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=Fc){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new U_}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return ka.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new V_(a_.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=a_.Instance.transformGraph(e.modelInitializer);this.initializer=new V_(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t={};return(e instanceof rs?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof rs||Array.isArray(e))){let n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(let t in n){let r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var a,s,i;let o=null===(i=null===(s=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===s?void 0:s[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){let a=t[n[r]];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ji(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function q_(e,t={},n=Fc){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}${H_}${G_}`}(e));let r=new j_(e,t,n);return await r.load(),r}function K_(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!(r&&r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");let a=Fc.getWeightSpecs(n.weightsManifest),s=Fc.getModelArtifactsForJSONSync(n,a,r);t=Fc.fromMemorySync(s)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=Fc.fromMemorySync(e)}let n=new j_(t);return n.load(),n}var X_="4.7.0",Y_={};g(Y_,{CSVDataset:()=>VC,Dataset:()=>EC,FileDataSource:()=>tE,TextLineDataset:()=>MC,URLDataSource:()=>nE,array:()=>AC,csv:()=>rE,func:()=>aE,generator:()=>sE,microphone:()=>oE,version_data:()=>lE,webcam:()=>iE,zip:()=>FC});var Z_=y(E()),J_=y(E());function Q_(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(aC(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let s in e){let i=Q_(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function eC(e,t=nC){return tC(e,t)}function tC(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(aC(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let s in r){let r=tC(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function nC(e){return null===e?null:aC(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function rC(e,t){let n=new Map;Q_(e,t,n);for(let e of Array.from(n.keys())){let t=n.get(e);if(ka.isPromise(t)){let r=await t;n.set(e,r)}}return Q_(e,t,n)}function aC(e){let t=!1;if(Pe().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=$();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof rs)&&!(e instanceof Promise)&&!t)}function sC(e){return function(e,t){return Q_(e,t)}(e,iC)}function iC(e){return e instanceof rs?{value:e.clone(),recurse:!1}:aC(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var oC=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},lC=class extends oC{constructor(){super(lC.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function uC(e){return new cC(e)}function pC(e){return new fC(e)}lC.INITIAL_CAPACITY=32;var dC,hC=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new vC(this,e)}filter(e){return new xC(this,e)}map(e){return new wC(this,e)}mapAsync(e){return new kC(this,e)}serialMapAsync(e){return new kC(this,e).serial()}flatmap(e){return new SC(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new bC(this,e,t)}columnMajorBatch(e,t=!0,n=nC){return this.rowMajorBatch(e,t).map((e=>eC(e,n)))}concatenate(e,t){return new NC(uC([this,e]),t)}take(e){return e<0||null==e?this:new yC(this,e)}skip(e){return e<0||null==e?this:new gC(this,e)}prefetch(e){return new _C(this,e)}shuffle(e,t){return new CC(this,e,t)}serial(){return new mC(this)}},cC=class extends hC{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:sC(e),done:!1}}},fC=class extends hC{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},mC=class extends hC{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},gC=class extends hC{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Ji(e.value)}return this.upstream.next()}},yC=class extends hC{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},bC=class extends hC{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},xC=class extends hC{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ji(e.value)}}},wC=class extends hC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=ds.getTensorsInContainer(e.value),n=this.transform(e.value),r=ds.getTensorsInContainer(n);for(let e of t)ds.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},vC=class extends hC{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},kC=class extends hC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=ds.getTensorsInContainer(e.value),n=await this.transform(e.value),r=ds.getTensorsInContainer(n);for(let e of t)ds.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},IC=class extends hC{constructor(){super(),this.outputQueue=new lC,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},SC=class extends IC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=ds.getTensorsInContainer(e.value),n=this.transform(e.value),r=ds.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let e of t)ds.isTensorInList(e,r)||e.dispose();return!0}},NC=class extends hC{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(dC||(dC={}));var TC=class extends hC{constructor(e,t=dC.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;let r=await rC(this.iterators,(function(e){return e instanceof hC?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case dC.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case dC.SHORTEST:return{value:null,done:!0};case dC.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},_C=class extends hC{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new oC(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},CC=class extends _C{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=J_.alea(n||ka.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},EC=class{constructor(){this.size=null}batch(e,t=!0){let n,r=this;return ka.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),n=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),$C((async()=>(await r.iterator()).columnMajorBatch(e,t,RC)),n)}concatenate(e){let t,n=this;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,$C((async()=>(await n.iterator()).concatenate(await e.iterator())),t)}filter(e){let t,n=this;return t=this.size===1/0?1/0:null,$C((async()=>(await n.iterator()).filter((t=>Zi((()=>e(t)))))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return $C((async()=>(await t.iterator()).map((t=>Zi((()=>e(t)))))),this.size)}mapAsync(e){let t=this;return $C((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return $C((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){let t,n=this;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,$C((async()=>function(e,t){return new NC(e,t)}(pC((async()=>({value:await n.iterator(),done:!1}))).take(e))),t)}skip(e){let t,n=this;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,$C((async()=>(await n.iterator()).skip(e)),t)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=Z_.alea(t||ka.now().toString());return $C((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){let t,n=this;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,$C((async()=>(await n.iterator()).take(e)),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function $C(e,t=null){return new class extends EC{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function AC(e){return $C((async()=>uC(e)),e.length)}function FC(e){if(!aC(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return $C((async()=>function(e,t=dC.FAIL){return new TC(e,t)}(await rC(e,(e=>{if(e instanceof EC)return{value:e.iterator(),recurse:!1};if(aC(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),dC.SHORTEST)),t)}function RC(e){if(null===e)return null;return function(e){return null==e||function(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(e)||Array.isArray(e)||"object"==typeof e&&e instanceof rs||ka.isTypedArray(e)}(e[0])?{value:DC(e),recurse:!1}:{value:null,recurse:!0}}function DC(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof rs?Nd(e):Us(e)}EC.MAX_BUFFER_SIZE=1e4;var MC=class extends EC{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},OC='"',LC=Symbol("out"),zC=Symbol("field"),PC=Symbol("quote"),BC=Symbol("quoteafterquote"),WC=Symbol("quoteinquote"),VC=class extends EC{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&ka.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(ka.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(let e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new MC(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(ka.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[a],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=LC;for(let t=0;t<a;t++)switch(s){case LC:switch(e.charAt(t)){case OC:r=t+1,s=PC;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=LC;break;default:s=zC,r=t}break;case zC:if(e.charAt(t)===this.delimiter)n.push(e.substring(r,t)),s=LC,r=t+1;break;case PC:if(e.charAt(t)===OC)s=BC;break;case BC:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=LC,r=t+1;break;case OC:s=PC;break;default:s=WC}break;case WC:if(e.charAt(t)===OC)s=PC}if(s===BC?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},UC=class extends hC{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Pe().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new UC(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise((r=>{let a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(ka.sizeFromShape(t));return n.set(e,n.length-e.length),Us(n,t)}},GC=class extends hC{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Ed([0],"int32"),this.webcamConfig.centerCrop){let e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=$d([r,n,s,a],[1,4])}else this.cropBox=$d([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Pe().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new GC(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&ka.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=tf.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Zi((()=>{let t,n=uu(Bi(e,"float32"),0);t=fc.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=t.shape;return Uo(t,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},HC=class{},jC=class extends hC{split(e){return new qC(this,e)}},qC=class extends jC{constructor(e,t){super(),this.upstream=e,this.impl=new KC(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},KC=class extends IC{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},XC=class extends hC{decodeUTF8(){return new YC(this)}},YC=class extends jC{constructor(e){super(),this.upstream=e,this.impl=new ZC(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},ZC=class extends IC{constructor(e){if(super(),this.upstream=e,Pe().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=$();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t,n=await this.upstream.next();return!n.done&&(e=n.value,t=Pe().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(t),!0)}},JC=class extends XC{constructor(e,t={}){super(),this.file=e,this.options=t,ka.assert(e instanceof Uint8Array||!!Pe().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise(((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n})),done:!1}}};var QC=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function eE(e){return"string"==typeof e&&"file://"===e.slice(0,7)}var tE=class extends HC{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(eE(this.input)&&Pe().get("IS_NODE")){let e=A();this.input=e.readFileSync(this.input.slice(7))}return new JC(this.input,this.options)}},nE=class extends HC{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return eE(this.url)?new tE(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,a;"string"==typeof e?r=e:(r=e.url,a=QC(e));let s=await(n||ka.fetch)(r,a);if(s.ok){let e=new Uint8Array(await s.arrayBuffer());return new JC(e,t)}throw new Error(s.statusText)}(this.url,this.fileOptions)}};function rE(e,t={}){return new VC(new nE(e),t)}function aE(e){let t=pC(e);return $C((async()=>t))}function sE(e){return $C((async()=>{let t=await e();return pC((()=>t.next()))}))}async function iE(e,t){return GC.create(e,t)}async function oE(e){return UC.create(e)}var lE="4.7.0";function uE(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ka.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var pE=jm.whereImpl,dE=class extends B{nextDataId(){return dE.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new P(this,Ki())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Pe().get("IS_NODE")&&Bf.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ka.isString(n[0])){let a=n.map((e=>ka.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return Bf.mergeRealAndImagArrays(e,t)}return ka.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>ka.decodeString(e)));return Pi(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Pi(e.shape,e.dtype,t)}makeOutput(e,t,n){return Ki().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=ka.now();return e(),{kernelMs:ka.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){uE([e],"where");let t=this.readSync(e.dataId);return pE(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};dE.nextDataId=0;var hE={};function cE(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}g(hE,{addImpl:()=>CE,bincountImpl:()=>FE,bincountReduceImpl:()=>RE,bitwiseAndImpl:()=>DE,castImpl:()=>IE,ceilImpl:()=>BE,concatImpl:()=>UE,equalImpl:()=>GE,expImpl:()=>qE,expm1Impl:()=>YE,floorDivImpl:()=>n$,floorImpl:()=>QE,gatherNdImpl:()=>s$,gatherV2Impl:()=>i$,greaterEqualImpl:()=>p$,greaterImpl:()=>o$,lessEqualImpl:()=>g$,lessImpl:()=>c$,linSpaceImpl:()=>x$,logImpl:()=>w$,maxImpl:()=>I$,maximumImpl:()=>S$,minimumImpl:()=>_$,multiplyImpl:()=>$$,negImpl:()=>D$,notEqualImpl:()=>O$,prodImpl:()=>V$,raggedGatherImpl:()=>q$,raggedRangeImpl:()=>X$,raggedTensorToTensorImpl:()=>eA,rangeImpl:()=>tA,rsqrtImpl:()=>nA,scatterImpl:()=>sA,sigmoidImpl:()=>iA,simpleAbsImpl:()=>cE,sliceImpl:()=>uA,sparseFillEmptyRowsImpl:()=>hA,sparseReshapeImpl:()=>cA,sparseSegmentReductionImpl:()=>fA,sqrtImpl:()=>mA,squaredDifferenceImpl:()=>bA,staticRegexReplaceImpl:()=>vA,stridedSliceImpl:()=>SA,stringNGramsImpl:()=>TA,stringSplitImpl:()=>CA,stringToHashBucketFastImpl:()=>EA,subImpl:()=>$A,tileImpl:()=>DA,topKImpl:()=>LA,transposeImpl:()=>P$,uniqueImpl:()=>zA});var fE={kernelName:Ge,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;uE(t,"abs");let r=new Float32Array(ka.sizeFromShape(t.shape));return r=cE(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function mE(e){return(t,n,r,a,s)=>{let i=Bf.assertAndGetBroadcastShape(t,n),o=i.length,l=ka.computeStrides(i),u=ka.sizeFromShape(i),p=ka.getTypedArrayFromDType(s,u),d=t.length,h=n.length,c=ka.computeStrides(t),f=ka.computeStrides(n),m=Bf.getBroadcastDims(t,i),g=Bf.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<p.length;++t)p[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<p.length;++t){let n=ka.indexToLoc(t,o,l),s=n.slice(-d);m.forEach((e=>s[e]=0));let i=ka.locToIndex(s,d,c),u=n.slice(-h);g.forEach((e=>u[e]=0));let y=ka.locToIndex(u,h,f);p[t]=e(r[i],a[y])}return[p,i]}}function gE(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var yE={kernelName:yt,backendName:"cpu",kernelFunc:gE};function bE(e,t,n="float32"){if("complex64"===n){return gE({inputs:{real:bE(e,t,"float32"),imag:bE(e,t,"float32")},backend:e})}let r=ka.makeZerosTypedArray(ka.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function xE(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var wE={kernelName:on,backendName:"cpu",kernelFunc:xE};function vE(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var kE={kernelName:sr,backendName:"cpu",kernelFunc:vE};function IE(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){let r=ka.toTypedArray([0],n),[a,s]=mE(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[s,"bool",a]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function SE(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return xE({inputs:{x:a},backend:n});let e=bE(n,a.shape,a.dtype),t=SE({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=gE({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=vE({inputs:{input:a},backend:n}),t=SE({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!ka.hasEncodingLoss(a.dtype,s)){let e=xE({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}let i=n.data.get(a.dataId).values,[o,l,u]=IE(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,u)}var NE={kernelName:ft,backendName:"cpu",kernelFunc:SE};function TE(e,t,n,r){return null==n?({inputs:n,backend:a})=>{let{a:s,b:i}=n,o=a;uE([s,i],e);let l=o.data.get(s.dataId).values,u=o.data.get(i.dataId).values,p="string"===s.dtype?Bf.fromUint8ToStringArray(l):l,d="string"===s.dtype?Bf.fromUint8ToStringArray(u):u,h=r||s.dtype,[c,f]=t(s.shape,i.shape,p,d,h);return o.makeTensorInfo(f,h,c)}:({inputs:e,backend:a})=>{let{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){let e=SE({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(a.dataId).values,p=SE({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),d=o.data.get(p.dataId),h=d.complexTensorInfos.real,c=d.complexTensorInfos.imag,f=o.data.get(h.dataId).values,m=o.data.get(c.dataId).values,[g,y,b]=n(s.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=gE({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{let e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[l,u]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(u,a,l)}}}function _E(e){return(t,n,r,a,s,i)=>{let o=Bf.assertAndGetBroadcastShape(t,n),l=ka.sizeFromShape(o),u=o.length,p=ka.computeStrides(o),d=ka.getTypedArrayFromDType("float32",l),h=ka.getTypedArrayFromDType("float32",l),c=Bf.getBroadcastDims(t,o),f=Bf.getBroadcastDims(n,o),m=Bf.mergeRealAndImagArrays(r,a),g=Bf.mergeRealAndImagArrays(s,i),y=t.length,b=ka.computeStrides(t),x=n.length,w=ka.computeStrides(n);if(c.length+f.length===0)for(let t=0;t<d.length;t++){let n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);d[t]=a.real,h[t]=a.imag}else for(let t=0;t<d.length;t++){let n=ka.indexToLoc(t,u,p),r=n.slice(-y);c.forEach((e=>r[e]=0));let a=ka.locToIndex(r,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));let i=ka.locToIndex(s,x,w),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);d[t]=o.real,h[t]=o.imag}return[d,h,o]}}var CE=mE(((e,t)=>e+t)),EE=_E(((e,t,n,r)=>({real:e+n,imag:t+r}))),$E=TE(qe,CE,EE),AE={kernelName:qe,backendName:"cpu",kernelFunc:$E};function FE(e,t,n,r,a){let s=ka.sizeFromShape(r),i=ka.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){let r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function RE(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=Pi([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}var DE=mE(((e,t)=>e&t)),ME=TE(dt,DE),OE={kernelName:dt,backendName:"cpu",kernelFunc:ME};function LE(e){return(t,n,r)=>{let a=ka.getArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function zE(e,t,n){return PE(e,LE(t),n)}function PE(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;uE(i,e);let o,l=s,u=l.data.get(i.dataId).values;if("string"===i.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");o=Bf.fromUint8ToStringArray(u)}else o=u;let p=n||i.dtype,d=t(o,p,a);return l.makeTensorInfo(i.shape,p,d)}}var BE=LE((e=>Math.ceil(e))),WE=PE(mt,BE),VE={kernelName:mt,backendName:"cpu",kernelFunc:WE};function UE(e,t,n,r){let a=ka.getArrayFromDType(n,ka.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{let n=ka.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{let s="string"===n?Bf.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var GE=mE(((e,t)=>e===t?1:0)),HE=TE(jt,GE,null,"bool"),jE={kernelName:jt,backendName:"cpu",kernelFunc:HE},qE=LE((e=>Math.exp(e))),KE=PE(qt,qE,"float32"),XE={kernelName:qt,backendName:"cpu",kernelFunc:KE},YE=LE((e=>Math.expm1(e))),ZE=PE(Xt,YE),JE={kernelName:Xt,backendName:"cpu",kernelFunc:ZE},QE=LE((e=>Math.floor(e))),e$=PE(Qt,QE),t$={kernelName:Qt,backendName:"cpu",kernelFunc:e$},n$=mE(((e,t)=>Math.floor(e/t))),r$=TE(en,n$,null,"int32"),a$={kernelName:en,backendName:"cpu",kernelFunc:r$};function s$(e,t,n,r,a,s,i,o,l){let u=Pi([r,s],n);for(let n=0;n<r;n++){let r=[],p=0;for(let t=0;t<a;t++){let s=e[n*a+t];p+=s*i[t],r.push(s)}if(p<0||p>=l/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)u.values[n*s+e]=t.get(...t.indexToLoc(p*s+e))}return u}function i$(e,t,n){let r=Pi(n,e.dtype);for(let n=0;n<r.size;++n){let a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];let l=e.locToIndex(a);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}var o$=mE(((e,t)=>e>t?1:0)),l$=TE(an,o$,null,"bool"),u$={kernelName:an,backendName:"cpu",kernelFunc:l$},p$=mE(((e,t)=>e>=t?1:0)),d$=TE(sn,p$,null,"bool"),h$={kernelName:sn,backendName:"cpu",kernelFunc:d$},c$=mE(((e,t)=>e<t?1:0)),f$=TE(fn,c$,null,"bool"),m$={kernelName:fn,backendName:"cpu",kernelFunc:f$},g$=mE(((e,t)=>e<=t?1:0)),y$=TE(mn,g$,null,"bool"),b$={kernelName:mn,backendName:"cpu",kernelFunc:y$};function x$(e,t,n){let r=(t-e)/(n-1),a=ka.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}var w$=LE((e=>Math.log(e))),v$=PE(yn,w$),k$={kernelName:yn,backendName:"cpu",kernelFunc:v$};function I$(e,t,n,r){let a=ka.getTypedArrayFromDType(r,ka.sizeFromShape(n));for(let n=0;n<a.length;++n){let r=n*t,s=e[r];for(let n=0;n<t;++n){let t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}var S$=mE(((e,t)=>Math.max(e,t))),N$=TE(En,S$),T$={kernelName:En,backendName:"cpu",kernelFunc:N$},_$=mE(((e,t)=>Math.min(e,t))),C$=TE(Ln,_$),E$={kernelName:Ln,backendName:"cpu",kernelFunc:C$},$$=mE(((e,t)=>e*t)),A$=_E(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),F$=TE(Wn,$$,A$),R$={kernelName:Wn,backendName:"cpu",kernelFunc:F$};function D$(e,t,n){let r=ka.createScalarValue(-1,n);return $$([],t,r,e,n)}var M$={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t;uE(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=D$(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},O$=mE(((e,t)=>e!==t?1:0)),L$=TE(Un,O$,null,"bool"),z$={kernelName:Un,backendName:"cpu",kernelFunc:L$};function P$(e,t,n,r,a){let s=t.length,i=ka.sizeFromShape(t),o=ka.computeStrides(t),l=ka.computeStrides(a),u=ka.getTypedArrayFromDType(n,ka.sizeFromShape(a));for(let t=0;t<i;++t){let n=ka.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];u[ka.locToIndex(a,s,l)]=e[t]}return u}function B$(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;uE(a,"transpose");let i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];let l=P$(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(l,o,a.dtype),shape:o,dtype:a.dtype}}var W$={kernelName:Zr,backendName:"cpu",kernelFunc:B$};function V$(e,t,n,r){let[a,s]=Bf.computeOutAndReduceShapes(e,r),i=cs(t,"int32"),o=ka.makeZerosTypedArray(ka.sizeFromShape(a),i),l=ka.sizeFromShape(s);for(let e=0;e<o.length;++e){let t=e*l,r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}var U$={kernelName:er,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;uE(a,"prod");let o=a.shape.length,l=ka.parseAxisParam(s,a.shape),u=Bf.getAxesPermutation(l,o),p=l,d=a,h=[];null!=u&&(d=B$({inputs:{x:a},backend:n,attrs:{perm:u}}),h.push(d),p=Bf.getInnerMostAxes(p.length,o));let c=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=V$(d.shape,d.dtype,c,p),y=m;return i&&(y=Bf.expandShapeToKeepDim(m,l)),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function G$(e,t,n,r){let a=[],s=0,i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){let r=e[n],a=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];let n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let i=e[r],l=e[r]+1;for(let e=0;e<n.length;++e){let r=n[e],a=e+t.length-1;if(a>=0){let e=o[a],t=e[e.length-1]-r[i];for(let e=i;e<l;++e)o[a].push(r[e+1]+t)}i=r[i],l=r[l]}l!==i&&(a.push([i,l]),s+=l-i)}return{outSplits:o,valueSlices:a,numValues:s}}function H$(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function j$(e,t,n,r,a){let s=t.slice();s[0]=a;let i=ka.getArrayFromDType(n,ka.sizeFromShape(s)),o=e.length;return function(e,t,n,r,a,s){let i=H$(t,2)[1],o=H$(s,2)[1],l=0;for(let t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)a[l*o+t]=e[n*i+t];++l}}(e,t,r,0===o?0:o/t[0],i,s),[i,s]}function q$(e,t,n,r,a,s,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){let a=ka.indexToLoc(r,t.length,ka.computeStrides(t)).join(",");throw new Error(`indices[${a}] = ${e} is not in [0, ${n})`)}}))}(s,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");let l=r[0],{outSplits:u,valueSlices:p,numValues:d}=G$(s,i,e,l),h=function(e){let t=[];for(let n=0;n<e.length;++n){let r=e[n].length,a=ka.getArrayFromDType("int32",r);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}(u),c=j$(n,r,a,p,d);return[h,c[0],c[1]]}var K$=2147483647;function X$(e,t,n,r,a,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=0===t.length,l=0===a.length,u=0===i.length,p=[];o||p.push(t[0]),l||p.push(a[0]),u||p.push(i[0]);for(let e=1;e<p.length;++e)if(p[e]!==p[e-1])throw new Error("starts, limits, and deltas must have the same shape");let d=0===p.length?1:p[0],h=ka.getArrayFromDType("int32",d+1);h[0]=0;for(let t=0;t<d;++t){let n,a=o?e[0]:e[t],i=l?r[0]:r[t],p=u?s[0]:s[t];if(0===p)throw new Error("Requires delta != 0");if(p>0&&i<a||p<0&&i>a)n=0;else if(n=Math.ceil(Math.abs((i-a)/p)),n>K$)throw new Error(`Requires ((limit - start) / delta) <= ${K$}`);h[t+1]=h[t]+n}let c=h[d],f=ka.getArrayFromDType(n,c),m=0;for(let t=0;t<d;++t){let n=h[t+1]-h[t],r=o?e[0]:e[t],a=u?s[0]:s[t];for(let e=0;e<n;++e)f[m++]=r,r+=a}return[h,f]}var Y$=Bf.RowPartitionType,Z$=class{constructor(e,t,n,r,a,s,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=a,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Bf.getRowPartitionTypesHelper(u),this.raggedRank=Bf.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Y$.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Y$.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Y$.VALUE_ROWIDS:return Z$.getMaxWidthValueRowID(t);case Y$.ROW_SPLITS:return Z$.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Y$[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){let t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){let t=e[s];t!==r&&(r=t,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Q$(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;Bf.validateDefaultValueShape(n,t);let r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=Bf.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);a[0]<0&&(a[0]=e);for(let e=1;e<=this.raggedRank;++e)a[e]<0&&(a[e]=this.getMaxWidth(e));return a}calculateFirstParentOutputIndex(e,t,n){let r=Math.min(e,n),a=[],s=0;for(let e=0;e<r;++e,s+=t)a.push(s);for(let t=r;t<e;++t)a.push(-1);return ka.assert(a.length===e,(()=>"Final length of result must be equal to firstDimension.")),a}calculateOutputIndexRowSplit(e,t,n,r){let a=e.length,s=[];for(let i=0;i<a-1;++i){let a=e[i+1]-e[i],o=Math.min(r,a),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)s.push(l),l+=n;for(let e=0;e<a-o;++e)s.push(-1)}if(a>0&&s.length!==e[a-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){let a=e.length,s=[];if(0===a)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<a;++u){let a=e[u];if(a===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=a,a>=t.length)throw new Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);l=t[a]}s.push(l)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){let a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case Y$.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case Y$.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${Y$[s]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case Y$.FIRST_DIM_SIZE:return e[0];case Y$.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Y$.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Y$[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];let r=Q$(t,!1),a=ka.getArrayFromDType(this.valuesDType,ka.sizeFromShape(r));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)s=this.calculateOutputIndex(e-1,s,n[e],t[e]);this.setOutput(this.raggedRank,s,a,r)}return[r,a]}setOutput(e,t,n,r){if(0===n.length)return;let a=this.values,s=n,i=r.slice();i=i.slice(e+1);let o=ka.sizeFromShape(i),l=t.length,u=this.defaultValue;if(u.length!==o&&1!==u.length){let e=this.defaultValueShape;Zi((()=>{let t=Uo(u,e);u=ol(t,i).dataSync()}))}let p=0,d=0,h=0;for(let e=0;e<=l;++e){let r=e<l?t[e]:-1;if(r!==h){if(d<h){let e=a.subarray(p*o);J$(s.subarray(d*o),e,(h-d)*o)}if(e>=l){let e=n.length;r=Math.floor(e/o)}if(r>h)if(1===this.defaultValue.length)s.subarray(h*o,r*o).fill(this.defaultValue[0]),h=r;else for(;r>h;){J$(s.slice(h*o),u,o),++h}r<0?(p=e+1,d=h):(p=e,d=h,h=d+1)}else++h}}};function J$(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function Q$(e,t){let n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function eA(e,t,n,r,a,s,i,o,l,u){return new Z$(e,t,n,r,a,s,i,o,l,u).compute()}function tA(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return ka.makeZerosTypedArray(0,r);let a=Math.abs(Math.ceil((t-e)/n)),s=ka.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var nA=LE((e=>1/Math.sqrt(e))),rA=PE(gr,nA),aA={kernelName:gr,backendName:"cpu",kernelFunc:rA};function sA(e,t,n,r,a,s,i,o,l,u){let p=[r/a,a],d=e.values,h=t.values;if(0===r)return Pi(n,t.dtype);let c=l instanceof es?l:Pi(p,t.dtype);"string"==typeof l||"number"==typeof l?c.values.fill(l):"boolean"==typeof l&&c.values.fill(+l);for(let e=0;e<s;e++){let s=[],l=0;for(let t=0;t<i;t++){let n=d[e*i+t];s.push(n),l+=n*o[t]}if(l<0||l>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)u?c.values[l*a+n]+=h[e*a+n]:c.values[l*a+n]=0===t.rank?h[0]:h[e*a+n]}return c}var iA=LE((e=>1/(1+Math.exp(-e)))),oA=zE(Tr,(e=>1/(1+Math.exp(-e)))),lA={kernelName:Tr,backendName:"cpu",kernelFunc:oA};function uA(e,t,n,r,a){let s=ff.isSliceContinous(r,t,n),i=ka.sizeFromShape(n),o=ka.computeStrides(r);if(s){let n=ff.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l=Pi(r,a,"string"===a?Bf.fromUint8ToStringArray(e):e),u=Pi(n,a);for(let e=0;e<u.size;++e){let n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===a?Bf.fromStringArrayToUint8(u.values):u.values}function pA(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;uE(a,"slice");let[o,l]=ff.parseSliceParams(a,s,i);ff.assertParamsValid(a,o,l);let u=uA(n.data.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}var dA={kernelName:kr,backendName:"cpu",kernelFunc:pA};function hA(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=new Array(l),p=new Array(o),d=t[1];if(0===l){if(0!==o)throw new Error(Bf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[ka.getArrayFromDType(n,0),[0,d],ka.getArrayFromDType(a,0),u,p]}let h=!0,c=0,f=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*d];if(n<0)throw new Error(Bf.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(Bf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++f[n],h=h&&n>=c,c=n}let m=!0;for(let e=0;e<l;++e){let t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&h){let t=e,n=r;for(let e=0;e<o;++e)p[e]=e;return[t,[o,d],n,u,p]}{let t=f[l-1],s=ka.getArrayFromDType(n,t*d),h=ka.getArrayFromDType(a,t),c=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*d],a=c[n],i=(0===n?0:f[n-1])+a;c[n]++;for(let n=0;n<d;++n)s[i*d+n]=e[t*d+n];h[i]=r[t],p[t]=i}for(let e=0;e<l;++e)if(0===c[e]){let t=0===e?0:f[e-1];s[t*d+0]=e;for(let e=1;e<d;++e)s[t*d+e]=0;h[t]=i}return[s,[t,d],h,u,p]}}function cA(e,t,n,r,a){let s=ka.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,p=-1;for(let e=0;e<o;++e){let t=a[e];if(-1===t){if(-1!==p)throw new Error(Bf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(p,e));p=e,l.push(1)}else{if(t<0)throw new Error(Bf.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==p){if(u<=0)throw new Error(Bf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw new Error(Bf.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[p]=e}if(ka.sizeFromShape(l)!==s)throw new Error(Bf.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let d=r.length,h=[];if(d>0){h[d-1]=1;for(let e=d-2;e>=0;--e)h[e]=h[e+1]*r[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*l[e+1]}let f=ka.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<d;++r)n+=e[t*d+r]*h[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/c[e]),n%=c[e]}return[f,[i,o],l]}function fA(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],u=l[1],p=o>0?a[o-1]+1:0;if(p<0)throw new Error(Bf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=p;let h=d.reduce(((e,t)=>e*t),1),c=ka.getArrayFromDType(n,h);if(0===o)return p>0&&c.fill(i),[c,d];if(p<=0)throw new Error(Bf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let t=0;if(m<o){if(t=a[m],y===t){++m;continue}if(y>=t)throw new Error(Bf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=p)throw new Error(Bf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,p));y>g&&c.fill(i,g*u,y*u);for(let t=f;t<m;++t){let n=r[t];if(n<0||n>=l[0])throw new Error(Bf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],l[0]));for(let t=0;t<u;t++)c[y*u+t]+=e[n*u+t]}if(s)for(let e=0;e<u;e++)c[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<p&&c.fill(i,g*u,p*u),[c,d]}var mA=LE((e=>Math.sqrt(e))),gA=zE(Cr,(e=>Math.sqrt(e))),yA={kernelName:Cr,backendName:"cpu",kernelFunc:gA},bA=mE(((e,t)=>{let n=e-t;return n*n})),xA=TE(zr,bA),wA={kernelName:zr,backendName:"cpu",kernelFunc:xA},vA=LE(((e,t)=>{let{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)})),kA=PE(Br,vA),IA={kernelName:Br,backendName:"cpu",kernelFunc:kA};function SA(e,t,n,r){let a=Pi(e,t.dtype);for(let e=0;e<a.size;e++){let s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}var NA=class{constructor(e,t,n,r,a,s){this.separator=ka.encodeString(e),this.nGramWidths=t,this.leftPad=ka.encodeString(n),this.rightPad=ka.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),p=s-(l+u),d=t+(l>0?0:i-o),h=0;h+=l*this.leftPad.length;for(let t=0;t<p;++t)h+=e[d+t].length;h+=u*this.rightPad.length,h+=(l+u+p-1)*this.separator.length,n[r+i]=new Uint8Array(h);let c=n[r+i],f=0,m=e=>e.forEach((e=>c[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<p-1;++t)m(e[d+t]),m(this.separator);if(p>0){m(e[d+p-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let a=r-1,s=ka.getArrayFromDType("int32",r);if(0===n||0===r){let e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){let n=t[e]-t[e-1],r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}let i=new Array(s[a]);for(let n=0;n<a;++n){let r=t[n],a=s[n];if(this.nGramWidths.forEach((s=>{let o=t[n+1]-t[n],l=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,l,s),a+=l})),this.preserveShort&&a===s[n]){let s=t[n+1]-t[n];if(0===s)continue;let o=s+2*this.padWidth,l=1;this.createNGrams(e,r,i,a,l,o)}}return[i,s]}};function TA(e,t,n,r,a,s,i,o){return new NA(n,r,a,s,i,o).compute(e,t)}function _A(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){let a=t[0],s=e.indexOf(a);for(;-1!==s;){let t=e.subarray(0,s);(!n||0!==t.length)&&r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void((!n||0!==e.length)&&r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(a,s);(!n||0!==t.length)&&r.push(t),a=s+1}}function CA(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let l=0;l<r;++l){let r=a.length;_A(e[l],t,n,a);let u=a.length-r;o[l]=u,s+=u,i=Math.max(i,u)}let l=ka.getArrayFromDType("int32",2*s),u=new Array(s),p=[r,i],d=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*d]=e,l[2*d+1]=t,u[d]=a[d],++d;return[l,u,p]}function EA(e,t){let n=ka.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=ka.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var $A=mE(((e,t)=>e-t)),AA=_E(((e,t,n,r)=>({real:e-n,imag:t-r}))),FA=TE(Hr,$A,AA),RA={kernelName:Hr,backendName:"cpu",kernelFunc:FA};function DA(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let r=Pi(n,e.dtype);for(let t=0;t<r.values.length;++t){let n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];let s=e.locToIndex(a);r.values[t]=e.values[s]}return r}var MA=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function OA(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);OA(e,t,Math.max(n,Math.floor(t-s*o/a+l)),Math.min(r,Math.floor(t+(a-s)*o/a+l)))}let a=e[t],s=n,i=r;for(ka.swap(e,n,t),MA(e[r],a)>0&&ka.swap(e,n,r);s<i;){for(ka.swap(e,s,i),s++,i--;MA(e[s],a)<0;)s+=1;for(;MA(e[i],a)>0;)i-=1}0===MA(e[n],a)?ka.swap(e,n,i):(i+=1,ka.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function LA(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=ka.getTypedArrayFromDType(n,i*r),u=ka.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){let n=t*o,s=e.subarray(n,n+o),i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(OA(i,r),i=i.slice(0,r)),a&&i.sort(MA);let p=t*r,d=l.subarray(p,p+r),h=u.subarray(p,p+r);for(let e=0;e<r;e++)d[e]=i[e].value,h[e]=i[e].index}let p=t.slice();return p[p.length-1]=r,[Pi(p,n,l),Pi(p,"int32",u)]}function zA(e,t,n,r){let a=ka.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];let i=new Map,o=new Int32Array(n[a]),l=new es(s,r,e),u=[],p=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(p)n=e[t].toString();else{let e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}let r=i.get(n);if(null!=r)o[t]=r;else{let e=i.size;i.set(n,e),o[t]=e,u.push(t)}}let d=s.slice();d[1]=i.size;let h=new es(d,r);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)h.set(l.get(n,e,r),n,t,r)}));let c=n.slice();return c[a]=d[1],{outputValues:h.values,outputShape:c,indices:o}}var PA="4.7.0";oo("cpu",(()=>new dE),1);var BA=zE(Ut,(e=>e>=0?e:Math.exp(e)-1)),WA={kernelName:Ut,backendName:"cpu",kernelFunc:BA};function VA(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;uE([a],"leakyRelu");let i=ka.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=ka.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",l)}var UA={kernelName:cn,backendName:"cpu",kernelFunc:VA},GA=mE(((e,t)=>e<0?t*e:e));function HA(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;uE([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=GA(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var jA={kernelName:Qn,backendName:"cpu",kernelFunc:HA},qA=zE(or,(e=>Math.max(0,e))),KA={kernelName:or,backendName:"cpu",kernelFunc:qA},XA=zE(cr,(e=>Math.min(Math.max(0,e),6))),YA={kernelName:cr,backendName:"cpu",kernelFunc:XA};function ZA(e,t,n,r,a){if("linear"===n)return xE({inputs:{x:t},backend:e});if("relu"===n)return qA({inputs:{x:t},backend:e});if("elu"===n)return BA({inputs:{x:t},backend:e});if("relu6"===n)return XA({inputs:{x:t},backend:e});if("prelu"===n)return HA({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return VA({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return oA({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function JA(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=ka.sizeFromShape(a.shape),o=ka.inferFromImplicitShape(s,i),l=ka.sizeFromShape(o);ka.assert(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var QA={kernelName:lr,backendName:"cpu",kernelFunc:JA};function eF(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;uE([a,s],"matMul");let l=a.shape.length,u=s.shape.length,p=i?a.shape[l-2]:a.shape[l-1],d=o?s.shape[u-1]:s.shape[u-2],h=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=ka.sizeFromShape(f),y=ka.sizeFromShape(m),b=Al.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,c]);ka.assert(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let x=o?[y,c,d]:[y,d,c],w=JA({inputs:{x:a},backend:n,attrs:{shape:i?[g,p,h]:[g,h,p]}}),v=JA({inputs:{x:s},backend:n,attrs:{shape:x}}),k=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],S=o?v.shape[1]:v.shape[2],N=Math.max(g,y),T=n.data.get(w.dataId).values,_=n.data.get(v.dataId).values,C=ka.computeStrides(w.shape),E=ka.computeStrides(v.shape),[$,A,F]=i?[C[0],1,C[1]]:[C[0],C[1],1],[R,D,M]=o?[1,E[1],E[0]]:[E[1],1,E[0]],O=I*S,L=Pi([N,I,S],w.dtype),z=L.values,P=n.blockSize;for(let e=0;e<N;e++){let t=e%g,n=e%y;for(let r=0;r<I;r+=P){let a=Math.min(r+P,I);for(let s=0;s<S;s+=P){let i=Math.min(s+P,S);for(let o=0;o<k;o+=P){let l=Math.min(o+P,k);for(let u=r;u<a;u++)for(let r=s;r<i;r++){let a=0;for(let e=o;e<l;e++){a+=T[t*$+u*A+e*F]*_[e*R+r*D+n*M]}z[e*O+(u*S+r)]+=a}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,L.dtype,L.values)}var tF={kernelName:lt,backendName:"cpu",kernelFunc:eF};var nF={kernelName:ia,backendName:"cpu",kernelFunc:function(e){let t,n,r,{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:p}=a,{transposeA:d,transposeB:h,activation:c,leakyreluAlpha:f}=i,m=[];t=eF({inputs:{a:o,b:l},attrs:{transposeA:d,transposeB:h},backend:s}),u&&(n=$E({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),c&&(r=ZA(s,t,c,p,f),m.push(t),t=r);for(let e of m)s.disposeIntermediateTensorInfo(e);return t}},rF=zE(He,(e=>Math.acos(e))),aF={kernelName:He,backendName:"cpu",kernelFunc:rF},sF=zE(je,(e=>Math.acosh(e))),iF={kernelName:je,backendName:"cpu",kernelFunc:sF};var oF={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,r=t;uE(t,"addN");let a=r.map((e=>n.data.get(e.dataId).values)),s=Pi(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){let t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var lF={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;uE(a,"all");let o=ka.parseAxisParam(s,a.shape),l=o,u=Bf.getAxesPermutation(l,a.shape.length),p=a;null!=u&&(p=B$({inputs:{x:a},backend:n,attrs:{perm:u}}),l=Bf.getInnerMostAxes(l.length,a.shape.length)),Bf.assertAxesAreInnerMostDims("all",l,p.shape.length);let[d,h]=Bf.computeOutAndReduceShapes(p.shape,l),c=ka.sizeFromShape(h),f=ka.makeZerosTypedArray(ka.sizeFromShape(d),p.dtype),m=n.data.get(p.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(d,p.dtype,f);if(i){let e=JA({inputs:{x:g},backend:n,attrs:{shape:Bf.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var uF={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;uE(a,"any");let o=ka.parseAxisParam(s,a.shape),l=o,u=Bf.getAxesPermutation(l,a.shape.length),p=a;null!=u&&(p=B$({inputs:{x:a},backend:n,attrs:{perm:u}}),l=Bf.getInnerMostAxes(l.length,a.shape.length)),Bf.assertAxesAreInnerMostDims("any",l,p.shape.length);let[d,h]=Bf.computeOutAndReduceShapes(p.shape,l),c=ka.sizeFromShape(h),f=ka.makeZerosTypedArray(ka.sizeFromShape(d),p.dtype),m=n.data.get(p.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(d,p.dtype,f);if(i){let e=JA({inputs:{x:g},backend:n,attrs:{shape:Bf.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var pF={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;uE(a,"argMax");let i=ka.parseAxisParam(s,a.shape),o=Bf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=B$({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Bf.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],Bf.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[p,d]=Bf.computeOutAndReduceShapes(l.shape,i),h=ka.sizeFromShape(p),c=ka.makeZerosTypedArray(h,"int32"),f=ka.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a>n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p,"int32",c)}};var dF={kernelName:Je,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;uE(a,"argMin");let i=ka.parseAxisParam(s,a.shape),o=Bf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=B$({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Bf.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],Bf.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[p,d]=Bf.computeOutAndReduceShapes(l.shape,i),h=ka.sizeFromShape(p),c=ka.makeZerosTypedArray(h,"int32"),f=ka.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a<n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p,"int32",c)}},hF=zE(Qe,(e=>Math.asin(e))),cF={kernelName:Qe,backendName:"cpu",kernelFunc:hF},fF=zE(et,(e=>Math.asinh(e))),mF={kernelName:et,backendName:"cpu",kernelFunc:fF},gF=zE(tt,(e=>Math.atan(e))),yF={kernelName:tt,backendName:"cpu",kernelFunc:gF},bF=mE(((e,t)=>Math.atan2(e,t))),xF=TE(rt,bF),wF={kernelName:rt,backendName:"cpu",kernelFunc:xF},vF=zE(nt,(e=>Math.atanh(e))),kF={kernelName:nt,backendName:"cpu",kernelFunc:vF};function IF(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,p=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,c=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Pi(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){let n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){let w=y*i-h,v=Math.max(0,w),k=Math.min(a.inHeight,p+w),I=n+y*b;for(let n=0;n<a.outWidth;++n){let i=n*o-c,p=Math.max(0,i),h=Math.min(a.inWidth,d+i),y=f,b=0,w=0;for(let n=v;n<k;n+=l){let a=m+n*r[1];for(let n=p;n<h;n+=u){let i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,w++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/w:y}}}return m}function SF(e,t,n,r,a=!1,s=!1){let i=Pi(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,p=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=Pi(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){let g=n*o-c,y=g;for(;y<0;)y+=u;let b=Math.min(r.inHeight,d+g);for(let o=0;o<r.outWidth;++o){let d=o*l-f,c=d;for(;c<0;)c+=p;let x=Math.min(r.inWidth,h+d),w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=u){let i=n-g;for(let o=c;o<x;o+=p){let l=o-d,u=m.get(e,n,o,t);u>w&&(w=u,v=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*h+l)}}i.set(v,e,n,o,t)}}return i}function NF(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,p=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Pi(a.outShape,n),w=x.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let t=0;t<a.batchSize;++t){let n=t*v,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let v=0;v<a.outDepth;++v){let N=v*i-m,T=N;for(;T<0;)T+=u;let _=Math.min(a.inDepth,h+N),C=n+v*k;for(let n=0;n<a.outHeight;++n){let i=n*o-g,h=i;for(;h<0;)h+=p;let m=Math.min(a.inHeight,c+i),v=C+n*I;for(let n=0;n<a.outWidth;++n){let i=n*l-y,o=i;for(;o<0;)o+=d;let c=Math.min(a.inWidth,f+i),g=v+n*S,k=b,I=0,N=0;for(let n=T;n<_;n+=u){let a=x+n*r[1];for(let n=h;n<m;n+=p){let i=a+n*r[2];for(let n=o;n<c;n+=d){let a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===s?I/Math.max(N,1):k}}}}return x}var TF={kernelName:at,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;uE(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;ka.assert(Bf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,p=Bf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===p.filterWidth&&1===p.filterHeight&&ka.arraysEqual(p.inShape,p.outShape))u=xE({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=ka.computeStrides(a.shape),r=IF(e,a.shape,a.dtype,t,p,"avg");u=n.makeTensorInfo(p.outShape,a.dtype,r.values)}return u}};var _F={kernelName:it,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;uE(a,"avgPool3d");let p=Bf.computePool3DInfo(a.shape,s,i,1,o,l,u),d=NF(n.data.get(a.dataId).values,a.shape,a.dtype,ka.computeStrides(a.shape),p,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}};var CF={kernelName:ot,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;uE([a,s],"avgPool3DGrad");let p=Bf.computePool3DInfo(s.shape,i,o,1,l,u),d=p.strideDepth,h=p.strideHeight,c=p.strideWidth,f=p.filterDepth,m=p.filterHeight,g=p.filterWidth,y=p.dilationDepth,b=p.dilationHeight,x=p.dilationWidth,w=p.effectiveFilterDepth,v=p.effectiveFilterHeight,k=p.effectiveFilterWidth,I=w-1-p.padInfo.front,S=k-1-p.padInfo.left,N=v-1-p.padInfo.top,T=Pi(s.shape,"float32"),_=1/(f*m*g),C=n.bufferSync(a);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inDepth;++n)for(let r=0;r<p.inHeight;++r)for(let a=0;a<p.inWidth;++a){let s=n-I,i=r-N,o=a-S,l=0;for(let n=0;n<w;n+=y){let r=(s+n)/d;if(!(r<0||r>=p.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=b){let a=(i+n)/h;if(!(a<0||a>=p.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){let s=(o+n)/c;s<0||s>=p.outWidth||Math.floor(s)!==s||(l+=C.get(e,r,a,s,t))}}}T.set(l*_,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};var EF={kernelName:st,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;uE([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,p=Bf.computePool2DInfo(i.shape,o,l,1,u),d=p.strideHeight,h=p.strideWidth,c=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.effectiveFilterHeight,b=p.effectiveFilterWidth,x=b-1-p.padInfo.left,w=y-1-p.padInfo.top,v=Pi(i.shape,"float32"),k=1/(c*f),I=n.data.get(a.dataId).values,S=Pi(a.shape,"float32",I);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){let a=n-w,s=r-x,i=0;for(let n=0;n<y;n+=m){let r=(a+n)/d;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){let a=(s+n)/h;a<0||a>=p.outWidth||Math.floor(a)!==a||(i+=S.get(e,r,a,t))}}v.set(i*k,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};var $F={kernelName:tn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;ka.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ka.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ka.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),uE([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let p=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,h=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(p.length),g=f.length,y=c.length,b=h.length,x=d.length,w=0,v=0,k=0,I=0;for(let e=0;e<p.length;++e)m[e]=f[w++]+(p[e]-d[v++])*c[k++]/Math.sqrt(h[I++]+u),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};var AF={kernelName:ut,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;uE([a],"batchToSpaceND");let o=s.reduce(((e,t)=>e*t)),l=Bf.getReshaped(a.shape,s,o),u=Bf.getPermuted(l.length,s.length),p=Bf.getReshapedPermuted(a.shape,s,o),d=Bf.getSliceBeginCoords(i,s.length),h=Bf.getSliceSize(p,i,s.length),c=JA({inputs:{x:a},backend:n,attrs:{shape:l}}),f=B$({inputs:{x:c},backend:n,attrs:{perm:u}}),m=JA({inputs:{x:f},backend:n,attrs:{shape:p}}),g=pA({inputs:{x:m},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};var FF={kernelName:pt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=FE(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}};var RF={kernelName:ct,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=Bf.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},DF=zE(gt,((e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),MF={kernelName:gt,backendName:"cpu",kernelFunc:DF},OF={kernelName:bt,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(ka.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function LF(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var zF={kernelName:un,backendName:"cpu",kernelFunc:LF};function PF(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ka.parseAxisParam(a,t[0].shape)[0],i=t.map((e=>e.shape));Bf.assertParamsConsistent(i,s);let o=Bf.computeOutShape(t.map((e=>e.shape)),s);if(0===ka.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter((e=>ka.sizeFromShape(e.shape)>0));if(1===l.length)return xE({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){let e=l.map((e=>vE({inputs:{input:e},backend:n}))),t=l.map((e=>LF({inputs:{input:e},backend:n}))),r=PF({inputs:e,backend:n,attrs:{axis:s}}),a=PF({inputs:t,backend:n,attrs:{axis:s}}),i=gE({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}let u=l.map((e=>{let t=[-1,ka.sizeFromShape(e.shape.slice(s))];return JA({inputs:{x:e},backend:n,attrs:{shape:t}})})),p=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=Bf.computeOutShape(u.map((e=>e.shape)),1);let d=1===u[0].shape[0],h=UE(p,o,t[0].dtype,d),c=Bf.computeOutShape(l.map((e=>e.shape)),s),f=n.makeTensorInfo(c,t[0].dtype,h);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var BF={kernelName:xt,backendName:"cpu",kernelFunc:PF};function WF(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:p}=r;uE([a,s],"conv2d");let d=Bf.convertConv2DDataFormat(l),h=Bf.computeConv2DInfo(a.shape,s.shape,i,u,o,p,!1,d),c=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,x="channelsLast"===h.dataFormat,w=new es(h.outShape,a.dtype),v=ka.computeStrides(a.shape),k=ka.computeStrides(s.shape),I=v[0],S=x?v[1]:v[2],N=x?v[2]:1,T=x?1:v[1],_=w.strides[0],C=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,$=x?1:w.strides[1],A=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,R=w.values;for(let e=0;e<h.batchSize;++e){let t=e*I,n=e*_;for(let e=0;e<h.outHeight;++e){let r=n+e*C,a=e*h.strideHeight-b;for(let e=0;e<c;++e){let n=a+e*m;if(n<0||n>=h.inHeight)continue;let s=e*k[0],i=t+n*S;for(let e=0;e<h.outWidth;++e){let t=r+e*E,n=e*h.strideWidth-y;for(let e=0;e<f;++e){let r=n+e*g;if(r<0||r>=h.inWidth)continue;let a=i+r*N,o=s+e*k[1];for(let e=0;e<h.inChannels;++e){let n=A[a+e*T];for(let e=0;e<h.outChannels;++e)R[t+e*$]+=n*F[o+e];o+=h.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,R)}var VF={kernelName:wt,backendName:"cpu",kernelFunc:WF};var UF={kernelName:vt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:p}=r;uE([a,s],"conv2dBackpropFilter");let d=Bf.convertConv2DDataFormat(l),h=Bf.computeConv2DInfo(a.shape,p,i,1,o,u,!1,d),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=h,y="channelsLast"===h.dataFormat,b=new es(h.filterShape,"float32"),x=h.padInfo.left,w=h.padInfo.top,v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new es(a.shape,a.dtype,v),S=new es(s.shape,s.dtype,k);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((w-e)/c)),n=Math.min(h.outHeight,(h.inHeight+w-e)/c);for(let r=0;r<g;++r){let a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(h.outWidth,(h.inWidth+x-r)/f);for(let i=0;i<h.inChannels;++i)for(let o=0;o<h.outChannels;++o){let l=0;for(let u=0;u<h.batchSize;++u)for(let p=t;p<n;++p){let t=e+p*c-w;for(let e=a;e<s;++e){let n=r+e*f-x;l+=y?I.get(u,t,n,i)*S.get(u,p,e,o):I.get(u,i,t,n)*S.get(u,o,p,e)}}b.set(l,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var GF={kernelName:kt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=r;uE([a,s],"conv2dBackpropInput");let d=ka.computeStrides(s.shape),h=ka.computeStrides(a.shape),c=Bf.convertConv2DDataFormat(u),f=Bf.computeConv2DInfo(i,s.shape,o,1,l,p,!1,c),m=new es(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,w,v]=d,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:_,outChannels:C,outHeight:E,outWidth:$,strideHeight:A,strideWidth:F}=f;c=f.dataFormat;let R=I-1-f.padInfo.top,D=S-1-f.padInfo.left,M="channelsLast"===c,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],B=h[0],W=M?h[1]:h[2],V=M?h[2]:1,U=M?1:h[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){let r=n-R,a=Math.max(0,Math.ceil(r/A)),s=Math.min(E,(I+r)/A);for(let i=0;i<_;++i){let o=i-D,l=Math.max(0,Math.ceil(o/F)),u=Math.min($,(S+o)/F),p=0;for(let n=a;n<s;++n){let a=n*A-r;for(let r=l;r<u;++r){let s=B*e+W*n+V*r,i=x*(I-1-a)+w*(S-1-(r*F-o))+v*t;for(let e=0;e<C;++e){p+=y[s+U*e]*b[i+e]}}}g[O*e+L*n+z*i+P*t]=p}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};var HF={kernelName:It,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;uE([a,s],"conv3d");let u=Bf.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:p,filterHeight:d,filterWidth:h,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,w=new es(u.outShape,a.dtype),v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=w.values,S=ka.computeStrides(a.shape),N=ka.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){let t=e*S[0],n=e*w.strides[0];for(let e=0;e<u.outDepth;++e){let r=n+e*w.strides[1],a=e*u.strideDepth-y;for(let e=0;e<p;++e){let n=a+e*c;if(n<0||n>=u.inDepth)continue;let s=e*N[0],i=t+n*S[1];for(let e=0;e<u.outHeight;++e){let t=r+e*w.strides[2],n=e*u.strideHeight-x;for(let e=0;e<d;++e){let r=n+e*f;if(r<0||r>=u.inHeight)continue;let a=s+e*N[1],o=i+r*S[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<h;++e){let t=r+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*N[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=v[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};var jF={kernelName:St,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;uE([a,s],"conv3dBackpropFilterV2");let u=ka.computeStrides(a.shape),p=ka.computeStrides(s.shape),d=Bf.computeConv3DInfo(a.shape,l,i,1,o),h=d.strideDepth,c=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new es(d.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,_,C]=p,E=n.data.get(a.dataId).values,[$,A,F,R]=u,D=d.padInfo.front,M=d.padInfo.left,O=d.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((D-e)/h)),n=Math.min(d.outDepth,(d.inDepth+D-e)/h),r=e*w;for(let a=0;a<g;++a){let s=Math.max(0,Math.ceil((O-a)/c)),i=Math.min(d.outHeight,(d.inHeight+O-a)/c),o=a*v+r;for(let r=0;r<y;++r){let l=Math.max(0,Math.ceil((M-r)/f)),u=Math.min(d.outWidth,(d.inWidth+M-r)/f),p=r*k+o;for(let o=0;o<d.inChannels;++o){let m=o*I+p;for(let p=0;p<d.outChannels;++p){let g=0;for(let m=0;m<d.batchSize;++m){let d=m*$,y=m*N;for(let m=t;m<n;++m){let t=(e+m*h-D)*A+d,n=m*T+y;for(let e=s;e<i;++e){let s=(a+e*c-O)*F+t,i=e*_+n;for(let e=l;e<u;++e){let t=e*C+i;g+=E[(r+e*f-M)*R+s+o]*S[t+p]}}}}x[m+p]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var qF={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;uE([a],"conv3dBackpropInputV2");let u=ka.computeStrides(a.shape),p=ka.computeStrides(s.shape),d=Bf.computeConv3DInfo(l,s.shape,o,1,i),h=new es(d.inShape,"float32"),c=h.values,[f,m,g,y]=h.strides,b=n.data.get(a.dataId).values,[x,w,v,k]=u,I=n.data.get(s.dataId).values,[S,N,T,_]=p,{batchSize:C,filterDepth:E,filterHeight:$,filterWidth:A,inChannels:F,inDepth:R,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=d,U=E-1-d.padInfo.front,G=$-1-d.padInfo.top,H=A-1-d.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<F;++t)for(let n=0;n<R;++n){let r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(E+r)/B);for(let i=0;i<D;++i){let o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,($+o)/W);for(let p=0;p<M;++p){let d=p-H,h=Math.max(0,Math.ceil(d/V)),C=Math.min(P,(A+d)/V),F=0;for(let n=a;n<s;++n){let a=n*B-r;for(let r=l;r<u;++r){let s=r*W-o;for(let i=h;i<C;++i){let o=x*e+w*n+v*r+k*i,l=S*(E-1-a)+N*($-1-s)+T*(A-1-(i*V-d))+_*t;for(let e=0;e<O;++e){F+=b[o+e]*I[l+e]}}}}c[f*e+m*n+g*i+y*p+t]=F}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},KF=zE(Tt,(e=>Math.cos(e))),XF={kernelName:Tt,backendName:"cpu",kernelFunc:KF},YF=zE(_t,(e=>Math.cosh(e))),ZF={kernelName:_t,backendName:"cpu",kernelFunc:YF};var JF={kernelName:$t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[p,d,h,c]=a.shape,f=s.shape[0],[m,g]=o,y=Pi([f,m,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,v=ka.computeStrides(a.shape),k=ka.computeStrides(y.shape);for(let e=0;e<f;e++){let t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=p)continue;let o=m>1?(a-n)*(d-1)/(m-1):0,f=g>1?(s-r)*(h-1)/(g-1):0;for(let t=0;t<m;t++){let p=m>1?n*(d-1)+t*o:.5*(n+a)*(d-1);if(p<0||p>d-1)for(let n=0;n<g;n++)for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}else if("bilinear"===l){let n=Math.floor(p),a=Math.ceil(p),o=p-n;for(let l=0;l<g;l++){let p=g>1?r*(h-1)+l*f:.5*(r+s)*(h-1);if(p<0||p>h-1){for(let n=0;n<c;n++){let r=n+l*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}let d=Math.floor(p),m=Math.ceil(p),b=p-d;for(let r=0;r<c;r++){let s=r+d*v[2]+n*v[1]+i*v[0],u=w[s];s=r+m*v[2]+n*v[1]+i*v[0];let p=w[s];s=r+d*v[2]+a*v[1]+i*v[0];let h=w[s];s=r+m*v[2]+a*v[1]+i*v[0];let c=u+(p-u)*b,f=h+(w[s]-h)*b;s=r+l*k[2]+t*k[1]+e*k[0],y.values[s]=c+(f-c)*o}}}else for(let n=0;n<g;++n){let a=g>1?r*(h-1)+n*f:.5*(r+s)*(h-1);if(a<0||a>h-1){for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}continue}let o=Math.round(a),l=Math.round(p);for(let r=0;r<c;r++){let a=r+o*v[2]+l*v[1]+i*v[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=w[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};var QF={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;uE(a,"cumprod");let l=Bf.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=B$({inputs:{x:a},backend:n,attrs:{perm:l}}));let p=Bf.getInnerMostAxes(1,a.shape.length)[0];if(p!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${p}`);let d=cs(u.dtype,"int32"),h=ka.makeOnesTypedArray(ka.sizeFromShape(u.shape),d),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)h[n]=i?1:c[n];else{let r=m(e,t-1);h[n]=i?c[r]*h[r]:c[n]*h[r]}}let g=n.makeTensorInfo(u.shape,d,h);if(null!=l){let e=B$({inputs:{x:g},backend:n,attrs:{perm:Bf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var eR={kernelName:Et,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;uE(a,"cumsum");let l=Bf.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=B$({inputs:{x:a},backend:n,attrs:{perm:l}}));let p=Bf.getInnerMostAxes(1,a.shape.length)[0];if(p!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${p}`);let d=cs(u.dtype,"int32"),h=ka.makeZerosTypedArray(ka.sizeFromShape(u.shape),d),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)h[n]=i?0:c[n];else{let r=m(e,t-1);h[n]=i?c[r]+h[r]:c[n]+h[r]}}let g=n.makeTensorInfo(u.shape,d,h);if(null!=l){let e=B$({inputs:{x:g},backend:n,attrs:{perm:Bf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var tR={kernelName:At,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=FE(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){let e=RE(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};var nR={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;ka.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));let o=a.shape[0],l=a.shape[1],u=a.shape[2],p=a.shape[3],d=l*s,h=u*s,c=p/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*d*h*c),g=0;for(let e=0;e<o;++e)for(let t=0;t<d;++t){let n=Math.floor(t/s),r=t%s;for(let t=0;t<h;++t){let a=Math.floor(t/s),i=(r*s+t%s)*c;for(let t=0;t<c;++t){let r=t+i+p*(a+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,d,h,c],a.dtype,m)}};function rR(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;uE([a,s],"depthwiseConv2DNative");let p=ka.computeStrides(a.shape),d=ka.computeStrides(s.shape),h=l;null==h&&(h=[1,1]),ka.assert(Bf.eitherStridesOrDilationsAreOne(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));let c=Bf.computeConv2DInfo(a.shape,s.shape,i,h,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,w=b.top,v=c.outChannels/c.inChannels,k=new es(c.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let e=0;e<c.batchSize;++e){let t=e*p[0],n=e*k.strides[0];for(let e=0;e<c.outHeight;++e){let r=n+e*k.strides[1],a=e*c.strideHeight-w;for(let e=0;e<f;++e){let n=a+e*g;if(n<0||n>=c.inHeight)continue;let s=e*d[0],i=t+n*p[1];for(let e=0;e<c.outWidth;++e){let t=r+e*k.strides[2],n=e*c.strideWidth-x;for(let e=0;e<m;++e){let r=n+e*y;if(r<0||r>=c.inWidth)continue;let a=s+e*d[1],o=i+r*c.inChannels,l=t,u=a;for(let e=0;e<c.inChannels;++e){let t=I[o+e];for(let e=0;e<v;++e)N[l+e]+=t*S[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var aR={kernelName:Rt,backendName:"cpu",kernelFunc:rR};var sR={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:p}=r;uE([a,s],"depthwiseConv2dNativeBackpropFilter");let d=Bf.computeConv2DInfo(a.shape,p,i,o,l,u,!0),{strideHeight:h,strideWidth:c,filterHeight:f,filterWidth:m}=d,g=new es(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,x=d.outChannels/d.inChannels,w=n.data.get(a.dataId).values,v=new es(a.shape,a.dtype,w),k=n.data.get(s.dataId).values,I=new es(s.shape,s.dtype,k);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((b-e)/h)),n=Math.min(d.outHeight,(d.inHeight+b-e)/h);for(let r=0;r<m;++r){let a=Math.max(0,Math.ceil((y-r)/c)),s=Math.min(d.outWidth,(d.inWidth+y-r)/c);for(let i=0;i<d.outChannels;++i){let o=Math.trunc(i/x),l=i%x,u=0;for(let l=0;l<d.batchSize;++l)for(let p=t;p<n;++p){let t=e+p*h-b;for(let e=a;e<s;++e){let n=r+e*c-y;u+=v.get(l,t,n,o)*I.get(l,p,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};var iR={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:p}=r;uE([a,s],"depthwiseConv2DNativeBackpropInput");let d=ka.computeStrides(a.shape),h=ka.computeStrides(s.shape),c=Bf.computeConv2DInfo(p,s.shape,i,o,l,u,!0),f=new es(c.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[w,v,k]=d,I=n.data.get(s.dataId).values,[S,N,T]=h,{batchSize:_,filterHeight:C,filterWidth:E,inChannels:$,inHeight:A,inWidth:F,outChannels:R,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=c,z=C-1-c.padInfo.top,P=E-1-c.padInfo.left,B=R/$;for(let e=0;e<_;++e)for(let t=0;t<$;++t)for(let n=0;n<A;++n){let r=n-z,a=Math.max(0,Math.ceil(r/O)),s=Math.min(D,(C+r)/O);for(let i=0;i<F;++i){let o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(M,(E+o)/L),p=0;for(let n=a;n<s;++n){let a=n*O-r;for(let r=l;r<u;++r){let s=w*e+v*n+k*r,i=S*(C-1-a)+N*(E-1-(r*L-o))+T*t;for(let e=0;e<B;++e){p+=x[s+(t*B+e)]*I[i+e]}}}m[g*e+y*n+b*i+t]=p}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};var oR={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=ka.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Pi([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},lR={kernelName:Lt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,p=r.shape.length,d=l.data.get(a.dataId).values,h=a.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=Bf.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),_=ka.sizeFromShape(T),C=T.length,E=ka.getArrayFromDType(r.dtype,_);for(let e=0;e<c;++e)for(let t=0;t<y;++t){let n=t*w-x.top;for(let s=0;s<b;++s){let i=s*v-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){let s=n+t*S;if(s>=0&&s<f)for(let n=0;n<I;++n){let c=i+n*N;if(c>=0&&c<m){let i=ka.locToIndex([e,s,c,o],p,ka.computeStrides(r.shape)),f=ka.locToIndex([t,n,o],h,ka.computeStrides(a.shape)),m=u[i]+d[f];m>l&&(l=m)}}}E[ka.locToIndex([e,t,s,o],C,ka.computeStrides(T))]=l}}}return{dataId:l.write(ka.toTypedArray(E,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},uR={kernelName:Pt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,p=ka.toNestedArray(r.shape,u.data.get(r.dataId).values),d=ka.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:h,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Bf.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);ka.assert(s.rank===N.length,(()=>`Error in ${Pt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));let T=ka.toNestedArray(N,u.data.get(s.dataId).values),_=ka.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){let n=t*x-b.top;for(let r=0;r<y;++r){let a=r*w-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<v;++t){let r=n+t*I;if(r>=0&&r<c)for(let n=0;n<k;++n){let u=a+n*S;if(u>=0&&u<f){let a=p[e][r][u][s]+d[t][n][s];a>i&&(i=a,o=t,l=n)}}}_[o][l][s]+=T[e][t][r][s]}}}return{dataId:u.write(ka.toTypedArray(_,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},pR={kernelName:zt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,p=ka.toNestedArray(r.shape,u.data.get(r.dataId).values),d=ka.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:h,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Bf.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);ka.assert(s.rank===N.length,(()=>`Error in ${zt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));let T=ka.toNestedArray(N,u.data.get(s.dataId).values),_=ka.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){let n=t*x-b.top;for(let r=0;r<y;++r){let a=r*w-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=a<0?0:a;for(let t=0;t<v;++t){let r=n+t*I;if(r>=0&&r<c)for(let n=0;n<k;++n){let u=a+n*S;if(u>=0&&u<f){let a=p[e][r][u][s]+d[t][n][s];a>i&&(i=a,o=r,l=u)}}}_[e][o][l][s]+=T[e][t][r][s]}}}return{dataId:u.write(ka.toTypedArray(_,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};var dR={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:s,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,p=(null==o?void 0:o.contextType)||"2d";if("2d"!==p)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let d=s.getContext(p,(null==o?void 0:o.contextAttributes)||{});if(null==d)throw new Error(`Could not get the context with ${p} type.`);let[h,c]=a.shape.slice(0,2),f=2===a.shape.length?1:a.shape[2],m=n.data.get(a.dataId).values,g="float32"===a.dtype?255:1,y=new Uint8ClampedArray(c*h*4);for(let e=0;e<h*c;++e){let t=[0,0,0,255*u];for(let n=0;n<f;n++){let r=m[e*f+n];if("float32"===a.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===a.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===f?(t[0]=r*g,t[1]=r*g,t[2]=r*g):t[n]=r*g}let n=4*e;y[n+0]=Math.round(t[0]),y[n+1]=Math.round(t[1]),y[n+2]=Math.round(t[2]),y[n+3]=Math.round(t[3])}s.width=c,s.height=h;let b=new ImageData(y,c,h);return d.putImageData(b,0,0),a}};function hR(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a;uE(s,"sum"),t="bool"===s.dtype?SE({inputs:{x:s},backend:r,attrs:{dtype:"int32"}}):xE({inputs:{x:s},backend:r});let l=t.shape.length,u=ka.parseAxisParam(i,t.shape),p=Bf.getAxesPermutation(u,l),d=u,h=t;null!=p&&(h=B$({inputs:{x:t},backend:r,attrs:{perm:p}}),d=Bf.getInnerMostAxes(d.length,l)),Bf.assertAxesAreInnerMostDims("sum",d,h.shape.length);let[c,f]=Bf.computeOutAndReduceShapes(h.shape,d),m=bE(r,c,Bf.upcastType(h.dtype,"int32")),g=ka.sizeFromShape(f),y=r.data.get(m.dataId).values,b=r.data.get(h.dataId).values;for(let e=0;e<y.length;++e){let t=e*g,n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(o){let e=m;m=JA({inputs:{x:m},backend:r,attrs:{shape:Bf.expandShapeToKeepDim(m.shape,u)}}),r.disposeIntermediateTensorInfo(e)}return r.disposeIntermediateTensorInfo(t),null!=p&&r.disposeIntermediateTensorInfo(h),m}var cR={kernelName:Er,backendName:"cpu",kernelFunc:hR};var fR={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=Bf.decodeEinsumEquation(a,s.length);Bf.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:p}=Bf.getEinsumComputePath(o,l),d=p.length,h=null,c=i.length,f=[];for(let e=0;e<d;++e){for(let t of p[e]){let e,{permutationIndices:r,expandDims:a}=Bf.getEinsumPermutation(c,l[t]);Bf.isIdentityPermutation(r)?e=s[t]:(e=B$({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);ka.arraysEqual(e.shape,i)||(e=JA({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===h?h=e:(h=F$({inputs:{a:e,b:h},backend:n}),f.push(h))}e<d-1&&(u[e]>=0&&(h=hR({inputs:{x:h},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(h)),c--)}for(let e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}};var mR={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;uE([r,a],"eluGrad");let s=new Float32Array(ka.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){let t=i[e];s[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},gR=Bf.ERF_P,yR=Bf.ERF_A1,bR=Bf.ERF_A2,xR=Bf.ERF_A3,wR=Bf.ERF_A4,vR=Bf.ERF_A5,kR=zE(Ht,(e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+gR*n);return t*(1-((((vR*r+wR)*r+xR)*r+bR)*r+yR)*r*Math.exp(-n*n))})),IR={kernelName:Ht,backendName:"cpu",kernelFunc:kR};function SR(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(ka.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),JA({inputs:{x:a},backend:n,attrs:{shape:o}})}var NR={kernelName:Kt,backendName:"cpu",kernelFunc:SR},TR=mE(((e,t)=>e/t)),_R=TE(Wt,TR),CR={kernelName:Wt,backendName:"cpu",kernelFunc:_R};function ER(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],p=ka.sizeFromShape(u),d=ka.getTypedArrayFromDType("float32",p),h=ka.getTypedArrayFromDType("float32",p);for(let e=0;e<a;e++){let r=pA({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=pA({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=gE({inputs:{real:r,imag:a},backend:n}),{real:u,imag:p}=$R(i,t,n),c=Bf.mergeRealAndImagArrays(u,p);for(let t=0;t<s;t++){let n=Bf.getComplexWithIndex(c,t);d[e*s+t]=n.real,h[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}let c=n.makeTensorInfo(u,"float32",d),f=n.makeTensorInfo(u,"float32",h),m=gE({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function $R(e,t,n){let r=ka.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(function(e){return!(e&e-1)}(r)){let a=AR(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",ka.createScalarValue(r,"float32")),i=xE({inputs:{x:s},backend:n}),l=CR.kernelFunc({inputs:{a:e,b:s},backend:n}),u=CR.kernelFunc({inputs:{a:t,b:i},backend:n}),p=n.data.get(l.dataId).values,d=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:p,imag:d}}return a}{let e=function(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){let o=Bf.exponent(a*r,t,n),l=Bf.getComplexWithIndex(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),Bf.assignToTypedArray(r,s,i,a)}return r}(Bf.mergeRealAndImagArrays(s,i),r,t);return Bf.splitRealAndImagArrays(e)}}function AR(e,t,n,r,a){if(1===n)return{real:e,imag:t};let s=Bf.mergeRealAndImagArrays(e,t),i=n/2,o=Bf.complexWithEvenIndex(s),l=o.real,u=o.imag,p=[l.length],d=a.makeTensorInfo(p,"float32",l),h=a.makeTensorInfo(p,"float32",u),c=gE({inputs:{real:d,imag:h},backend:a}),f=Bf.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),w=gE({inputs:{real:b,imag:x},backend:a}),v=AR(l,u,i,r,a),k=v.real,I=v.imag,S=[k.length],N=a.makeTensorInfo(S,"float32",k),T=a.makeTensorInfo(S,"float32",I),_=gE({inputs:{real:N,imag:T},backend:a}),C=AR(m,g,i,r,a),E=C.real,$=C.imag,A=[E.length],F=a.makeTensorInfo(A,"float32",E),R=a.makeTensorInfo(A,"float32",$),D=gE({inputs:{real:F,imag:R},backend:a}),M=Bf.exponents(n,r),O=[M.real.length],L=a.makeTensorInfo(O,"float32",M.real),z=a.makeTensorInfo(O,"float32",M.imag),P=gE({inputs:{real:L,imag:z},backend:a}),B=F$({inputs:{a:P,b:D},backend:a}),W=$E({inputs:{a:_,b:B},backend:a}),V=FA({inputs:{a:_,b:B},backend:a}),U=vE({inputs:{input:W},backend:a}),G=vE({inputs:{input:V},backend:a}),H=LF({inputs:{input:W},backend:a}),j=LF({inputs:{input:V},backend:a}),q=PF({inputs:[U,G],backend:a,attrs:{axis:0}}),K=PF({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}var FR={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=ka.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=JA({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=ER(i,!1,n),l=JA({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function RR(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||ka.inferDtype(a),o=ka.getArrayFromDType(i,ka.sizeFromShape(r));return function(e,t){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var DR={kernelName:Zt,backendName:"cpu",kernelFunc:RR};var MR={kernelName:Jt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=ka.getTypedArrayFromDType(r.dtype,ka.sizeFromShape(r.shape)),[i,o,l,u]=r.shape,p=a.data.get(r.dataId).values;for(let e=0;e<i;e++){let t=e*l*o*u;for(let e=0;e<o;e++){let n=e*(l*u);for(let e=0;e<l;e++){let r=e*u;for(let a=0;a<u;a++){let i=Math.round(l-e-1),o=t+n+r+a,d=p[o];if(i>=0&&i<l){d=p[t+n+i*u+a]}s[o]=d}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};var OR={kernelName:oa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:d,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=r,m=WF({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:p,dilations:d,dimRoundingMode:h}});if(i){let e=m;if("NCHW"===p&&1===i.shape.length&&1!==i.shape[0]){let e=JA({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=$E({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=$E({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(c){let e=m;if("NCHW"===p&&"prelu"===c&&1===o.shape.length&&1!==o.shape[0]){let e=JA({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=ZA(n,m,c,e,f),n.disposeIntermediateTensorInfo(e)}else m=ZA(n,m,c,o,f);n.disposeIntermediateTensorInfo(e)}return m}};var LR={kernelName:la,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:d,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=r,m=rR({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:p,dilations:d,dimRoundingMode:h}});if(i){let e=m;m=$E({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=ZA(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var zR={kernelName:rn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=ka.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,p,d]=Bf.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let h=s$(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,u,o,p,d,r.shape,s);return n.makeTensorInfo(l,r.dtype,h.values)}};var PR={kernelName:nn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;uE([a,s],"gatherV2");let l=ka.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,p=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];ka.assert(t<=p-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${p-1}]`))}let d=o;null==o&&(d=0);let h=ka.sizeFromShape(s.shape),c=Bf.segment_util.collectGatherOpShapeInfo(a,s,l,d),f=JA({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=JA({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,h/c.batchSize]}}),g=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize],y=n.bufferSync(m),b=i$(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,b.dtype,b.values)}};var BR={kernelName:ln,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=ka.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=JA({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=ER(i,!0,n),l=JA({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},WR=zE(pn,(e=>Number.isFinite(e)?1:0),"bool"),VR={kernelName:pn,backendName:"cpu",kernelFunc:WR},UR=zE(dn,(e=>Math.abs(e)===1/0?1:0),"bool"),GR={kernelName:dn,backendName:"cpu",kernelFunc:UR},HR=zE(hn,(e=>Number.isNaN(e)?1:0),"bool"),jR={kernelName:hn,backendName:"cpu",kernelFunc:HR};var qR={kernelName:gn,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=x$(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},KR=zE(bn,(e=>Math.log1p(e))),XR={kernelName:bn,backendName:"cpu",kernelFunc:KR},YR=mE(((e,t)=>e&&t)),ZR=TE(xn,YR,null,"bool"),JR={kernelName:xn,backendName:"cpu",kernelFunc:ZR},QR=zE(wn,(e=>e?0:1),"bool"),eD={kernelName:wn,backendName:"cpu",kernelFunc:QR},tD=mE(((e,t)=>e||t)),nD=TE(vn,tD,null,"bool"),rD={kernelName:vn,backendName:"cpu",kernelFunc:nD};var aD={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;uE(a,"LRN");let u=a.shape[3],p=u-1,d=n.data.get(a.dataId).values,h=ka.sizeFromShape(a.shape),c=new Float32Array(h);function f(e){let t=e%u,n=e-t+Math.max(0,t-s),r=e-t+Math.min(t+s,p),a=0;for(;n<=r;n++){let e=d[n];a+=e*e}return a}for(let e=0;e<h;e++){let t=f(e),n=d[e]*Math.pow(i+o*t,-l);c[e]=n}return n.makeTensorInfo(a.shape,a.dtype,c)}};var sD={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r;uE(i,"LRNGrad");let d=ka.sizeFromShape(i.shape),h=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(d),y=d;for(let e=0;e<y;e++){let t=e%h,n=e-t+Math.max(0,t-o),r=e-t+Math.min(h,t+o+1),a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=u*a+l;for(let t=n;t<r;t++){let n=-2*u*p*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-p)),n*=c[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function iD(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,p=ka.parseAxisParam(s,l),d=p,h=Bf.getAxesPermutation(d,u),c=o.data.get(a.dataId).values;if(null!=h){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[h[t]];c=P$(c,l,a.dtype,h,e),d=Bf.getInnerMostAxes(d.length,u),l=e}uE(a,"max"),Bf.assertAxesAreInnerMostDims("max",d,u);let[f,m]=Bf.computeOutAndReduceShapes(l,d),g=I$(c,ka.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype),b=f;return i&&(b=Bf.expandShapeToKeepDim(f,p)),{dataId:y,shape:b,dtype:a.dtype}}var oD={kernelName:Cn,backendName:"cpu",kernelFunc:iD};var lD={kernelName:$n,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;uE(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;ka.assert(Bf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,p=Bf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===p.filterWidth&&1===p.filterHeight&&ka.arraysEqual(p.inShape,p.outShape))u=xE({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=ka.computeStrides(a.shape),r=IF(e,a.shape,a.dtype,t,p,"max");u=n.makeTensorInfo(p.outShape,a.dtype,r.values)}return u}};var uD={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;uE(a,"maxPool3d");let p=Bf.computePool3DInfo(a.shape,s,i,1,o,l,u),d=NF(n.data.get(a.dataId).values,a.shape,a.dtype,ka.computeStrides(a.shape),p,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}};var pD={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;uE([a,s],"maxPool3DGrad");let p=Bf.computePool3DInfo(s.shape,i,o,1,l,u),d=function(e,t){let n=Pi(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,p=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-h,x=b;for(;x<0;)x+=i;let w=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){let u=r*a-c,h=u;for(;h<0;)h+=o;let v=Math.min(t.inHeight,p+u);for(let a=0;a<t.outWidth;++a){let c=a*s-f,k=c;for(;k<0;)k+=l;let I=Math.min(t.inWidth,d+c),S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<w;t+=i){let n=t-b;for(let r=h;r<v;r+=o){let a=r-u;for(let s=k;s<I;s+=l){let i=s-c,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*p*d+a*p+i)}}}n.set(N,m,y,r,a,g)}}}return n}(n.bufferSync(s),p),h=p.strideDepth,c=p.strideHeight,f=p.strideWidth,m=p.dilationDepth,g=p.dilationHeight,y=p.dilationWidth,b=p.effectiveFilterDepth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=b-1-p.padInfo.front,k=w-1-p.padInfo.left,I=x-1-p.padInfo.top,S=Pi(s.shape,"float32"),N=n.bufferSync(a);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inDepth;++n)for(let r=0;r<p.inHeight;++r)for(let a=0;a<p.inWidth;++a){let s=n-v,i=r-I,o=a-k,l=0;for(let n=0;n<b;n+=m){let r=(s+n)/h;if(!(r<0||r>=p.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){let s=(i+a)/c;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let i=0;i<w;i+=y){let u=(o+i)/f;if(u<0||u>=p.outWidth||Math.floor(u)!==u)continue;let h=b*x*w-1-d.get(e,r,s,u,t)===n*x*w+a*w+i?1:0;0!==h&&(l+=N.get(e,r,s,u,t)*h)}}}S.set(l,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};var dD={kernelName:An,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;uE([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:p,dimRoundingMode:d}=r,h=Bf.computePool2DInfo(o.shape,l,u,1,p,d),c=n.data.get(o.dataId).values,f=Pi(h.outShape,o.dtype,SF(c,o.shape,o.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterHeight,w=h.effectiveFilterWidth,v=w-1-h.padInfo.left,k=x-1-h.padInfo.top,I=Pi(o.shape,"float32"),S=n.data.get(a.dataId).values,N=Pi(a.shape,"float32",S);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){let a=n-k,s=r-v,i=0;for(let n=0;n<x;n+=y){let r=(a+n)/m;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let a=0;a<w;a+=b){let o=(s+a)/g;if(o<0||o>=h.outWidth||Math.floor(o)!==o)continue;let l=x*w-1-f.get(e,r,o,t)===n*w+a?1:0;0!==l&&(i+=N.get(e,r,o,t)*l)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};var hD={kernelName:Dn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;uE(r,"MaxPoolWithArgmax");let u=l.data.get(r.dataId).values,p=Bf.computePool2DInfo(r.shape,a,s,[1,1],i),[d,h]=function(e,t,n,r,a){let s=IF(e,0,n,ka.computeStrides(t),a,"max"),i=SF(e,t,n,a,!0,r);return[s.values,i.values]}(u,r.shape,r.dtype,o,p),c=l.write(d,p.outShape,r.dtype),f=l.write(h,p.outShape,r.dtype);return[{dataId:c,shape:p.outShape,dtype:r.dtype},{dataId:f,shape:p.outShape,dtype:"int32"}]}};var cD={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=ka.parseAxisParam(s,a.shape),l=Bf.computeOutAndReduceShapes(a.shape,o)[1],u=ka.sizeFromShape(l),p=[],d=n.makeTensorInfo([],"float32",new Float32Array([u]));p.push(d);let h=SE({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});p.push(h);let c=_R({inputs:{a:h,b:d},backend:n});p.push(c);let f=hR({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var fD={kernelName:On,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;uE(a,"min");let o=ka.parseAxisParam(s,a.shape),l=o,u=Bf.getAxesPermutation(l,a.shape.length),p=a;null!=u&&(p=B$({inputs:{x:a},backend:n,attrs:{perm:u}}),l=Bf.getInnerMostAxes(l.length,a.shape.length)),Bf.assertAxesAreInnerMostDims("min",l,p.shape.length);let[d,h]=Bf.computeOutAndReduceShapes(p.shape,l),c=ka.sizeFromShape(h),f=ka.makeZerosTypedArray(ka.sizeFromShape(d),p.dtype),m=n.data.get(p.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(d,p.dtype,f);if(i){let e=JA({inputs:{x:g},backend:n,attrs:{shape:Bf.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var mD={kernelName:zn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;uE(a,"mirrorPad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+a.shape[t])),p="reflect"===i?0:1,d=n.data.get(a.dataId).values,h=a.shape.length,c=ka.computeStrides(a.shape),f=ka.sizeFromShape(o),m=o.length,g=ka.computeStrides(o),y=ka.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=ka.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-p:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+p);t=t.map(((e,t)=>e-l[t]));let n=ka.locToIndex(t,h,c);y[e]=d[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},gD=mE(((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),yD=TE(Pn,gD),bD={kernelName:Pn,backendName:"cpu",kernelFunc:yD},xD=y(E());function wD(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=ka.parseAxisParam([o],a.shape),u=iD({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),p=Bf.expandShapeToKeepDim(u.shape,l),d=JA({inputs:{x:u},backend:n,attrs:{shape:p}}),h=FA({inputs:{a:a,b:d},backend:n}),c=KE({inputs:{x:h},backend:n}),f=hR({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=JA({inputs:{x:f},backend:n,attrs:{shape:p}}),g=_R({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var vD={kernelName:Fr,backendName:"cpu",kernelFunc:wD};var kD={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;uE(a,"multinomial");let l=o?a:wD({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],p=l.shape[1],d=n.data.get(l.dataId).values,h=[u,s],c=ka.makeZerosTypedArray(ka.sizeFromShape(h),"int32");for(let e=0;e<u;++e){let t=e*p,n=new Float32Array(p-1);n[0]=d[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+d[t+e];let r=xD.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){let t=r();c[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){c[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(h,"int32",c)}},ID=jm.nonMaxSuppressionV3Impl;var SD={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;uE(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:d}=ID(u,p,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},ND=jm.nonMaxSuppressionV4Impl;var TD={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;uE(a,"NonMaxSuppressionPadded");let p=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:c}=ND(p,d,i,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},_D=jm.nonMaxSuppressionV5Impl;var CD={kernelName:jn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;uE(a,"NonMaxSuppressionWithScore");let p=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=_D(p,d,h,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var ED={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r;uE(a,"oneHot");let u=ka.sizeFromShape(a.shape),p=new Float32Array(u*i);p.fill(l);let d=n.data.get(a.dataId).values;for(let e=0;e<u;++e)d[e]>=0&&d[e]<i&&(p[e*i+d[e]]=o);return n.makeTensorInfo([...a.shape,i],s,p)}};function $D(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){let e=vE({inputs:{input:r},backend:n}),t=$D({inputs:{x:e},backend:n}),a=LF({inputs:{input:r},backend:n}),s=$D({inputs:{x:a},backend:n}),i=gE({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return RR({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var AD={kernelName:na,backendName:"cpu",kernelFunc:$D};var FD={kernelName:qn,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){let t=vE({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=LF({inputs:{input:a},backend:r}),i=$D({inputs:{x:s},backend:r}),o=gE({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return RR({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function RD(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return SR({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ka.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ka.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=PF({inputs:t.map((e=>{let t=SR({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var DD={kernelName:Xn,backendName:"cpu",kernelFunc:RD};var MD={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;uE(a,"pad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(a.dataId).values,p=ka.sizeFromShape(a.shape),d=a.shape.length,h=ka.computeStrides(a.shape),c=ka.sizeFromShape(o),f=o.length,m=ka.computeStrides(o),g=ka.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let e=0;e<p;e++){let t=ka.indexToLoc(e,d,h).map(((e,t)=>e+l[t]));g[ka.locToIndex(t,f,m)]=u[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},OD=mE(((e,t)=>Math.pow(e,t))),LD=TE(Jn,OD),zD={kernelName:Jn,backendName:"cpu",kernelFunc:LD};var PD={kernelName:tr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map((e=>n.data.get(e.dataId).values)),u=a.map((e=>e.shape)),p=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,[h,c,f]=q$(l,u,p,s.shape,s.dtype,d,i.shape),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}};var BD={kernelName:nr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=X$(i,r.shape,r.dtype,o,a.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([p.length],r.dtype,p)]}};var WD={kernelName:rr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,h=o.map((e=>n.data.get(e.dataId).values)),c=o.map((e=>e.shape)),[f,m]=eA(u,a.shape,p,s.shape,s.dtype,d,i.shape,h,c,l);return n.makeTensorInfo(f,s.dtype,m)}};var VD={kernelName:ar,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=tA(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},UD=zE(ir,(e=>1/e)),GD={kernelName:ir,backendName:"cpu",kernelFunc:UD};var HD={kernelName:dr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;uE(a,"resizeBilinear");let l=ka.computeStrides(a.shape),[u,p]=o,[d,h,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(ka.sizeFromShape([d,u,p,f])),y=[s&&u>1?h-1:h,s&&p>1?c-1:c],b=[s&&u>1?u-1:u,s&&p>1?p-1:p],x=0,w=y[0]/b[0],v=y[1]/b[1];for(let e=0;e<d;e++)for(let t=0;t<u;t++){let n;n=i?w*(t+.5)-.5:w*t;let r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(h-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+s*l[1];for(let e=0;e<p;e++){let t;t=i?v*(e+.5)-.5:v*e;let n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(c-1,Math.ceil(t)),p=o+n*l[2],d=u+n*l[2],h=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){let t=m[p+e],n=m[d+e],s=t+(m[h+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([d,u,p,f],"float32",g)}};var jD={kernelName:hr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;uE([s,a],"resizeBilinearGrad");let o=ka.computeStrides(a.shape),[l,u,p,d]=a.shape,[,h,c]=s.shape,f=new Float32Array(l*u*p*d),m=[i&&h>1?u-1:u,i&&c>1?p-1:p],g=[i&&h>1?h-1:h,i&&c>1?c-1:c],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values,w=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<h;e++){let n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=t+r*o[1],i=t+a*o[1],l=n-r,h=1-l;for(let e=0;e<c;e++){let t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),p-1),a=t-n,u=1-a,c=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],v=h*u,k=h*a,I=l*u,S=l*a;for(let e=0;e<d;e++){let t=x[w++];f[c+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,p,u,d],"float32",f)}};var qD={kernelName:ur,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;uE(a,"resizeNearestNeighbor");let l=ka.computeStrides(a.shape),[u,p]=o,[d,h,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(d*u*p*f),y=[s&&u>1?h-1:h,s&&p>1?c-1:c],b=[s&&u>1?u-1:u,s&&p>1?p-1:p],x=y[0]/b[0],w=y[1]/b[1],v=0;for(let e=0;e<d;e++){let t=e*l[0];for(let e=0;e<u;e++){let n=i?x*(e+.5):x*e,r=Math.min(h-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));let a=t+r*l[1];for(let e=0;e<p;e++){let t=i?w*(e+.5):w*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let r=a+n*l[2];for(let e=0;e<f;e++){let t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([d,u,p,f],a.dtype,g)}};var KD={kernelName:pr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;uE([s,a],"resizeNearestNeighborGrad");let o=ka.computeStrides(a.shape),l=ka.computeStrides(s.shape),[u,p,d,h]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*p*d*h),g=n.data.get(s.dataId).values,y=[i&&c>1?p-1:p,i&&f>1?d-1:d],b=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<p;e++){let n=t+e*o[1],r=Math.floor(e*v),a=Math.floor(r-I/2);for(let r=0;r<d;r++){let s=n+r*o[2],u=Math.floor(r*k),y=Math.floor(u-S/2);for(let n=0;n<h;n++){let o=0;for(let s=0;s<I;s++){let u=s+a;if(u<0||u>=c)continue;let h=t+u*l[1],m=u*x;if(e===Math.min(p-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){let t=e+y;if(t<0||t>=f)continue;let a=h+t*l[2],s=t*w;r===Math.min(d-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}};var XD={kernelName:fr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;uE(a,"reverse");let i=a.shape.length,o=ka.parseAxisParam(s,a.shape);if(0===i)return xE({inputs:{x:a},backend:n});let l=new es(a.shape,a.dtype),u=n.bufferSync(a);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},YD={kernelName:sa,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=ka.getTypedArrayFromDType(r.dtype,ka.sizeFromShape(r.shape)),[u,p,d,h]=r.shape,[c,f]=Bf.getImageCenter(i,p,d),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){let t=e*d*p*h;for(let e=0;e<p;e++){let n=e*(d*h);for(let r=0;r<d;r++){let a=r*h;for(let i=0;i<h;i++){let o=[u,e,r,i],b=o[2],x=o[1],w=(b-c)*g-(x-f)*m,v=(b-c)*m+(x-f)*g;w=Math.round(w+c),v=Math.round(v+f);let k=s;if("number"!=typeof s&&(k=3===i?255:s[i]),w>=0&&w<d&&v>=0&&v<p){k=y[t+v*(d*h)+w*h+i]}l[t+n+a+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ZD=zE(mr,(e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),JD={kernelName:mr,backendName:"cpu",kernelFunc:ZD};var QD={kernelName:yr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:d}=Bf.calculateShapes(s,a,i),h=sA(n.bufferSync(a),n.bufferSync(s),i,d,u,l,o,p,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}};function eM(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function tM(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}var nM={kernelName:xr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=function(e,t,n,r,a,s){let i=ka.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let n=e.slice(o*r,(o+1)*r),l=o*a;for(let e=0;e<a;++e)i[l+e]="left"===s?eM(n,t[e+l]):tM(n,t[e+l])}return i}(n.data.get(a.dataId).values,n.data.get(s.dataId).values,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",o)}};var rM={kernelName:wr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;uE([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,p=cs(a.dtype,s.dtype),d=ka.makeZerosTypedArray(ka.sizeFromShape(a.shape),p),h=0,c=0===i||i>1||1===a.shape.length?1:ka.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<c;t++)1===o[e]?d[h++]=l[e]:d[h++]=u[e];return n.makeTensorInfo(a.shape,p,d)}},aM=Bf.SELU_SCALEALPHA,sM=Bf.SELU_SCALE,iM=zE(vr,(e=>e>=0?sM*e:aM*(Math.exp(e)-1))),oM={kernelName:vr,backendName:"cpu",kernelFunc:iM},lM=zE(Nr,(e=>e<0?-1:e>0?1:0)),uM={kernelName:Nr,backendName:"cpu",kernelFunc:lM},pM=zE(Ir,(e=>Math.sin(e))),dM={kernelName:Ir,backendName:"cpu",kernelFunc:pM},hM=zE(Sr,(e=>Math.sinh(e))),cM={kernelName:Sr,backendName:"cpu",kernelFunc:hM},fM=Math.log(1.1920928955078125e-7)+2,mM=zE(_r,(e=>{let t,n=e>-fM,r=e<fM,a=Math.exp(e);return t=r?a:n?e:Math.log(1+a),t})),gM={kernelName:_r,backendName:"cpu",kernelFunc:mM};var yM={kernelName:$r,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;uE([a],"spaceToBatchND");let o=ka.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=MD.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=Bf.getReshaped(u.shape,s,o,!1),d=Bf.getPermuted(p.length,s.length,!1),h=Bf.getReshapedPermuted(u.shape,s,o,!1),c=JA({inputs:{x:u},backend:n,attrs:{shape:p}}),f=B$({inputs:{x:c},backend:n,attrs:{perm:d}}),m=JA({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}};var bM={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values[0],[d,h,c,f,m]=hA(o,r.shape,r.dtype,l,a.dtype,u,p);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var xM={kernelName:Dr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,p,d]=cA(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(p,r.dtype,u),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};var wM={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=fA(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(p,r.dtype,u)}};var vM={kernelName:Or,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=fA(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(p,r.dtype,u)}};var kM={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=n,{outputShape:l}=a,{sliceRank:u,numUpdates:p,sliceSize:d,strides:h,outputSize:c}=Bf.calculateShapes(i,s,l),f=!1,m=r.bufferSync(s);switch(i.dtype){case"bool":t=sA(m,r.bufferSync(i),l,c,d,p,u,h,!!r.data.get(o.dataId).values[0],f);break;case"float32":case"int32":t=sA(m,r.bufferSync(i),l,c,d,p,u,h,r.data.get(o.dataId).values[0],f);break;case"string":t=sA(m,r.bufferSync(i),l,c,d,p,u,h,ka.decodeString(r.data.get(o.dataId).values[0]),f);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return r.makeTensorInfo(l,t.dtype,t.values)}};var IM={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ka.parseAxisParam(i,a.shape)[0],l=Bf.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),p=a.shape.slice();return l.map((e=>{let t=[...p];t[o]=e;let r=pA({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},SM={kernelName:Pr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;uE(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){let t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},NM=zE(ra,((e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),TM={kernelName:ra,backendName:"cpu",kernelFunc:NM};var _M={kernelName:Wr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:h}=r;uE(a,"stridedSlice");let c,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:w,strides:v}=ff.sliceInfo(a.shape,s,i,o,l,u,p,d,h);if(g)c=JA({inputs:{x:a},backend:n,attrs:{shape:m}});else if(y||b){ka.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));let e=ff.computeOutShape(x,w,v),t=pA({inputs:{x:a},backend:n,attrs:{begin:x,size:e}});c=JA({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=SA(f,n.bufferSync(a),v,x);c=n.makeTensorInfo(m,e.dtype,e.values)}return c}};var CM={kernelName:Vr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:p,dataSplits:d}=t,h=n.data.get(p.dataId).values,c=n.data.get(d.dataId).values,[f,m]=TA(h,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};var EM={kernelName:Ur,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,p,d]=CA(o,l,a),h=p.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",p),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};var $M={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=EA(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},AM=zE(jr,(e=>Math.tan(e))),FM={kernelName:jr,backendName:"cpu",kernelFunc:AM},RM=zE(qr,(e=>Math.tanh(e)));var DM={kernelName:br,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{tensor:r,indices:a,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:p}=Bf.calculateShapes(s,a,r.shape),d=n.bufferSync(a),h=n.bufferSync(s),c=n.bufferSync(r),f=sA(d,h,r.shape,p,l,o,i,u,c,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}};var MM={kernelName:Kr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;uE(a,"tile");let i=DA(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var OM={kernelName:Xr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;uE(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=LA(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};var LM={kernelName:Yr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[p,d,h,c]=a.shape,[f,m]=null!=u?u:[d,h],g=[p,f,m,c],y=ka.computeStrides(a.shape),b=y[0],x=y[1],w=y[2],v=ka.computeStrides(g),k=v[0],I=v[1],S=v[2],N=ka.getTypedArrayFromDType(a.dtype,ka.sizeFromShape(g));N.fill(l);let T=r.data.get(a.dataId).values,_=r.data.get(s.dataId).values;for(let e=0;e<p;++e){let t=1===s.shape[0]?_:_.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<c;++a){let s,u=t[6]*r+t[7]*n+1;if(0===u)continue;let p=(t[0]*r+t[1]*n+t[2])/u,c=(t[3]*r+t[4]*n+t[5])/u,f=zM(p,h,o),m=zM(c,d,o);switch(i){case"nearest":s=BM(T,d,h,b,x,w,e,m,f,a,l);break;case"bilinear":s=WM(T,d,h,b,x,w,e,m,f,a,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}N[e*k+n*I+r*S+a]=s}return r.makeTensorInfo(g,a.dtype,N)}return{dataId:r.write(N,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function zM(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return ka.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return ka.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return ka.clamp(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function PM(e,t,n,r,a,s,i,o,l,u,p){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:p}function BM(e,t,n,r,a,s,i,o,l,u,p){return PM(e,t,n,r,a,s,i,Math.round(o),Math.round(l),u,p)}function WM(e,t,n,r,a,s,i,o,l,u,p){let d=Math.floor(o),h=Math.floor(l),c=d+1,f=h+1;return(c-o)*((f-l)*PM(e,t,n,r,a,s,i,d,h,u,p)+(l-h)*PM(e,t,n,r,a,s,i,d,f,u,p))+(o-d)*((f-l)*PM(e,t,n,r,a,s,i,c,h,u,p)+(l-h)*PM(e,t,n,r,a,s,i,c,f,u,p))}var VM={kernelName:Jr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;uE(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=zA(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};var UM={kernelName:Qr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let p=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let h=new Array(o);for(let e=0;e<h.length;e++){p[s]=e;let t=pA({inputs:{x:a},backend:n,attrs:{begin:p,size:d}});h[e]=JA({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return h}};var GM={kernelName:ea,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;uE(a,"unsortedSegmentSum");let o=[],l=[],u=a.shape.length-s.shape.length,p=s;for(let e=0;e<u;++e){let t=SR({inputs:{input:p},backend:n,attrs:{dim:e+1}});p=t,l.push(t)}for(let e=0;e<i;++e){let t=ka.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=HE({inputs:{a:r,b:p},backend:n}),i=SE({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=F$({inputs:{a:i,b:a},backend:n}),d=hR({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(d),l.push(r),l.push(s),l.push(i),l.push(u),l.push(d)}let d=RD({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},HM=[nF,fE,aF,iF,AE,oF,lF,uF,pF,dF,cF,mF,yF,wF,kF,TF,_F,CF,EF,tF,$F,AF,FF,OE,RF,NE,VE,MF,yE,OF,BF,VF,UF,GF,HF,jF,qF,XF,ZF,JF,QF,eR,tR,nR,aR,sR,iR,oR,lR,uR,pR,dR,fR,WA,mR,jE,IR,XE,NR,JE,FR,DR,MR,t$,a$,OR,LR,zR,PR,u$,h$,wE,BR,zF,VR,GR,jR,UA,m$,b$,qR,k$,XR,JR,eD,rD,aD,sD,oD,T$,lD,uD,pD,dD,hD,cD,fD,E$,mD,bD,kD,R$,M$,SD,TD,CD,z$,ED,FD,DD,MD,zD,jA,U$,PD,BD,WD,VD,kE,CR,GD,KA,YA,QA,HD,jD,qD,KD,XD,YD,JD,aA,QD,nM,rM,oM,lA,uM,dM,cM,dA,vD,gM,yM,bM,xM,wM,vM,kM,IM,yA,SM,wA,IA,TM,_M,CM,EM,$M,RA,cR,FM,{kernelName:qr,backendName:"cpu",kernelFunc:RM},DM,MM,OM,LM,W$,VM,UM,GM,AD];for(let e of HM)ga(e);var jM={};g(jM,{assertNotComplex:()=>tL,bindCanvasToFramebuffer:()=>AO,bindColorTextureToFramebuffer:()=>FO,bindTextureToProgramUniformSampler:()=>$O,bindTextureUnit:()=>TO,bindVertexBufferToProgramAttribute:()=>NO,callAndCheck:()=>aO,canBeRepresented:()=>oO,createFragmentShader:()=>dO,createFramebuffer:()=>SO,createProgram:()=>gO,createStaticIndexBuffer:()=>wO,createStaticVertexBuffer:()=>xO,createTexture:()=>kO,createVertexShader:()=>pO,getBatchDim:()=>zO,getExtensionOrThrow:()=>uO,getFramebufferErrorMessage:()=>MO,getMaxTexturesInShader:()=>qO,getNumChannels:()=>vO,getProgramUniformLocation:()=>EO,getProgramUniformLocationOrThrow:()=>CO,getRowsCols:()=>PO,getShapeAs3D:()=>BO,getTextureShapeFromLogicalShape:()=>WO,getWebGLDisjointQueryTimerVersion:()=>KO,getWebGLErrorMessage:()=>lO,getWebGLMaxTextureSize:()=>GO,hasExtension:()=>XO,isCapableOfRenderingToFloatTexture:()=>ZO,isDownloadFloatTextureEnabled:()=>JO,isReshapeFree:()=>UO,isWebGLFenceEnabled:()=>eL,isWebGLVersionEnabled:()=>YO,linkProgram:()=>yO,logShaderSourceAndInfoLog:()=>mO,resetMaxTextureSize:()=>HO,resetMaxTexturesInShader:()=>jO,unbindColorTextureFromFramebuffer:()=>RO,unbindTextureUnit:()=>_O,validateFramebuffer:()=>DO,validateProgram:()=>bO,validateTextureSize:()=>IO});var qM,KM,XM,YM={},ZM={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function JM(e,t){YM[e]=t}function QM(e,t){if(!(e in YM)||null!=t){let n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?function(e){if(!Pe().getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete YM[e]}),!1),Pe().getBool("SOFTWARE_WEBGL_ENABLED")&&(ZM.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",ZM)||n.getContext("experimental-webgl",ZM):n.getContext("webgl2",ZM)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;YM[e]=n}let n=YM[e];return null==n||n.isContextLost()?(delete YM[e],QM(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),YM[e])}function eO(e,t){return[t,e]}function tO(e){let t=ka.sizeFromShape(e),n=Math.ceil(t/4);return ka.sizeToSquarishShape(n)}function nO(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function rO(e,t){let n,r,a,s,i,o,l,u,p,d,h=e;return 2===Pe().getNumber("WEBGL_VERSION")?(n=h.R32F,r=h.R16F,a=h.RGBA16F,s=h.RGBA32F,i=h.RED,l=4,u=1,p=h.HALF_FLOAT,d=h.FLOAT,o=h.RGBA8):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=h.RGBA,i=e.RGBA,l=4,u=4,p=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:p,textureTypeFloat:d}}function aO(e,t){let n=t();return Pe().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+lO(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(qM||(qM={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(KM||(KM={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(XM||(XM={}));var sO=5.96e-8,iO=65504;function oO(e){return!!(Pe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||sO<Math.abs(e)&&Math.abs(e)<iO)}function lO(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function uO(e,t){return OO(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function pO(e,t){let n=OO(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(aO(e,(()=>e.shaderSource(n,t))),aO(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function dO(e,t){let n=OO(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(aO(e,(()=>e.shaderSource(n,t))),aO(e,(()=>e.compileShader(n))),Pe().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw mO(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var hO,cO,fO=/ERROR: [0-9]+:([0-9]+):/g;function mO(e,t){let n=fO.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);let r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>ka.rightPad((t+1).toString(),s)+e)),o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),p=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${ka.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join("\n"))}function gO(e){return OO(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function yO(e,t){if(aO(e,(()=>e.linkProgram(t))),!Pe().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function bO(e,t){if(aO(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function xO(e,t){let n=OO(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return aO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),aO(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function wO(e,t){let n=OO(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return aO(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),aO(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function vO(){return 2===Pe().getNumber("WEBGL_VERSION")?1:4}function kO(e){return OO(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function IO(e,t){let n=Pe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}function SO(e){return OO(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function NO(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(aO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),aO(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),aO(e,(()=>e.enableVertexAttribArray(o))),!0)}function TO(e,t,n){LO(e,n),aO(e,(()=>e.activeTexture(e.TEXTURE0+n))),aO(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function _O(e,t){LO(e,t),aO(e,(()=>e.activeTexture(e.TEXTURE0+t))),aO(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function CO(e,t,n){return OO(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function EO(e,t,n){return e.getUniformLocation(t,n)}function $O(e,t,n,r){aO(e,(()=>TO(e,t,r))),aO(e,(()=>e.uniform1i(n,r)))}function AO(e){aO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),aO(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),aO(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function FO(e,t,n){aO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),aO(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function RO(e,t){aO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),aO(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function DO(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+MO(e,t))}function MO(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function OO(e,t,n){let r=aO(e,(()=>t()));if(null==r)throw new Error(n);return r}function LO(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function zO(e,t=2){return ka.sizeFromShape(e.slice(0,e.length-t))}function PO(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function BO(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[zO(e),...PO(e)]),t}function WO(e,t=!1){let n=Pe().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Pe().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&Pe().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?ka.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length&&(e=ka.squeezeShape(e).newShape);let a=ka.sizeFromShape(e),s=null;e.length<=1&&a<=n?s=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);let i=null!=s&&Math.max(...s)>r&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||i)if(t){let t=zO(e),n=2,r=2;e.length&&([n,r]=PO(e)),a=t*(n/2)*(r/2),s=ka.sizeToSquarishShape(a).map((e=>2*e))}else s=ka.sizeToSquarishShape(a);return s}function VO(e){return e%2==0}function UO(e,t){if(e=e.slice(-2),t=t.slice(-2),ka.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e[e.length-1],r=t[t.length-1];if(n===r||VO(n)&&VO(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&VO(e[0])&&VO(t[0])}function GO(e){if(null==hO){let t=QM(e);hO=t.getParameter(t.MAX_TEXTURE_SIZE)}return hO}function HO(){hO=null}function jO(){cO=null}function qO(e){if(null==cO){let t=QM(e);cO=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,cO)}function KO(e){if(0===e)return 0;let t,n=QM(e);return t=XO(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:XO(n,"EXT_disjoint_timer_query")?1:0,t}function XO(e,t){return null!=e.getExtension(t)}function YO(e){try{if(null!=QM(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function ZO(e){if(0===e)return!1;let t=QM(e);if(1===e){if(!XO(t,"OES_texture_float"))return!1}else if(!XO(t,"EXT_color_buffer_float"))return!1;return QO(t)}function JO(e){if(0===e)return!1;let t=QM(e);if(1!==e){if(XO(t,"EXT_color_buffer_float"))return QO(t);let e="EXT_color_buffer_half_float";if(XO(t,e)){let n=t.getExtension(e);return function(e,t){let n=rO(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}return!(!XO(t,"OES_texture_float")||!XO(t,"WEBGL_color_buffer_float"))&&QO(t)}function QO(e){let t=rO(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function eL(e){return 2===e&&null!=QM(e).fenceSync}function tL(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ka.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var nL=Pe();function rL(){let e,t,n,r,a,s,i,o,l,u;return 2===Pe().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=Pe().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function aL(e,t,n="index"){let r=ka.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function sL(e,t,n="index"){let r=ka.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / outShapeStrides[${a}]`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function iL(e,t,n="index"){let r=function(e,t){let n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${r[a]}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}function oL(e){let t=ka.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}nL.registerFlag("HAS_WEBGL",(()=>nL.getNumber("WEBGL_VERSION")>0)),nL.registerFlag("WEBGL_VERSION",(()=>YO(2)?2:YO(1)?1:0)),nL.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),nL.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===nL.get("WEBGL_VERSION"))),nL.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),nL.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),nL.registerFlag("WEBGL_PACK",(()=>nL.getBool("HAS_WEBGL"))),nL.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>nL.getBool("WEBGL_PACK"))),nL.registerFlag("WEBGL_PACK_CLIP",(()=>nL.getBool("WEBGL_PACK"))),nL.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>nL.getBool("WEBGL_PACK"))),nL.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>nL.getBool("WEBGL_PACK"))),nL.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>nL.getBool("WEBGL_PACK"))),nL.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>nL.getBool("WEBGL_PACK"))),nL.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>nL.getBool("WEBGL_PACK"))),nL.registerFlag("WEBGL_PACK_REDUCE",(()=>nL.getBool("WEBGL_PACK"))),nL.registerFlag("WEBGL_LAZILY_UNPACK",(()=>nL.getBool("WEBGL_PACK"))),nL.registerFlag("WEBGL_CONV_IM2COL",(()=>nL.getBool("WEBGL_PACK"))),nL.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>GO(nL.getNumber("WEBGL_VERSION")))),nL.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>qO(nL.getNumber("WEBGL_VERSION")))),nL.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{let e=nL.getNumber("WEBGL_VERSION");return 0===e?0:KO(e)})),nL.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>nL.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Es.isMobile())),nL.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>ZO(nL.getNumber("WEBGL_VERSION")))),nL.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!nL.getBool("WEBGL_FORCE_F16_TEXTURES")&&nL.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),nL.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>JO(nL.getNumber("WEBGL_VERSION")))),nL.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>eL(nL.getNumber("WEBGL_VERSION")))),nL.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>nL.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),nL.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),nL.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Es.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),nL.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),nL.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),nL.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),nL.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),nL.registerFlag("WEBGL_EXP_CONV",(()=>!1)),nL.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>nL.getBool("IS_TEST"))),nL.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),nL.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),nL.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),nL.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));var lL="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:uL}=Bf;function pL(e,t,n){let r=[];if(e.forEach((e=>{let t=ka.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=vL(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));let a,s,i=r.join("\n"),o=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?hL(e,r):dL(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?function(e,t){let n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=uL(e.shapeInfo.logicalShape,t.logicalShape),u=wL(o),p=o-i,d=["x","y","z","w","u","v"];n=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${d[e+p]} = 0;`)).join("\n");let h="";h=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+p]}`)).join(", ");let c="return outputValue;",f=1===ka.sizeFromShape(e.shapeInfo.logicalShape),m=1===ka.sizeFromShape(t.logicalShape);if(1!==i||f||m){if(f&&!m)c=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?c="return vec4(outputValue.x);":l.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${a}(${h});\n      ${c}\n    }\n  `}(e,t):function(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&ka.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,p=wL(l),d=uL(e.shapeInfo.logicalShape,t.logicalShape),h=l-o,c=["x","y","z","w","u","v"];u=0===o?"":l<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${c[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${c[t+h]}`)).join(", "),`\n    float ${a}() {\n      ${p} coords = getOutputCoords();\n      ${u}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),l=t.texShape,u=rL(),p=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u),d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${cL}\n    ${fL}\n    ${mL}\n  `}(u);return t.isPacked?(a=function(e,t,n){switch(e.length){case 0:return yL();case 1:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ka.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;let a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(a=function(e,t,n){switch(e.length){case 0:return yL();case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return ka.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${sL(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let r=aL(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${sL(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let r=aL(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){let n=aL(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){let n=aL(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(d+=gL),[d,p,s,i,a,o,n.userCode].join("\n")}function dL(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let i=bL(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${xL(e)}\n      }\n    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=bL(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&ka.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;let e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}let{newShape:i,keptDims:o}=ka.squeezeShape(n),l=i;if(l.length<n.length){let n=["row","col"];return`\n      ${dL(kL(e,l),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${IL(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${xL(e)}\n      }\n    `;let u=s[0],p=s[1],d=bL(r);return 1===p?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${d};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${u}, ${p}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=ka.squeezeShape(n),u=o;if(u.length<n.length){let n=["row","col","depth"];return`\n        ${dL(kL(e,u),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${IL(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${xL(e)}\n      }\n    `;let p=e.shapeInfo.texShape,d=p[0],h=p[1],c=e.shapeInfo.flatOffset;if(h===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${d}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(h===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;let f=bL(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${d}, ${h}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=ka.squeezeShape(n);if(l.length<n.length){let n=["row","col","depth","depth2"];return`\n      ${dL(kL(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${IL(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${xL(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],c=d[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&null==p)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(c===s&&null==p)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;let y=bL(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${c}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=ka.squeezeShape(t);if(l.length<t.length){let t=["row","col","depth","depth2","depth3"];return`\n      ${dL(kL(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${IL(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${xL(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],c=d[1];if(c===o&&null==p)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(c===a&&null==p)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let f=bL(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${h}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=ka.squeezeShape(t);if(a.length<t.length){let t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${dL(kL(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${IL(t,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,p=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${p}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${xL(e)}\n      }\n    `;let d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,c=h[0],f=h[1];if(f===p&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let m=bL(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${p} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function hL(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=rL();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=rL();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=rL();if(null!=s&&ka.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],p=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${p}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let r=[1,2],s=["b","row","col"];return`\n        ${hL(kL(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${IL(s,r)});\n        }\n      `}let o=rL();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;let l=i[0],u=i[1],p=Math.ceil(n[2]/2),d=p*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${d}, ${p}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=rL();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],p=l[1],d=Math.ceil(s[i-1]/2),h=d*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<i-1;e++)c=`int b${e}, `+c,h*=s[i-e-1],f=`b${e} * ${h} + `+f;return`\n    vec4 ${r}(${c}) {\n      int index = ${f};\n      int texR = index / ${p};\n      int texC = index - texR * ${p};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var cL="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",fL="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",mL="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",gL="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function yL(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function bL(e){return`offset${e}`}function xL(e){let t=e.name,n=ka.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function wL(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function vL(e,t,n){let{newShape:r,keptDims:a}=ka.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!ka.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function kL(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function IL(e,t){return t.map((t=>e[t])).join(", ")}function SL(e,t,n){let r,a,s,i=[],o=[],l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===Pe().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));let p=!1;for(let r of t.variableNames){let a={name:r,uniform:e.getUniformLocation(n,r,p),offset:e.getUniformLocation(n,`offset${r}`,p)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${r}Shape`,p),a.texShape=e.getUniformLocation(n,`${r}TexShape`,p)),i.push(a)}if(t.enableShapeUniforms&&(r=e.getUniformLocation(n,"outShape",p),s=e.getUniformLocation(n,"outShapeStrides",p),a=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms)for(let r of t.customUniforms)o.push(e.getUniformLocation(n,r.name,p));return{variablesLocations:i,customUniformLocations:o,infLoc:l,nanLoc:u,outShapeLocation:r,outShapeStridesLocation:s,outTexShapeLocation:a}}function NL(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{let r=e.logicalShape,a=t[n],s=a.shape;if(!ka.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!ka.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function TL(e){return Pe().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var _L=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=qM.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=rL();this.outputShape=e,this.enableShapeUniforms=TL(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?sL(["r","c","d"],e):aL(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}},CL=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=qM.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=rL();this.outputShape=e,this.enableShapeUniforms=TL(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?sL(["r","c","d"],e):aL(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}},EL=class{constructor(e){this.variableNames=["A"],this.outTexUsage=KM.DOWNLOAD;let t=rL();this.outputShape=e,this.userCode=`\n      ${lL}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}},$L=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=KM.DOWNLOAD;let t=rL();this.outputShape=e,this.userCode=`\n      ${lL}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}},AL={R:0,G:1,B:2,A:3},FL=class{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=rL();this.outputShape=e,this.enableShapeUniforms=TL(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let e=0;e<n.length;e++){let t=n[e];s+=`\n          if(offset == ${e}) {\n            result = values[${AL[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":oL(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${s}\n        }\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}},RL=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=rL();this.outputShape=e,this.enableShapeUniforms=TL(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){let s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":oL(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}},DL={};function ML(e){let t=rL();return pO(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function OL(e){return xO(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function LL(e){return wO(e,new Uint16Array([0,1,2,2,1,3]))}function zL(e,t,n,r,a,s){IO(t,n);let i=kO(e),o=e.TEXTURE_2D;return aO(e,(()=>e.bindTexture(o,i))),aO(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),aO(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),aO(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),aO(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Pe().getNumber("WEBGL_VERSION")?aO(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))):aO(e,(()=>e.texStorage2D(o,1,r,t,n))),aO(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function PL(e){return e.internalFormatFloat}function BL(e,t,n,r){let[a,s]=eO(t,n);return zL(e,a,s,PL(r),r.textureFormatFloat,e.FLOAT)}function WL(e){return e.internalFormatHalfFloat}function VL(e,t,n,r){let[a,s]=eO(t,n);return zL(e,a,s,WL(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function UL(e){return e.downloadTextureFormat}function GL(e,t,n,r){let[a,s]=eO(t,n);return zL(e,a,s,UL(r),e.RGBA,e.UNSIGNED_BYTE)}function HL(e){return e.internalFormatPackedFloat}function jL(e,t,n,r){let[a,s]=nO(t,n);return zL(e,a,s,HL(r),e.RGBA,e.FLOAT)}function qL(e){return e.internalFormatPackedHalfFloat}function KL(e,t,n,r){let[a,s]=nO(t,n);return zL(e,a,s,qL(r),e.RGBA,r.textureTypeHalfFloat)}function XL(e,t,n){return aO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),NO(e,t,"clipSpacePos",n,3,20,0)&&NO(e,t,"uv",n,2,20,12)}function YL(e,t,n,r,a,s){let i,o,l;aO(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),2===Pe().getNumber("WEBGL_VERSION")?aO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):aO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),aO(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function ZL(e,t,n){aO(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Pe().getNumber("WEBGL_VERSION")?aO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):aO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Pe().getNumber("WEBGL_VERSION")?aO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):aO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),aO(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function JL(e,t,n,r){let a=e.createBuffer();aO(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));let s=16*t*n;return aO(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),aO(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),aO(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function QL(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function ez(e,t,n,r){let[a,s]=eO(t,n),i=new Uint8Array(function(e,t){return e*t}(t*n,4));return aO(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function tz(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(function(e,t){let[n,r]=nO(e,t);return n*r*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function nz(e,t,n){let r=new Float32Array(t*n*4);return aO(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}g(DL,{bindVertexProgramAttributeStreams:()=>XL,createBufferFromOutputTexture:()=>JL,createFloat16MatrixTexture:()=>VL,createFloat16PackedMatrixTexture:()=>KL,createFloat32MatrixTexture:()=>BL,createIndexBuffer:()=>LL,createPackedMatrixTexture:()=>jL,createUnsignedBytesMatrixTexture:()=>GL,createVertexBuffer:()=>OL,createVertexShader:()=>ML,downloadByteEncodedFloatMatrixFromOutputTexture:()=>ez,downloadFloat32MatrixFromBuffer:()=>QL,downloadMatrixFromPackedOutputTexture:()=>nz,downloadPackedMatrixFromBuffer:()=>tz,getInternalFormatForFloat16MatrixTexture:()=>WL,getInternalFormatForFloat16PackedMatrixTexture:()=>qL,getInternalFormatForFloat32MatrixTexture:()=>PL,getInternalFormatForPackedMatrixTexture:()=>HL,getInternalFormatForUnsignedBytesMatrixTexture:()=>UL,uploadDenseMatrixToTexture:()=>YL,uploadPixelDataToTexture:()=>ZL});var rz=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=Pe().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,JM(t,e)):this.gl=QM(t),e=this.gl,2===Pe().getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>aO(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>aO(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>aO(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>aO(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>aO(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>aO(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>aO(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>aO(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Pe().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=uO(this.gl,e),XO(this.gl,t))this.textureHalfFloatExtension=uO(this.gl,t);else if(Pe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),XO(this.gl,r))this.colorBufferHalfFloatExtension=uO(this.gl,r);else if(Pe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",XO(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!XO(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=OL(this.gl),this.indexBuffer=LL(this.gl),this.framebuffer=SO(this.gl),this.textureConfig=rO(this.gl,this.textureHalfFloatExtension)}get debug(){return Pe().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;aO(e,(()=>e.finish())),aO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),aO(e,(()=>e.deleteFramebuffer(this.framebuffer))),aO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),aO(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),aO(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),BL(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),VL(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),GL(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),ZL(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),YL(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),KL(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),jL(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(RO(this.gl,this.framebuffer),this.outputTexture=null),aO(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>ez(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return tz(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return QL(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=JL(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Pe().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>nz(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=ML(t));let n=gO(t);aO(t,(()=>t.attachShader(n,this.vertexShader))),aO(t,(()=>t.attachShader(n,e))),yO(t,n);let r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&bO(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;aO(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),XL(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(aO(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&bO(this.gl,this.program),aO(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?CO(this.gl,e,t):EO(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),aO(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),$O(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=nO(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&bO(this.gl,this.program),DO(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}aO(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),aO(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=uO(this.gl,2===Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ka.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Pe().platform&&(n=Pe().platform.setTimeoutCustom.bind(Pe().platform)),ka.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),FO(this.gl,e,this.framebuffer),this.debug&&DO(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(FO(this.gl,this.outputTexture,this.framebuffer),this.debug&&DO(this.gl)):RO(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;FO(r,e,this.framebuffer),this.debug&&DO(r),this.outputTexture=e,aO(r,(()=>r.viewport(0,0,t,n))),aO(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),aO(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}};var{addImpl:az,bincountImpl:sz,bincountReduceImpl:iz,bitwiseAndImpl:oz,castImpl:lz,ceilImpl:uz,concatImpl:pz,equalImpl:dz,expImpl:hz,expm1Impl:cz,floorImpl:fz,gatherNdImpl:mz,gatherV2Impl:gz,greaterImpl:yz,greaterEqualImpl:bz,lessImpl:xz,lessEqualImpl:wz,linSpaceImpl:vz,logImpl:kz,maxImpl:Iz,maximumImpl:Sz,minimumImpl:Nz,multiplyImpl:Tz,negImpl:_z,notEqualImpl:Cz,prodImpl:Ez,raggedGatherImpl:$z,raggedRangeImpl:Az,raggedTensorToTensorImpl:Fz,rangeImpl:Rz,rsqrtImpl:Dz,scatterImpl:Mz,sigmoidImpl:Oz,simpleAbsImpl:Lz,sliceImpl:zz,sparseFillEmptyRowsImpl:Pz,sparseReshapeImpl:Bz,sparseSegmentReductionImpl:Wz,sqrtImpl:Vz,staticRegexReplaceImpl:Uz,stridedSliceImpl:Gz,stringNGramsImpl:Hz,stringSplitImpl:jz,stringToHashBucketFastImpl:qz,subImpl:Kz,tileImpl:Xz,topKImpl:Yz,transposeImpl:Zz,uniqueImpl:Jz}=hE;function Qz(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function eP(e,t){return 1===t?[e]:Qz(e,t)}var tP=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=TL(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let e=eP("rc",this.rank),t=wL(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}},nP=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=TL(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}this.userCode=`\n      ${function(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?iL(["r","c","d"],"inputShape"):aL(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":oL(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};var rP=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){let r=sP(t,n),a=iP(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s,i=aP(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[a].pop();return this.usedTextures[a].push(e),e}return r===XM.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===XM.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===XM.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===XM.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===XM.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=sP(n,r),s=iP(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=aP(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Pe().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(let e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function aP(e,t,n,r,a){let s,i=function(e,t){switch(e){case XM.PACKED_2X2_FLOAT32:return HL(t);case XM.PACKED_2X2_FLOAT16:return qL(t);case XM.UNPACKED_FLOAT32:return PL(t);case XM.UNPACKED_FLOAT16:return WL(t);case XM.PACKED_4X1_UNSIGNED_BYTE:return UL(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);if(a){let[t,n]=nO(e[0],e[1]);s=t*n}else{let[t,n]=eO(e[0],e[1]);s=t*n}let o=function(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return s*o}function sP(e,t){if(e===KM.UPLOAD)return XM.PACKED_2X2_FLOAT32;if(e===KM.RENDER||null==e)return function(e){return Pe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?XM.PACKED_2X2_FLOAT32:XM.UNPACKED_FLOAT32:e?XM.PACKED_2X2_FLOAT16:XM.UNPACKED_FLOAT16}(t);if(e===KM.DOWNLOAD||e===KM.PIXELS)return XM.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function iP(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var oP=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=TL(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},lP="if (isnan(x)) return x;",uP="return abs(x);",pP=lP+"\n  return (x < 0.0) ? 0.0 : x;\n",dP=lP+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",hP="return x;",cP=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=TL(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},fP=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=TL(this.outputShape.length);let t=e.length,n=eP("rc",t),r=wL(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}},mP=jm.whereImpl,gP={};var yP=Pe().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");var bP=class extends B{nextDataId(){return bP.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Pe().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof rz)t=e;else{let n=QM(Pe().getNumber("WEBGL_VERSION"),e);t=new rz(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let e=QM(Pe().getNumber("WEBGL_VERSION"));t=new rz(e),this.binaryCache=function(e){return e in gP||(gP[e]={}),gP[e]}(Pe().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new rP(this.gpgpu),this.numMBBeforeWarning=null==Pe().global.screen?1024:Pe().global.screen.height*Pe().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new P(this,Ki())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,s){let i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,a]},o.texShape=[r,a];let l=BO(t),u=new FL(l,!1,s),p=this.runWebGLProgram(u,[i],n,[[r,a]]);return p.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),p.dataId}write(e,t,n){if((Pe().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Pe().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:KM.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(Pe().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:KM.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new cP(i,hP):new oP(i,hP);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let l,u,p=null!=this.activeTimers;if(p&&(l=ka.now()),"complex64"===r){let e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);u=Bf.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return p&&(this.downloadWaitMs+=ka.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}let t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new cP(r,hP):new oP(r,hP);let n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Pe().getBool("DEBUG")&&!Pe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Pe().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,p=null;if("complex64"!==s&&Pe().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);p=this.gpgpu.createBufferFromTexture(t.texture.texture,...tO(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=Bf.mergeRealAndImagArrays(t,n)}else if(null==p)u=this.getValuesFromTexture(e);else{let e=ka.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(p,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=p){let e=this.gpgpu.gl;aO(e,(()=>e.deleteBuffer(p)))}let d=this.convertAndCacheOnCPU(e,u),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ki().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){let n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new cP(a,hP):new oP(a,hP);let r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),p=Ki().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:p},d.texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>ka.decodeString(e)));return Pi(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Pi(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!oO(n))throw Pe().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=ka.sizeFromShape(t);if(Pe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...tO(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}let s=Pe().getBool("WEBGL_PACK")&&!0===r,i=s?BO(t):t,o=s?new $L(i):new EL(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),p}timerAvailable(){return Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=ka.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=ka.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=ka.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ka.now(),endMs:null}}endTimer(e){return Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ka.now(),e)}async getQueryTime(e){if(Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=yP){return Pe().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&ka.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Bf.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return mP(e.shape,t)}packedUnaryOp(e,t,n){let r=new cP(e.shape,t),a=this.compileAndRun(r,[e],n);return Ki().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=Lz(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Pe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,uP,e.dtype);let t=new oP(e.shape,uP),n=this.compileAndRun(t,[e]);return Ki().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ka.isString(n[0])){let a=n.map((e=>ka.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Ki().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new fP(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new tP(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[zO(e.shape),...PO(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[zO(t),...PO(t)],s=new nP(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){let e=ka.sizeFromShape(a),n=t[0]*t[1]*4;ka.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}let i,o=BO(a);i=r?new CL(o):new _L(o);let l=[null!=t?t:tO(o)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,a=!1,s){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===qM.DENSE){let t=null!=s?s:tO(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===ka.sizeFromShape(i.shape))return o.values=ka.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ka.sizeFromShape(t.shape)<=Pe().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!UO(n.shape,t.shape)){let e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);let p,d={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{let a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=vL(e.packedInputs,t.shape,s),u="",p="",d="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=ka.computeStrides(o);d=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else p=`${o[0]>1}_${o[1]>1}`;let h=t.shape.length,c=2===o.length&&ka.arraysEqual(t.shape,s),f=1===ka.sizeFromShape(t.shape),m=Bf.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&h===n.shape.length&&ka.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${h}_${g}_${i?l:""}_${o.length}_${f}_${m}_${c}_${u}_${p}_${d}_${y}_${a}`}else{let e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+`${Pe().getNumber("WEBGL_VERSION")}`,s}(e,u,d),c=this.getAndSaveBinary(h,(()=>function(e,t,n,r){let a=n.map(((e,n)=>{let r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=pL(a,i,t),l=dO(e.gl,o),u=e.createProgram(l);return Pe().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},SL(e,t,u)))}(this.gpgpu,e,u,d))),f=null!=this.activeTimers;f&&(p=this.startTimer()),Pe().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(NL(t.inShapeInfos,n),NL([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Pe().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){let a=n[r],{uniform:s,offset:i,shape:o,texShape:l}=t.variablesLocations[r];if(o){let{uniformShape:n}=vL(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,a.texData.texShape[0],a.texData.texShape[1]),null!=s){if(a.isUniform){if(ka.sizeFromShape(a.shape)<2)e.gl.uniform1f(s,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}continue}null!=a.texData.slice&&null!=i&&e.gl.uniform1i(i,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,s,r)}}let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){let n=ka.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let n=0;n<t.program.customUniforms.length;++n){let r=t.program.customUniforms[n],s=t.customUniformLocations[n],i=a[n];if("float"===r.type)e.gl.uniform1fv(s,i);else if("vec2"===r.type)e.gl.uniform2fv(s,i);else if("vec3"===r.type)e.gl.uniform3fv(s,i);else if("vec4"===r.type)e.gl.uniform4fv(s,i);else if("int"===r.type)e.gl.uniform1iv(s,i);else if("ivec2"===r.type)e.gl.uniform2iv(s,i);else if("ivec3"===r.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(s,i)}}e.executeProgram()}(this.gpgpu,c,u,d,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)}));let m=Pe().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=ka.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Pe().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){let e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Pe().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Zi((()=>{if(!Pe().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Pe().getBool("DEBUG");Pe().set("DEBUG",!1);let t=this.abs(tu(1e-8)).dataSync()[0];if(Pe().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l,u=null!=this.activeTimers;u&&(l=ka.now());let p=t.texShape;if(null==p&&(p=WO(n,o),t.texShape=p),null!=a){let e,s=BO(n),i=p[1],d=p[0],h=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!h)&&([i,d]=nO(p[0],p[1])),e=o?new RL(s,h):new FL(s,h);let c=h?[d,i]:p,f=this.makeTensorInfo(c,r),m=this.texData.get(f.dataId);m.usage=h?KM.PIXELS:KM.UPLOAD,m.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,d,a);let g=[[d,i]],y=!0,b=this.runWebGLProgram(e,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Pe().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=ka.now()-l)}else{let e=this.acquireTexture(p,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*ka.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await zf(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(mO(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}=SL(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=s,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";let{texture:r,height:a,width:s,channels:i}=e,o=Ki().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=o.writeTexture(r,t,n,a,s,i);return Ki().makeTensorFromDataId(l,t,n,o)}};bP.nextDataId=0;var xP="4.7.0";function wP(){Pe().set("WEBGL_FORCE_F16_TEXTURES",!0)}Es.isBrowser()&&oo("webgl",(()=>new bP),2);var vP={forceHalfFloat:wP},kP="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",IP=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Bf.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=TL(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},SP="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n",NP=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Bf.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=TL(a);let s="";if(r)if(0===a||1===ka.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${wL(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=eP("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function TP(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var _P={kernelName:on,backendName:"webgl",kernelFunc:TP};function CP(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=TP({inputs:{x:r},backend:n}),l=TP({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var EP={kernelName:yt,backendName:"webgl",kernelFunc:CP},$P="return (a < 0.) ? b * a : a;",AP="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var FP={kernelName:cn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",ka.createScalarValue(s,"float32")),o=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new NP(AP,a.shape,i.shape):new IP($P,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},RP="return (a < 0.) ? b * a : a;",DP="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var MP={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new NP(DP,r.shape,a.shape):new IP(RP,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}},OP="if (isnan(x)) return x;";function LP({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let i,{x:o}=a,l=s,u=r||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=n){let e=l.texData.get(o.dataId),t=n(e.values,u);return l.makeTensorInfo(o.shape,u,t)}return i=Pe().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new cP(o.shape,t):new oP(o.shape,e),l.runWebGLProgram(i,[o],u)}}function zP({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,p=o;if(r&&"complex64"===l.dtype){let t=p.texData.get(l.dataId),n=p.texData.get(u.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{let[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new IP(e,l.shape,u.shape);return p.runWebGLProgram(i,[a,s],cs(n.dtype,r.dtype))})),s=CP({inputs:{real:r,imag:a},backend:p});return p.disposeIntermediateTensorInfo(r),p.disposeIntermediateTensorInfo(a),s}let d,h=s||cs(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||p.shouldExecuteOnCPU([l,u]))&&null!=a){let e=p.texData.get(l.dataId).values,t=p.texData.get(u.dataId).values,n="string"===l.dtype?Bf.fromUint8ToStringArray(e):e,r="string"===l.dtype?Bf.fromUint8ToStringArray(t):t,[s,i]=a(l.shape,u.shape,n,r,h),o=p.makeTensorInfo(i,h);return p.texData.get(o.dataId).values=s,o}return d=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new NP(t,l.shape,u.shape,n):new IP(e,l.shape,u.shape),p.runWebGLProgram(d,[l,u],h)}}function PP(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":pP;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":dP;if("prelu"===e)return t?DP:RP;if("leakyrelu"===e)return t?AP:$P;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var BP=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=TL(this.outputShape.length);let u=r?e[1]:e[2],p=Math.ceil(u/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${p}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${p}; i++) {\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},WP="return areal * breal - aimag * bimag;",VP="return areal * bimag + aimag * breal;",UP=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Bf.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},GP="return a * b;";function HP(e){let t,{inputs:n,backend:r}=e,{a:a,b:s}=n,i=Bf.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),n=new UP(WP,a.shape,s.shape),i=new UP(VP,a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=r.runWebGLProgram(n,o,"float32"),u=r.runWebGLProgram(i,o,"float32"),p=CP({inputs:{real:l,imag:u},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),p}if(r.shouldExecuteOnCPU([a,s])){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),[n,o]=Tz(a.shape,s.shape,e.values,t.values,i),l=r.makeTensorInfo(o,i);return r.texData.get(l.dataId).values=n,l}return t=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new NP(GP,a.shape,s.shape):new IP(GP,a.shape,s.shape),r.runWebGLProgram(t,[a,s],i)}var jP={kernelName:Wn,backendName:"webgl",kernelFunc:HP};function qP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=ka.sizeFromShape(a.shape),l=ka.inferFromImplicitShape(s,o),u=ka.sizeFromShape(l);ka.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));let p=i.texData.get(a.dataId);return!p.isPacked||UO(a.shape,l)||null!==p.texture&&UO(p.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){let r=[zO(e.shape),...PO(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[zO(t),...PO(t)],i=new nP(s,r),o=[r],l=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(a,l,i)}var KP={kernelName:lr,backendName:"webgl",kernelFunc:qP},XP=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${ka.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},YP=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),p=n%4,d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===p}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===p}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===p}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${l});\n      }\n    `}};function ZP(e,t,n,r){let a=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=Bf.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l,{inSize:u,windowSize:p,outSize:d}=a[i];o="mean"===n?0===i?new XP({windowSize:p,inSize:u,batchSize:e.shape[0],outSize:d},u):new XP({windowSize:p,inSize:u,batchSize:e.shape[0],outSize:d}):new YP({windowSize:p,inSize:u,batchSize:e.shape[0],outSize:d},n),l=s,s=r.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(l)}return s}var JP=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;let r=wL(this.rank),a=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}};var QP=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=wL(this.rank),a=Qz("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}};function eB(e,t,n){let r=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QP(e.shape,t):new JP(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function tB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){let a=t,s=e.shape.length,i=ka.parseAxisParam(a,e.shape),o=i,l=Bf.getAxesPermutation(o,s),u=null!=l,p=e;u&&(p=eB(e,l,r),o=Bf.getInnerMostAxes(o.length,s)),Bf.assertAxesAreInnerMostDims("sum",o,s);let[d,h]=Bf.computeOutAndReduceShapes(p.shape,o),c=d;n&&(c=Bf.expandShapeToKeepDim(d,i));let f=ka.sizeFromShape(h),m=qP({inputs:{x:p},attrs:{shape:[ka.sizeFromShape(e.shape)/f,f]},backend:r}),g=ZP(m,fs(e.dtype),"sum",r),y=qP({inputs:{x:g},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(p),y}(a,s,i,n)}var nB={kernelName:Er,backendName:"webgl",kernelFunc:tB};function rB(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{perm:i}=a,o=r,l=s.shape.length,u=new Array(l);for(let e=0;e<u.length;e++)u[e]=s.shape[i[e]];if(o.shouldExecuteOnCPU([s])){let e=o.texData.get(s.dataId).values,n=Zz(e,s.shape,s.dtype,i,u);t=o.makeTensorInfo(u,s.dtype),o.texData.get(t.dataId).values=n}else t=eB(s,i,o);return t}var aB={kernelName:Zr,backendName:"webgl",kernelFunc:rB};function sB({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,p=t.shape.length,d=n?e.shape[u-2]:e.shape[u-1],h=r?t.shape[p-1]:t.shape[p-2],c=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[p-2]:t.shape[p-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=ka.sizeFromShape(m),b=ka.sizeFromShape(g),x=Al.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);ka.assert(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));let w,v=n?[y,d,c]:[y,c,d],k=r?[b,f,h]:[b,h,f],I=qP({inputs:{x:e},backend:a,attrs:{shape:v}}),S=qP({inputs:{x:t},backend:a,attrs:{shape:k}}),N=[I,S],T=Math.max(y,b),_=n?I.shape[1]:I.shape[2],C=null!=s,E=null!=i,$="leakyrelu"===l,A=null!=l?PP(l,!0):null;if((1===c||1===f)&&_>1e3&&!1===(C||E||$||null!=A)){let e=I,t=S;n&&(e=rB({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=rB({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),N.push(t));let s=1===f,i=e;1!==f&&(i=qP({inputs:{x:e},backend:a,attrs:{shape:[T,_,1]}}),N.push(i));let o=1===f?2:1,l=t;s&&(l=qP({inputs:{x:t},backend:a,attrs:{shape:[T,1,_]}}),N.push(l));let u=HP({inputs:{a:i,b:l},backend:a});w=tB({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{let l=cs(e.dtype,t.dtype),u=new BP(v,k,[T,c,f],n,r,C,A,E,$),p=[I,S];if(null!=s&&p.push(s),E&&p.push(i),$){let e=a.makeTensorInfo([],"float32",ka.createScalarValue(o,"float32"));p.push(e),N.push(e)}w=a.runWebGLProgram(u,p,l)}let F=qP({inputs:{x:w},backend:a,attrs:{shape:x}});N.push(w);for(let e of N)a.disposeIntermediateTensorInfo(e);return F}var iB={kernelName:ia,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:d}=r;return sB({a:a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:p})}},oB="return abs(x);";var lB={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=r.texData.get(a.dataId),t=Lz(e.values);return r.makeTensorInfo(a.shape,a.dtype,t)}return t=Pe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new cP(a.shape,oB):new oP(a.shape,oB),r.runWebGLProgram(t,[a],a.dtype)}},uB=LP({opSnippet:lP+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),pB={kernelName:He,backendName:"webgl",kernelFunc:uB},dB=LP({opSnippet:lP+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),hB={kernelName:je,backendName:"webgl",kernelFunc:dB},cB="return a + b;",fB=zP({opSnippet:cB,packedOpSnippet:cB,supportsComplex:!0,cpuKernelImpl:az}),mB={kernelName:qe,backendName:"webgl",kernelFunc:fB},gB=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}},yB=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}};var bB={kernelName:Ke,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,a=n;if(1===a.length)return TP({inputs:{x:a[0]},backend:r});if(a.length>Pe().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}let s=a.map((e=>e.dtype)).reduce(((e,t)=>cs(e,t))),i=a.map((e=>e.shape)),o=Pe().getBool("WEBGL_PACK")?new yB(a[0].shape,i):new gB(a[0].shape,i);return r.runWebGLProgram(o,a,s)}};var xB={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=ka.parseAxisParam(s,a.shape),u=l,p=Bf.getAxesPermutation(u,o),d=a;null!=p&&(d=rB({inputs:{x:a},backend:n,attrs:{perm:p}}),u=Bf.getInnerMostAxes(u.length,o)),Bf.assertAxesAreInnerMostDims("all",u,o);let h,[c,f]=Bf.computeOutAndReduceShapes(d.shape,u),m=qP({inputs:{x:d},backend:n,attrs:{shape:[-1,ka.sizeFromShape(f)]}}),g=ZP(m,m.dtype,"all",n);if(i){h=qP({inputs:{x:g},backend:n,attrs:{shape:Bf.expandShapeToKeepDim(c,l)}})}else h=qP({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(d),h}};var wB={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=ka.parseAxisParam(s,a.shape),u=l,p=Bf.getAxesPermutation(u,o),d=a;null!=p&&(d=rB({inputs:{x:a},backend:n,attrs:{perm:p}}),u=Bf.getInnerMostAxes(u.length,o)),Bf.assertAxesAreInnerMostDims("any",u,o);let h,[c,f]=Bf.computeOutAndReduceShapes(d.shape,u),m=qP({inputs:{x:d},backend:n,attrs:{shape:[-1,ka.sizeFromShape(f)]}}),g=ZP(m,m.dtype,"any",n);if(i){h=qP({inputs:{x:g},backend:n,attrs:{shape:Bf.expandShapeToKeepDim(c,l)}})}else h=qP({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(d),h}},vB=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},kB=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ka.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i,o,l=this.outputShape,u=l.length,p=wL(u),d=eP("coords",u);if(1===s){o=u+1;let e=wL(o);i=`\n        ${e} sourceLocR = ${e}(${d.join()}, 0);\n        ++${d[u-1]};\n        ${e} sourceLocG = ${e}(${d.join()}, 0);\n        ++${d[u-2]};\n        ${e} sourceLocA = ${e}(${d.join()}, 0);\n        --${d[u-1]};\n        ${e} sourceLocB = ${e}(${d.join()}, 0);\n        --${d[u-2]};`}else o=u,i=`\n        ${p} sourceLocR = coords;\n        ++${d[u-1]};\n        ${p} sourceLocG = coords;\n        ++${d[u-2]};\n        ${p} sourceLocA = coords;\n        --${d[u-1]};\n        ${p} sourceLocB = coords;\n        --${d[u-2]};`;let h=["x","y","z","w","u","v"].slice(0,o),c="."+h[o-1],f=h.map((e=>"int "+e)),m=eP("sourceLocR",o-1).concat("inIdx.r"),g=eP("sourceLocG",o-1).concat("inIdx.g"),y=eP("sourceLocB",o-1).concat("inIdx.b"),b=eP("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${p} coords = getOutputCoords();\n        bool hasNextCol = ${d[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${d[u-2]} < ${l[u-2]-1};\n        ${i}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function IB(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);let i=Bf.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new vB(o,n,null==r),u=[t];null!=r&&u.push(r);let p=e.runWebGLProgram(l,u,"int32");if(1===p.shape[1])return p;let d=IB(e,t,n,p);return e.disposeIntermediateTensorInfo(p),d}function SB(e,t,n,r=null){let a=null!=r?r.shape:t.shape,s=a[a.length-1],i=Bf.computeOptimalWindowSize(s),o=new kB(a,i,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let r=SB(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function NB(e,t,n,r){let a=[n];if(Bf.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Pe().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],s=e.texData.get(t.dataId),i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));let[o,l]=Bf.computeOutAndReduceShapes(i.shape,a),u=ka.sizeFromShape(l),p=qP({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(p);let d=IB(e,p,r);n.push(d);let h=qP({inputs:{x:d},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return SB(e,t,r)}var TB={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=ka.parseAxisParam(s,a.shape),o=Bf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=rB({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Bf.getInnerMostAxes(i.length,l.shape.length)),Bf.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let p=NB(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};var _B={kernelName:Je,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=ka.parseAxisParam(s,a.shape),o=Bf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=rB({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Bf.getInnerMostAxes(i.length,l.shape.length)),Bf.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let p=NB(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},CB=LP({opSnippet:lP+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),EB={kernelName:Qe,backendName:"webgl",kernelFunc:CB},$B=LP({opSnippet:lP+"return log(x + sqrt(x * x + 1.0));"}),AB={kernelName:et,backendName:"webgl",kernelFunc:$B},FB=LP({opSnippet:lP+"\n  return atan(x);\n"}),RB={kernelName:tt,backendName:"webgl",kernelFunc:FB},DB=zP({opSnippet:kP+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+SP+"\n  return result;\n"}),MB={kernelName:rt,backendName:"webgl",kernelFunc:DB},OB=LP({opSnippet:lP+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),LB={kernelName:nt,backendName:"webgl",kernelFunc:OB},zB=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${p};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");let x=4*Math.floor(s/4),w=s%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${p};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}},PB=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,p=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,x="0.0";if(b||(x="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${p}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");let v=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${p}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${w});\n      }\n    `}};var BB={kernelName:at,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;tL(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;ka.assert(Bf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=Bf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ka.arraysEqual(u.inShape,u.outShape))return TP({inputs:{x:a},backend:n});let p=new zB(u,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}};var WB={kernelName:it,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,p=Bf.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),d=new PB(p,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}},VB=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,p=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${p});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},UB=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,c=p-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var GB={kernelName:ot,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:p}=r,d=Bf.computePool3DInfo(i.shape,o,l,[1,1,1],u,p),h=new UB(d);return n.runWebGLProgram(h,[a],i.dtype)}};var HB={kernelName:st,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;tL([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,p=Bf.computePool2DInfo(i.shape,o,l,1,u),d=new VB(p);return n.runWebGLProgram(d,[a],i.dtype)}};var jB={kernelName:lt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return sB({a:a,b:s,transposeA:i,transposeB:o,backend:n})}},qB=class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Bf.assertAndGetBroadcastShape(e,t),Bf.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(Bf.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(Bf.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}},KB=class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Bf.assertAndGetBroadcastShape(e,t),Bf.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(Bf.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(Bf.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}},XB={kernelName:tn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;ka.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ka.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ka.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[r,a,s],p=null;null!=i&&(p=i.shape,u.push(i));let d=null;null!=o&&(d=o.shape,u.push(o));let h=Pe().getBool("WEBGL_PACK_NORMALIZATION")?new KB(r.shape,a.shape,s.shape,p,d,l):new qB(r.shape,a.shape,s.shape,p,d,l);return t.runWebGLProgram(h,u,u[0].dtype)}},YB=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=wL(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return ZB.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);n=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${ZB[t]} = start[${t}] + coords.${ZB[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${n}\n        setOutput(getSource(${r}));\n      }\n    `}},ZB=["x","y","z","w","u","v"];var JB=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=wL(this.rank),n=eP("coords",this.rank),r=eP("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}};function QB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=ff.parseSliceParams(a,s,i);if(ff.assertParamsValid(a,o,l),0===ka.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.texData.get(a.dataId),t=zz(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}let{isPacked:u}=n.texData.get(a.dataId),p=ff.isSliceContinous(a.shape,o,l);if(u||!p){let e=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new JB(l):new YB(l),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=ff.computeFlatOffset(t,ka.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,n)}var eW={kernelName:kr,backendName:"webgl",kernelFunc:QB},tW={kernelName:ut,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;ka.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=Bf.getReshaped(a.shape,s,o),u=Bf.getPermuted(l.length,s.length),p=Bf.getReshapedPermuted(a.shape,s,o),d=Bf.getSliceBeginCoords(i,s.length),h=Bf.getSliceSize(p,i,s.length),c=[],f=qP({inputs:{x:a},backend:n,attrs:{shape:l}}),m=rB({inputs:{x:f},backend:n,attrs:{perm:u}}),g=qP({inputs:{x:m},backend:n,attrs:{shape:p}}),y=QB({inputs:{x:g},backend:n,attrs:{begin:d,size:h}});return c.push(f),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};var nW={kernelName:pt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=sz(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}};var rW={kernelName:dt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{a:a,b:s}=n,i=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=Pe().getNumber("WEBGL_VERSION");if(r.shouldExecuteOnCPU([a,s])||1===o){let e=r.texData.get(a.dataId).values,t=r.texData.get(s.dataId).values,[n,i]=oz(a.shape,s.shape,e,t,a.dtype),o=r.makeTensorInfo(i,a.dtype);return r.texData.get(o.dataId).values=n,o}return t=i?new NP("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,s.shape,!1):new IP("\n  return float(int(a.r) & int(b.r));\n",a.shape,s.shape),r.runWebGLProgram(t,[a,s],a.dtype)}};var aW={kernelName:ct,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=Bf.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},sW=zP({opSnippet:"return float(a != b);",cpuKernelImpl:Cz,dtype:"bool"}),iW={kernelName:Un,backendName:"webgl",kernelFunc:sW};function oW(e){let{inputs:t,backend:n}=e,{input:r}=t;return TP({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var lW={kernelName:sr,backendName:"webgl",kernelFunc:oW};var uW={kernelName:ft,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return TP({inputs:{x:s},backend:r});let t=Qu(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=CP({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){let t=oW({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!ka.hasEncodingLoss(s.dtype,i)){let e=TP({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([s])){let e=r.texData.get(s.dataId).values,[t,n,a]=lz(e,s.shape,s.dtype,i);return r.makeTensorInfo(t,n,a)}if("int32"===i)return function(e,t){let n=new oP(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){let e=r.makeTensorInfo([],"bool",ka.getTypedArrayFromDType("bool",1)),t=sW({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},pW="return ceil(x);",dW=LP({opSnippet:pW,packedOpSnippet:pW,cpuKernelImpl:uz}),hW={kernelName:mt,backendName:"webgl",kernelFunc:dW},cW=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}},fW=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}};var mW={kernelName:gt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a;t=Pe().getBool("WEBGL_PACK_CLIP")?new fW(s.shape):new cW(s.shape);let l=[[i],[o]];return r.runWebGLProgram(t,[s],s.dtype,l)}},gW=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}};function yW(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var bW={kernelName:bt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new gW(r.shape),i=[yW(r,a.complexTensorInfos.real),yW(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}},xW=class{constructor(e){this.outputShape=[],this.outputShape=Bf.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));let t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}},wW=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Bf.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=wL(r),s=eP("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));let o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];let l=i[t],u=i.slice(-2),p=i.join(),d=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${p}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){let t=o[e-1];d+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${vW(i,l,t)}),\n            vec2(${vW(u,l,t)}));\n        }`}let h=o.length,c=o[o.length-1];d+=`\n        return getChannel(\n          getT${h}(${vW(i,l,c)}),\n          vec2(${vW(u,l,c)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}};function vW(e,t,n){let r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function kW(e){let{inputs:t,backend:n}=e,{input:r}=t;return TP({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var IW={kernelName:un,backendName:"webgl",kernelFunc:kW};function SW(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map((e=>oW({inputs:{input:e},backend:n}))),a=e.map((e=>kW({inputs:{input:e},backend:n}))),s=SW(r,t,n),i=SW(a,t,n),o=CP({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){let a=e.map((e=>{let r=[-1,ka.sizeFromShape(e.shape.slice(t))];return qP({inputs:{x:e},backend:n,attrs:{shape:r}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Bf.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],l=pz(s,i,r,o),u=Bf.computeOutShape(e.map((e=>e.shape)),t),p=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}let s=e.filter((e=>ka.sizeFromShape(e.shape)>0)),i=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){let t=i?new oP(e[0].shape,hP):new cP(e[0].shape,hP);return n.runWebGLProgram(t,e,r)}let o=Pe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){let e=[];for(let r=0;r<s.length;r+=o){let a=s.slice(r,r+o);e.push(SW(a,t,n))}let r=SW(e,t,n);for(let t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){let e=new wW(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,r)}let{tensors2D:l,outShape:u}=function(e,t,n){let r=Bf.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>qP({inputs:{x:e},attrs:{shape:[-1,ka.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(s,t,n),p=new xW(l.map((e=>e.shape))),d=n.runWebGLProgram(p,l,r);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));let h=qP({inputs:{x:d},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(d),h}function NW(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ka.parseAxisParam(a,t[0].shape)[0],i=t.map((e=>e.shape));Bf.assertParamsConsistent(i,s);let o=Bf.computeOutShape(t.map((e=>e.shape)),s);if(0===ka.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter((e=>ka.sizeFromShape(e.shape)>0));return 1===l.length?TP({inputs:{x:l[0]},backend:n}):SW(l,s,n)}var TW={kernelName:xt,backendName:"webgl",kernelFunc:NW},_W=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,p=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1,x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");let v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}},CW=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.filterDepth,d=e.filterHeight,h=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${p}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},EW=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=TL(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,p=u,d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)d+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;d+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)d+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(p+1)/2;t++){let n=2*t;if(d+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<u&&(s%2==1?(d+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,d+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):d+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){let e=s%2==0?ka.nearestLargerEven(o):o;o%2==0&&s%2==1||o%2!=0&&s%2!=1?(d+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,d+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):d+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(s%2==1?(d+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(d+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(d+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(d+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(d+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(d+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let h="",c="";n&&(h=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,c="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${h}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${d}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${c}\n         setOutput(result);\n       }\n     `}},$W=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=TL(this.outputShape.length);let{dataFormat:n}=t,r=rL(),a="channelsLast"===n,s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}};function AW(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function FW({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u=e.shape,p=r.texData.get(e.dataId),d=n.inChannels,h=u[0]*u[1]*u[2],c=n.outChannels,f="channelsLast"===n.dataFormat,m=!1,g=[];if(null!=s){let e=AW(s.shape,f);null!=e&&(s=qP({inputs:{x:s},backend:r,attrs:{shape:e}}),g.push(s))}if(null!=a){let e=AW(a.shape,f);null!=e&&(a=qP({inputs:{x:a},backend:r,attrs:{shape:e}}),g.push(a))}if((1!==h&&1!==c||!(d>1e3))&&p.isPacked&&f&&null!=p.texture&&u[2]%2!=0&&ka.arraysEqual(p.shape.slice(-3),u.slice(-3))){let d=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,d,n.inChannels],dtype:e.dtype},c=p.shape;p.shape=p.shape.slice(),p.shape[p.shape.length-2]++,ka.assert(UO(p.shape,h.shape),(()=>`packed reshape ${p.shape} to ${h.shape} isn't free`));let f=qP({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(f);let y=sB({a:h,b:f,backend:r,transposeA:false,transposeB:m,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),b=r.texData.get(y.dataId);ka.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),p.shape=c,b.shape=n.outShape,l=TP({inputs:{x:y},backend:r}),l.shape=n.outShape,g.push(y)}else{let u=n.outHeight*n.outWidth,p=qP({inputs:{x:e},backend:r,attrs:{shape:f?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),d=qP({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=sB({a:f?p:d,b:f?d:p,transposeA:!f,transposeB:m,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});l=qP({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),g.push(p),g.push(d),g.push(h)}for(let e of g)r.disposeIntermediateTensorInfo(e);return l}function RW({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:p,outWidth:d,outHeight:h,dataFormat:c}=n,f="channelsLast"===c,m=l*u*p,g=h*d,y=[n.batchSize,m,g],b=[];if(null!=s){let e=AW(s.shape,f);null!=e&&(s=qP({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}if(null!=a){let e=AW(a.shape,f);null!=e&&(a=qP({inputs:{x:a},backend:r,attrs:{shape:e}}),b.push(a))}let x=qP({inputs:{x:t},backend:r,attrs:{shape:[1,m,ka.sizeFromShape(t.shape)/m]}});b.push(x);let w=new $W(y,n),v=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(w,[e],"float32",v),I=qP({inputs:{x:k},backend:r,attrs:{shape:y}});b.push(k),b.push(I);let S=null!=a,N=null!=s,T="leakyrelu"===o,_=o?PP(o,!0):null,C=new BP(f?I.shape:x.shape,f?x.shape:I.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,S,_,N,T),E=f?[I,x]:[x,I];if(a&&E.push(a),N&&E.push(s),T){let e=r.makeTensorInfo([],"float32",ka.createScalarValue(i,"float32"));E.push(e),b.push(e)}let $=r.runWebGLProgram(C,E,"float32"),A=qP({inputs:{x:$},backend:r,attrs:{shape:n.outShape}});b.push($);for(let e of b)r.disposeIntermediateTensorInfo(e);return A}var DW={kernelName:wt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:p,dimRoundingMode:d}=a,h=Bf.convertConv2DDataFormat(u),c=Bf.computeConv2DInfo(s.shape,i.shape,o,p,l,d,!1,h);if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(c.strideWidth<=2&&"channelsLast"===h&&Pe().getBool("WEBGL_EXP_CONV")){let e=new EW(c),n=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];t=r.runWebGLProgram(e,[s,i],"float32",n)}else if(Pe().getBool("WEBGL_CONV_IM2COL"))t=RW({x:s,filter:i,convInfo:c,backend:r});else{let e=new _W(c);t=r.runWebGLProgram(e,[s,i],"float32")}else t=FW({x:s,filter:i,convInfo:c,backend:r});let f=qP({inputs:{x:t},backend:r,attrs:{shape:c.outShape}});return r.disposeIntermediateTensorInfo(t),f}},MW=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},OW=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,p=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${p}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},LW=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},zW=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var PW={kernelName:vt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:p}=r,d=Bf.convertConv2DDataFormat(l),h=Bf.computeConv2DInfo(a.shape,p,i,1,o,u,!1,d),c=new MW(h);return n.runWebGLProgram(c,[a,s],"float32")}},BW=class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=TL(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}};var WW={kernelName:kt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=r,d=Bf.convertConv2DDataFormat(u),h=Bf.computeConv2DInfo(i,s.shape,o,1,l,p,!1,d);if(Pe().getBool("WEBGL_PACK")&&"channelsLast"===d){let e=[[h.strideHeight,h.strideWidth]],t=new BW(h);return n.runWebGLProgram(t,[a,s],"float32",e)}{let e=new OW(h);return n.runWebGLProgram(e,[a,s],"float32")}}};var VW={kernelName:It,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=Bf.computeConv3DInfo(a.shape,s.shape,i,l,o),p=new CW(u);return n.runWebGLProgram(p,[a,s],"float32")}};var UW={kernelName:St,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=Bf.computeConv3DInfo(a.shape,l,i,1,o),p=new LW(u);return n.runWebGLProgram(p,[a,s],"float32")}};var GW,HW={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=Bf.computeConv3DInfo(l,s.shape,o,1,i),p=new zW(u);return n.runWebGLProgram(p,[a,s],"float32")}},jW=LP({opSnippet:OP+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${SP}\n  return result;\n`}),qW={kernelName:Tt,backendName:"webgl",kernelFunc:jW},KW=LP({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),XW={kernelName:_t,backendName:"webgl",kernelFunc:KW},YW=class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[p,d]=n;this.outputShape=[u,p,d,l];let h="bilinear"===r?1:0,[c,f]=[i-1+".0",o-1+".0"],[m,g,y]=p>1?[""+(i-1)/(p-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,w]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}},ZW={kernelName:$t,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,p=new YW(a.shape,s.shape,o,l,u);return n.runWebGLProgram(p,[a,s,i],"float32")}};!function(e){e.Prod="*",e.Sum="+"}(GW||(GW={}));var JW=class{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===GW.Prod?"1.0":"0.0",i=n?s:`getX(${QW(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${wL(a)} coords = getOutputCoords();\n        int end = ${eV(a,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${eV(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${QW(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}};function QW(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function eV(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function tV(e,t,n,r,a,s){let i=t.shape.length,o=Bf.getAxesPermutation([r],i),l=t;null!=o&&(l=rB({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=Bf.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let p=l.shape[u],d=TP({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(p))-1;t++){let r=new JW(e,l.shape,!1,s),a=[[t]],i=d;d=n.runWebGLProgram(r,[d],d.dtype,a),n.disposeIntermediateTensorInfo(i)}if(a){let t=new JW(e,l.shape,a,s),r=d;d=n.runWebGLProgram(t,[d],d.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){let e=rB({inputs:{x:d},backend:n,attrs:{perm:Bf.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(l),e}return d}var nV={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return tV(GW.Prod,a,n,s,i,o)}};var rV={kernelName:Et,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return tV(GW.Sum,a,n,s,i,o)}};var aV={kernelName:At,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=sz(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=iz(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},sV=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};var iV={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,p=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),d=new sV("NHWC"===i?[o,l,u,p]:[o,p,l,u],s,i);return n.runWebGLProgram(d,[a],a.dtype)}},oV=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=TL(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let p=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${p}\n        ${u}\n        setOutput(result);\n      }\n    `}},lV=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=TL(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,p=e.filterWidth,d=p,h="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<p;e++)h+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;h+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<p;e++)h+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;h+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(d+1)/2;e++){let t=2*e;if(h+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<p&&(i%2==1?(h+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,h+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):h+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<p)){let e=i%2==0?ka.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(h+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,h+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):h+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<p&&(i%2==1?(h+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<p&&(h+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(h+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<p&&(h+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<p&&(h+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<p&&(h+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}h+="\n    }\n  ",h+="\n      }\n    ";let c="",f="";n&&(c=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${h}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}};var uV={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,p=l;null==p&&(p=[1,1]),ka.assert(Bf.eitherStridesOrDilationsAreOne(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));let d,h=Bf.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!0);d=Pe().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new lV(h):new oV(h);let c=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[a,s],"float32",c)}},pV=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},dV=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var hV={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:p}=r,d=Bf.computeConv2DInfo(a.shape,p,i,o,l,u,!0),h=new pV(d);return n.runWebGLProgram(h,[a,s],"float32")}};var cV={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:p}=r,d=Bf.computeConv2DInfo(p,s.shape,i,o,l,u,!0),h=new dV(d);return n.runWebGLProgram(h,[a,s],"float32")}},fV=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}};var mV={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=ka.sizeFromShape(r.shape),i=qP({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new fV(s),l=n.runWebGLProgram(o,[i],i.dtype),u=qP({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}},gV=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:p,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}};var yV={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=a,p=Bf.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),d=new gV(p);t=r.runWebGLProgram(d,[s,i],"float32");let h=qP({inputs:{x:t},backend:r,attrs:{shape:p.outShape}});return r.disposeIntermediateTensorInfo(t),h}};var bV={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=Bf.decodeEinsumEquation(a,s.length);Bf.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:p}=Bf.getEinsumComputePath(o,l),d=p.length,h=null,c=i.length,f=[];for(let e=0;e<d;++e){for(let t of p[e]){let e,{permutationIndices:r,expandDims:a}=Bf.getEinsumPermutation(c,l[t]);Bf.isIdentityPermutation(r)?e=s[t]:(e=rB({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);ka.arraysEqual(e.shape,i)||(e=qP({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===h?h=e:(h=HP({inputs:{a:e,b:h},backend:n}),f.push(h))}e<d-1&&(u[e]>=0&&(h=tB({inputs:{x:h},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(h)),c--)}for(let e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},xV=LP({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),wV={kernelName:Ut,backendName:"webgl",kernelFunc:xV},vV={kernelName:Gt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new NP("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new IP("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},kV=zP({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:dz}),IV={kernelName:jt,backendName:"webgl",kernelFunc:kV},SV=LP({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Bf.ERF_P};\n  float a1 = ${Bf.ERF_A1};\n  float a2 = ${Bf.ERF_A2};\n  float a3 = ${Bf.ERF_A3};\n  float a4 = ${Bf.ERF_A4};\n  float a5 = ${Bf.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),NV={kernelName:Ht,backendName:"webgl",kernelFunc:SV},TV=LP({opSnippet:OP+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:hz,dtype:"float32"}),_V={kernelName:qt,backendName:"webgl",kernelFunc:TV};function CV(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(ka.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),qP({inputs:{x:s},backend:r,attrs:{shape:o}})}var EV={kernelName:Kt,backendName:"webgl",kernelFunc:CV},$V="return exp(x) - 1.0;",AV=LP({opSnippet:$V,packedOpSnippet:$V,cpuKernelImpl:cz}),FV={kernelName:Xt,backendName:"webgl",kernelFunc:AV},RV=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a,s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function DV(e,t,n){let r=n.texData.get(e.dataId),a=ka.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=qP({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,l=new RV("real",o,t),u=new RV("imag",o,t),p=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],d=n.runWebGLProgram(l,p,"float32"),h=n.runWebGLProgram(u,p,"float32"),c=CP({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);let f=qP({inputs:{x:c},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),f}var MV={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return DV(r,!1,n)}},OV=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}};function LV(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||ka.inferDtype(a),"string"===s){let e=ka.getArrayFromDType(s,ka.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new OV(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var zV,PV={kernelName:Zt,backendName:"webgl",kernelFunc:LV},BV=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},WV={kernelName:Jt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new BV(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},VV="return floor(x);",UV=LP({opSnippet:VV,packedOpSnippet:VV,cpuKernelImpl:fz}),GV={kernelName:Qt,backendName:"webgl",kernelFunc:UV},HV=zP({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),jV={kernelName:en,backendName:"webgl",kernelFunc:HV},qV=class{constructor(e){this.variableNames=["A"];let t=rL(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}},KV=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=rL(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}},XV={kernelName:aa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[u,l],d=[u,l,s];if(o||i){let e=Pe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==zV||e!==YV)&&(YV=e,zV=document.createElement("canvas").getContext("2d",{willReadFrequently:YV})),zV.canvas.width=l,zV.canvas.height=u,zV.drawImage(a,0,0,l,u),a=zV.canvas}let h=n.makeTensorInfo(p,"int32");n.texData.get(h.dataId).usage=KM.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),a);let c=Pe().getBool("WEBGL_PACK")?new KV(d):new qV(d),f=n.runWebGLProgram(c,[h],"int32");return n.disposeData(h.dataId),f}},YV=Pe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");var ZV={kernelName:oa,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:p,dataFormat:d,dilations:h,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=a,g=Bf.convertConv2DDataFormat(d),y=Bf.computeConv2DInfo(s.shape,i.shape,u,h,p,c,!1,g),b=[],x=null!=o,w=null!=l,v="leakyrelu"===f,k=()=>{let e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=qP({inputs:{x:e},backend:r,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(o,d)),w&&e.push(t(l,d)),v){let t=r.makeTensorInfo([],"float32",ka.createScalarValue(m,"float32"));e.push(t),b.push(t)}return e};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&Pe().getBool("WEBGL_EXP_CONV")){let e=f?PP(f,!0):null,n=new EW(y,x,e,w,v),a=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],s=k();t=r.runWebGLProgram(n,s,"float32",a)}else if(Pe().getBool("WEBGL_CONV_IM2COL"))t=RW({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=f?PP(f,!1):null,n=new _W(y,x,e,w,v),a=k();t=r.runWebGLProgram(n,a,"float32")}else t=FW({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let I=qP({inputs:{x:t},backend:r,attrs:{shape:y.outShape}});return b.push(t),b.forEach((e=>r.disposeIntermediateTensorInfo(e))),I}};var JV={kernelName:la,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:c}=r,f=[],m=p;null==m&&(m=[1,1]),ka.assert(Bf.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));let g,y=Bf.computeConv2DInfo(a.shape,s.shape,l,m,u,d,!0),b=Pe().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=h?PP(h,b):null,w=[a,s],v=null!=i,k=null!=o,I="leakyrelu"===h;if(v&&w.push(i),k&&w.push(o),I){let e=n.makeTensorInfo([],"float32",ka.createScalarValue(c,"float32"));w.push(e),f.push(e)}g=b?new lV(y,v,x,k,I):new oV(y,v,x,k,I);let S=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],N=n.runWebGLProgram(g,w,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}},QV=class{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;let a=wL(n.length),s="\n    int index;";for(let e=0;e<this.sliceDim;e++)s+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}};var eU={kernelName:rn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=ka.sizeFromShape(r.shape),[l,u,p,d]=Bf.prepareAndValidate(r,a),h=qP({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=qP({inputs:{x:r},backend:n,attrs:{shape:[ka.sizeFromShape(r.shape)/p,p]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=n.readSync(a.dataId),t=n.bufferSync(r),s=mz(e,t,r.dtype,u,i,p,d,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}let f=new QV(i,d,[u,p],r.shape),m=n.runWebGLProgram(f,[c,h],c.dtype),g=qP({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}},tU=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=wL(this.rank),r=function(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}};function nU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=ka.parseAxisParam(i,a.shape)[0];if(Pe().get("DEBUG")){let e=n.readSync(s.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){let r=e[n];ka.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}let u=Bf.segment_util.collectGatherOpShapeInfo(a,s,l,o),p=ka.sizeFromShape(s.shape),d=[],h=qP({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=qP({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,p/u.batchSize]}});d.push(h),d.push(c);let f=[u.batchSize,u.outerSize,p/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=n.bufferSync(c),t=n.bufferSync(h),r=gz(t,e,f);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}let m=new tU(h.shape,f),g=n.runWebGLProgram(m,[h,c],h.dtype);d.push(g);let y=qP({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}var rU={kernelName:nn,backendName:"webgl",kernelFunc:nU},aU=zP({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:yz,dtype:"bool"}),sU={kernelName:an,backendName:"webgl",kernelFunc:aU},iU=zP({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:bz}),oU={kernelName:sn,backendName:"webgl",kernelFunc:iU};var lU={kernelName:ln,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return DV(r,!0,n)}},uU=LP({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),pU={kernelName:pn,backendName:"webgl",kernelFunc:uU},dU=LP({opSnippet:"return float(isinf(x));",dtype:"bool"}),hU={kernelName:dn,backendName:"webgl",kernelFunc:dU},cU=LP({opSnippet:"return float(isnan(x));",dtype:"bool"}),fU={kernelName:hn,backendName:"webgl",kernelFunc:cU},mU=zP({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:xz,dtype:"bool"}),gU={kernelName:fn,backendName:"webgl",kernelFunc:mU},yU=zP({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:wz,dtype:"bool"}),bU={kernelName:mn,backendName:"webgl",kernelFunc:yU};var xU={kernelName:gn,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=vz(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},wU=LP({opSnippet:OP+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:kz}),vU={kernelName:yn,backendName:"webgl",kernelFunc:wU},kU=LP({opSnippet:OP+"\n  return log(1.0 + x);\n"}),IU={kernelName:bn,backendName:"webgl",kernelFunc:kU},SU=zP({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),NU={kernelName:xn,backendName:"webgl",kernelFunc:SU},TU=LP({opSnippet:"return float(!(x >= 1.0));"}),_U={kernelName:wn,backendName:"webgl",kernelFunc:TU},CU=zP({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),EU={kernelName:vn,backendName:"webgl",kernelFunc:CU},$U=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}},AU=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}},FU={kernelName:Nn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=Pe().getBool("WEBGL_PACK_NORMALIZATION")?new AU(a.shape,s,i,o,l):new $U(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)}},RU=class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}},DU={kernelName:Tn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r,d=new RU(a.shape,o,l,u,p);return n.runWebGLProgram(d,[a,s,i],a.dtype)}};function MU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=ka.parseAxisParam(s,a.shape),u=l,p=Bf.getAxesPermutation(u,o),d=null!=p,h=n.shouldExecuteOnCPU([a]),c=a;if(d){if(h){let e=n.texData.get(c.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[p[e]];let r=Zz(e,a.shape,a.dtype,p,t);c=n.makeTensorInfo(t,a.dtype),n.texData.get(c.dataId).values=r}else c=eB(a,p,n);u=Bf.getInnerMostAxes(u.length,o)}Bf.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=Bf.computeOutAndReduceShapes(c.shape,u),y=m;if(i&&(y=Bf.expandShapeToKeepDim(m,l)),h){let e=n.texData.get(c.dataId).values,t=Iz(e,ka.sizeFromShape(g),y,a.dtype);f=n.makeTensorInfo(y,a.dtype),n.texData.get(f.dataId).values=t}else f=function(e,t,n,r){let a=ka.sizeFromShape(t),s=qP({inputs:{x:e},attrs:{shape:[ka.sizeFromShape(e.shape)/a,a]},backend:r}),i=ZP(s,e.dtype,"max",r),o=qP({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(c,g,y,n);return d&&n.disposeIntermediateTensorInfo(c),f}var OU={kernelName:Cn,backendName:"webgl",kernelFunc:MU},LU=zP({opSnippet:kP+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+SP+"\n  return result;\n",cpuKernelImpl:Sz}),zU={kernelName:En,backendName:"webgl",kernelFunc:LU};var PU={kernelName:$n,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;tL(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;ka.assert(Bf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=Bf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ka.arraysEqual(u.inShape,u.outShape))return TP({inputs:{x:a},backend:n});let p=new zB(u,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}};var BU={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,p=Bf.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),d=new PB(p,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}},WU=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},VU=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,p=o-1-e.padInfo.front,d=l-1-e.padInfo.top,h=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${c} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var UU={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:p}=r,d=Bf.computePool3DInfo(i.shape,o,l,[1,1,1],u,p),h=new PB(d,"max",!0),c=n.runWebGLProgram(h,[i],i.dtype),f=new VU(d),m=n.runWebGLProgram(f,[a,c],i.dtype);return n.disposeIntermediateTensorInfo(c),m}};var GU={kernelName:An,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;tL([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:p,dimRoundingMode:d}=r,h=Bf.computePool2DInfo(o.shape,l,u,1,p,d),c=new zB(h,"max",!0),f=n.runWebGLProgram(c,[o],o.dtype),m=new WU(h),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};var HU={kernelName:Dn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;ka.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));let u=[1,1];ka.assert(Bf.eitherStridesOrDilationsAreOne(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));let p=Bf.computePool2DInfo(r.shape,a,s,u,i),[d,h]=function(e,t,n,r){let a=new zB(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");return a=new zB(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,p,l);return[d,h]}};var jU={kernelName:Mn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=ka.parseAxisParam(s,r.shape),u=l,p=Bf.getAxesPermutation(u,o),d=null!=p,h=i.shouldExecuteOnCPU([r]),c=[],f=r;if(d){if(h){let e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[p[e]];let n=Zz(e,r.shape,r.dtype,p,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=eB(r,p,i);c.push(f),u=Bf.getInnerMostAxes(u.length,o)}Bf.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=Bf.computeOutAndReduceShapes(f.shape,u),y=m;a&&(y=Bf.expandShapeToKeepDim(m,l));let b=function(e,t,n,r){let a=ka.sizeFromShape(t),s=qP({inputs:{x:e},attrs:{shape:[ka.sizeFromShape(e.shape)/a,a]},backend:r}),i=ZP(s,"float32","mean",r),o=qP({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(let e of c)i.disposeIntermediateTensorInfo(e);return b}};var qU={kernelName:On,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=ka.parseAxisParam(s,a.shape),u=l,p=Bf.getAxesPermutation(u,o),d=a;null!=p&&(d=rB({inputs:{x:a},backend:n,attrs:{perm:p}}),u=Bf.getInnerMostAxes(u.length,a.shape.length)),Bf.assertAxesAreInnerMostDims("min",u,o);let h,[c,f]=Bf.computeOutAndReduceShapes(d.shape,u),m=qP({inputs:{x:d},backend:n,attrs:{shape:[-1,ka.sizeFromShape(f)]}}),g=ZP(m,m.dtype,"min",n);if(i){h=qP({inputs:{x:g},backend:n,attrs:{shape:Bf.expandShapeToKeepDim(c,l)}})}else h=qP({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(d),h}},KU=zP({opSnippet:kP+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+SP+"\n  return result;\n",cpuKernelImpl:Nz}),XU={kernelName:Ln,backendName:"webgl",kernelFunc:KU},YU=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=wL(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}},ZU=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=wL(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=eP("rc",r),l=eP("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,p=1===r?"source":`vec2(${l.slice(-2).join()})`,d="reflect"===n?0:1,h="";if(1===r){let e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${p});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${p});\n        }\n      `}else{let e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${p});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${p});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${p});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${p});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}},JU={kernelName:zn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZU(r.shape,a,s):new YU(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},QU=zP({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+SP+"\n  return result;\n"}),eG={kernelName:Pn,backendName:"webgl",kernelFunc:QU},tG=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}},nG=zP({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),rG={kernelName:Wt,backendName:"webgl",kernelFunc:nG},aG="return a - b;",sG=zP({opSnippet:aG,packedOpSnippet:aG,supportsComplex:!0,cpuKernelImpl:Kz}),iG={kernelName:Hr,backendName:"webgl",kernelFunc:sG};function oG(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=ka.parseAxisParam([s],a.shape),o=MU({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Bf.expandShapeToKeepDim(o.shape,i),u=qP({inputs:{x:o},backend:n,attrs:{shape:l}}),p=sG({inputs:{a:a,b:u},backend:n}),d=TV({inputs:{x:p},backend:n}),h=tB({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),c=qP({inputs:{x:h},backend:n,attrs:{shape:l}}),f=nG({inputs:{a:d,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),f}var lG={kernelName:Fr,backendName:"webgl",kernelFunc:oG};var uG={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:oG({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],p=l.shape[1],d=new tG(u,p,s),h=[[i]],c=n.runWebGLProgram(d,[l],"int32",h);return o||n.disposeIntermediateTensorInfo(l),c}},pG=lP+"\n  return -x;\n";var dG={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])){let e=r.texData.get(a.dataId),[t,n]=_z(e.values,a.shape,a.dtype);return r.makeTensorInfo(n,a.dtype,t)}return t=Pe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new cP(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new oP(a.shape,pG),r.runWebGLProgram(t,[a],a.dtype)}},hG=jm.nonMaxSuppressionV3Impl;var cG={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){Bf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),p=n.readSync(s.dataId),{selectedIndices:d}=hG(u,p,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},fG=jm.nonMaxSuppressionV4Impl;var mG={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){Bf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,p=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h,validOutputs:c}=fG(p,d,i,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},gG=jm.nonMaxSuppressionV5Impl;var yG={kernelName:jn,backendName:"webgl",kernelFunc:function(e){Bf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,p=n.readSync(a.dataId),d=n.readSync(s.dataId),h=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=gG(p,d,h,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},bG=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}},xG={kernelName:Kn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=ka.sizeFromShape(a.shape),p=new bG(u,i,o,l),d=qP({inputs:{x:a},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(p,[d],s);n.disposeIntermediateTensorInfo(d);let c=qP({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,i]}});return n.disposeIntermediateTensorInfo(h),c}};function wG(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=oW({inputs:{input:r},backend:n}),t=wG({inputs:{x:e},backend:n}),a=kW({inputs:{input:r},backend:n}),s=wG({inputs:{x:a},backend:n}),i=CP({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return LV({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var vG={kernelName:na,backendName:"webgl",kernelFunc:wG};var kG={kernelName:qn,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){let t=oW({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=kW({inputs:{input:a},backend:r}),i=wG({inputs:{x:s},backend:r}),o=CP({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return LV({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};var IG={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return CV({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ka.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ka.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=NW({inputs:t.map((e=>{let t=CV({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},SG=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=wL(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}},NG=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=wL(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=eP("rc",r),l=eP("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,p=1===r?"source":`vec2(${l.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let e=0,t=1===r?2:4;e<t;e++)c+=`\n        ${d[e]}\n        if (${h}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${p});\n        }\n      `;c+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}},TG=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===ka.sizeFromShape(a.shape)){return LV({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}})}let o=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new NG(a.shape,s,i):new SG(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},_G={kernelName:Yn,backendName:"webgl",kernelFunc:TG},CG=zP({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+SP+"\n  return result;\n"}),EG={kernelName:Jn,backendName:"webgl",kernelFunc:CG};var $G={kernelName:er,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],p=ka.parseAxisParam(i,s.shape),d=p,h=Bf.getAxesPermutation(d,l),c=s;if(null!=h&&(c=rB({inputs:{x:s},backend:r,attrs:{perm:h}}),d=Bf.getInnerMostAxes(d.length,l),u.push(c)),Bf.assertAxesAreInnerMostDims("prod",d,l),r.shouldExecuteOnCPU([c])){let e=r.texData.get(c.dataId).values,{outVals:n,outShape:a,outDtype:s}=Ez(c.shape,c.dtype,e,d);t=r.makeTensorInfo(a,s,n)}else{let[e,n]=Bf.computeOutAndReduceShapes(c.shape,d),a=ka.sizeFromShape(n),i=qP({inputs:{x:c},backend:r,attrs:{shape:[-1,a]}}),o=ZP(i,fs(s.dtype),"prod",r);t=qP({inputs:{x:o},backend:r,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(t);let e=Bf.expandShapeToKeepDim(t.shape,p);t=qP({inputs:{x:t},backend:r,attrs:{shape:e}})}return u.forEach((e=>r.disposeIntermediateTensorInfo(e))),t}};var AG={kernelName:tr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map((e=>n.readSync(e.dataId))),u=a.map((e=>e.shape)),p=n.readSync(s.dataId),d=n.readSync(i.dataId),[h,c,f]=$z(l,u,p,s.shape,s.dtype,d,i.shape,o),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}};var FG={kernelName:nr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=Az(i,r.shape,r.dtype,o,a.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([p.length],r.dtype,p)]}};var RG={kernelName:rr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(a.dataId),p=n.readSync(s.dataId),d=n.readSync(i.dataId),h=o.map((e=>n.readSync(e.dataId))),c=o.map((e=>e.shape)),[f,m]=Fz(u,a.shape,p,s.shape,s.dtype,d,i.shape,h,c,l);return n.makeTensorInfo(f,s.dtype,m)}},DG=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=Rz(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},MG={kernelName:ar,backendName:"webgl",kernelFunc:DG},OG=LP({opSnippet:"return 1.0 / x;"}),LG={kernelName:ir,backendName:"webgl",kernelFunc:OG},zG=LP({opSnippet:lP+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),PG={kernelName:or,backendName:"webgl",kernelFunc:zG},BG=LP({opSnippet:lP+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),WG={kernelName:cr,backendName:"webgl",kernelFunc:BG},VG=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,p=[r&&t>1?i-1:i,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${p[0]/d[0]},\n          ${p[1]/d[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}},UG=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,p=[r&&t>1?i-1:i,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${p[0]/d[0]},\n          ${p[1]/d[1]},\n          ${p[1]/d[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}};var GG={kernelName:dr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,p=Pe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new UG(a.shape,l,u,s,i):new VG(a.shape,l,u,s,i);return n.runWebGLProgram(p,[a],"float32")}},HG=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],p=o[1]/l[1],d=1/u,h=1/p,c=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${p});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};var jG={kernelName:hr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new HG(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},qG=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,p=[r&&t>1?i-1:i,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";u=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${p[0]/d[0]},\n          ${p[1]/d[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}},KG=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,p=[r&&t>1?i-1:i,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";u=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${p[0]/d[0]},\n          ${p[1]/d[1]},\n          ${p[1]/d[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}};var XG={kernelName:ur,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,p=Pe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new KG(a.shape,l,u,s,i):new qG(a.shape,l,u,s,i);return n.runWebGLProgram(p,[a],a.dtype)}},YG=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],p=o[1]/l[1],d=1/u,h=1/p,c=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${p});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};var ZG={kernelName:pr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new YG(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},JG=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=wL(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}},QG=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=eP("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=wL(n);var o;function l(n){let r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),l(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}};var eH={kernelName:fr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=ka.parseAxisParam(s,a.shape);if(0===i)return TP({inputs:{x:a},backend:n});let l=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QG(a.shape,o):new JG(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}},tH=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},nH={kernelName:sa,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new tH(r.shape,s),[u,p]=Bf.getImageCenter(i,r.shape[1],r.shape[2]),d=[[u,p,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,d)}},rH=LP({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),aH={kernelName:mr,backendName:"webgl",kernelFunc:rH},sH=LP({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Dz}),iH={kernelName:gr,backendName:"webgl",kernelFunc:sH},oH=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let l=wL(a.length),u=wL(s.length),p="";1===n?p="i":2===n&&(p="i, j");let d=`getIndices(${p})`,h="";1===r?h="i":2===r&&(h="i, coords[1]");let c=`getUpdates(${h})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${d});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${c};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}},lH=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let l=wL(a.length),u=wL(s.length),p="";1===n?p="i":2===n&&(p="i, j");let d=`getIndices(${p})`,h="";1===r?h="i":2===r&&(h="i, coords[1]");let c=`getUpdates(${h})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${d});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${y};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${c};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}};var uH={kernelName:yr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:d}=Bf.calculateShapes(s,a,i),h=[d/u,u];if(0===d)return n.makeTensorInfo(i,a.dtype);let c,f=qP({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),m=qP({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));c=Pe().getBool("WEBGL_PACK")?new lH(l,o,f.shape.length,m.shape.length,p,h):new oH(l,o,f.shape.length,m.shape.length,p,h);let y=n.runWebGLProgram(c,[m,f,g],m.dtype),b=qP({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(g),b}},pH=class{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,s=2===Pe().getNumber("WEBGL_VERSION")?"while (left < right) {":a,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${s}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}};var dH={kernelName:xr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new pH(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}},hH=class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}let s=wL(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}};var cH={kernelName:wr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new hH(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],cs(a.dtype,s.dtype))}},fH=LP({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Bf.SELU_SCALEALPHA};\n  float scale = ${Bf.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),mH={kernelName:vr,backendName:"webgl",kernelFunc:fH},gH=LP({opSnippet:OP+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Oz}),yH={kernelName:Tr,backendName:"webgl",kernelFunc:gH},bH=LP({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),xH={kernelName:Nr,backendName:"webgl",kernelFunc:bH},wH=LP({opSnippet:OP+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${SP}\n  return result;\n`}),vH={kernelName:Ir,backendName:"webgl",kernelFunc:wH},kH=LP({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),IH={kernelName:Sr,backendName:"webgl",kernelFunc:kH},SH=LP({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),NH={kernelName:_r,backendName:"webgl",kernelFunc:SH},TH={kernelName:$r,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;ka.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],p=TG({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=Bf.getReshaped(p.shape,s,o,!1),h=Bf.getPermuted(d.length,s.length,!1),c=Bf.getReshapedPermuted(p.shape,s,o,!1),f=qP({inputs:{x:p},backend:n,attrs:{shape:d}}),m=rB({inputs:{x:f},backend:n,attrs:{perm:h}}),g=qP({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(p),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};var _H={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),p=n.readSync(i.dataId)[0],[d,h,c,f,m]=Pz(o,r.shape,r.dtype,l,a.dtype,u,p);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var CH={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,p,d]=Bz(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(p,r.dtype,u),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};var EH={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=Wz(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(p,r.dtype,u)}};var $H={kernelName:Or,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=Wz(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(p,r.dtype,u)}};var AH={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:p,strides:d,outputSize:h}=Bf.calculateShapes(s,a,o),c=!1;if("string"===s.dtype){let e=n.bufferSync(a),t=n.bufferSync(s),r=ka.decodeString(n.readSync(i.dataId)[0]),f=Mz(e,t,o,h,p,u,l,d,r,c);return n.makeTensorInfo(o,f.dtype,f.values)}let f=new oH(u,l,a.shape.length,s.shape.length,d,[h,1],c),m=n.runWebGLProgram(f,[s,a,i],s.dtype),g=qP({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}};var FH={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ka.parseAxisParam(i,a.shape)[0],l=Bf.prepareSplitSize(a,s,o),u=a.shape.length,p=new Array(u).fill(0),d=a.shape.slice();return l.map((e=>{let t=[...d];t[o]=e;let r=QB({inputs:{x:a},backend:n,attrs:{begin:p,size:t}});return p[o]+=e,r}))}},RH="return sqrt(x);",DH=LP({opSnippet:RH,packedOpSnippet:RH,cpuKernelImpl:Vz}),MH={kernelName:Cr,backendName:"webgl",kernelFunc:DH},OH=LP({opSnippet:"return x * x;"}),LH={kernelName:Pr,backendName:"webgl",kernelFunc:OH},zH="return (a - b) * (a - b);",PH=zP({opSnippet:zH,packedOpSnippet:zH}),BH={kernelName:zr,backendName:"webgl",kernelFunc:PH};var WH={kernelName:Br,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");let s=n.readSync(a.dataId),i=Bf.fromUint8ToStringArray(s),o=Uz(i,"string",r);return n.makeTensorInfo(a.shape,"string",o)}};var VH={kernelName:ra,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=lP+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new oP(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}},UH=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=wL(n.length),s=wL(n.length),i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}};var GH={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:p,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:w,strides:v}=ff.sliceInfo(s.shape,i,o,l,u,p,d,h,c);if(g)t=qP({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||b){ka.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=ff.computeOutShape(x,w,v),n=QB({inputs:{x:s},backend:r,attrs:{begin:x,size:e}});t=qP({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeIntermediateTensorInfo(n)}else if(r.shouldExecuteOnCPU([s])){let e=r.readSync(s.dataId),n=Pi(s.shape,s.dtype,e),a=Gz(f,n,v,x);t=r.makeTensorInfo(m,s.dtype,a.values)}else{let e=new UH(x,v,f);t=r.runWebGLProgram(e,[s],s.dtype)}let k=qP({inputs:{x:t},backend:r,attrs:{shape:m}});return r.disposeIntermediateTensorInfo(t),k}};var HH={kernelName:Vr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:p,dataSplits:d}=t,h=n.readSync(p.dataId),c=n.readSync(d.dataId),[f,m]=Hz(h,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};var jH={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,p,d]=jz(o,l,a),h=p.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",p),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};var qH={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=qz(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},KH=LP({opSnippet:"return tan(x);"}),XH={kernelName:jr,backendName:"webgl",kernelFunc:KH},YH=LP({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),ZH={kernelName:qr,backendName:"webgl",kernelFunc:YH};var JH={kernelName:br,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=t,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:d}=Bf.calculateShapes(i,s,a.shape),h=[d/u,u];if(0===d)return n.makeTensorInfo(a.shape,s.dtype);let c=qP({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=qP({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=qP({inputs:{x:a},backend:n,attrs:{shape:h}}),g=new oH(l,o,c.shape.length,f.shape.length,p,h,!1,!0),y=n.runWebGLProgram(g,[f,c,m],m.dtype),b=qP({inputs:{x:y},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}},QH=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;let r=wL(this.rank),a=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}};function ej(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>ka.decodeString(e))):e,r=Pi(a.shape,a.dtype,t),i=Xz(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new QH(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var tj={kernelName:Kr,backendName:"webgl",kernelFunc:ej},nj=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}},rj=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function aj(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function sj(e){let t=1;for(;t<e;)t*=2;return t}var ij={kernelName:Xr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Pe().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Pe().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,p=u[u.length-1];if(n.shouldExecuteOnCPU([a])||p<o||s>l){let e=n.readSync(a.dataId),[t,r]=Yz(e,u,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===p)return[a,LV({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let d=n.texData.get(a.dataId),h=null!==d&&d.isPacked,c=h?n.unpackTensor(a):a,f=ka.sizeFromShape(u)/p,m=qP({inputs:{x:c},attrs:{shape:[f,p]},backend:n});h&&aj(n,c);let g=sj(s),y=sj(p),b=null,x=()=>null===b?[m,m]:[m,b],w=(e,t,r)=>{let a=x(),s=new nj(r),i=[[p],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),aj(n,o)};for(let e=1;e<g;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,y])}for(let e=y;e>g;e/=2){let t=x(),r=new rj([f,e/2]),a=[[p],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),aj(n,s);let i=g/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,b.shape)}let v=b;b=QB({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),aj(n,v);let k=nU({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});aj(n,m);let I=u.slice(0,-1);I.push(s),v=b,b=qP({inputs:{x:b},attrs:{shape:I},backend:n}),aj(n,v);let S=k;return k=qP({inputs:{x:k},attrs:{shape:I},backend:n}),aj(n,S),[k,b]}},oj=class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i,o="nearest"===n?1:2;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}};var lj={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[p,d,h,c]=a.shape,[f,m]=null!=u?u:[d,h],g=new oj(d,h,i,o,l,[p,f,m,c]);return n.runWebGLProgram(g,[a,s],"float32")}};var uj={kernelName:Jr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;tL(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=Jz(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};var pj={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),p=0;for(let e=0;e<o;e++)e!==s&&(u[p++]=i.shape[e]);let d=[],h=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){h[s]=e;let t=QB({inputs:{x:i},backend:n,attrs:{begin:h,size:c}}),r=qP({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,d.push(t)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},dj=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ",p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}};var hj,cj,fj,mj={kernelName:ea,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,p=Bf.getAxesPermutation([u],o),d=a;null!=p&&(d=rB({inputs:{x:a},backend:n,attrs:{perm:p}}),l.push(d),u=Bf.getInnerMostAxes(1,o)[0]);let h=Bf.segment_util.computeOutShape(d.shape,u,i),c=ka.sizeFromShape([d.shape[u]]),f=qP({inputs:{x:d},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=fs(a.dtype),g=(e,t,r,a,s)=>{let i=e.shape[0],o=e.shape[1],u=Bf.segment_util.segOpComputeOptimalWindowSize(o,s),p=new dj({windowSize:u,inSize:o,batchSize:i,numSegments:s},t),d=n.compileAndRun(p,[e,r],a);if(l.push(d),d.shape[1]===s)return d;let h=DG({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),c=ej({inputs:{x:h},backend:n,attrs:{reps:[o/u]}});return l.push(h),l.push(c),g(d,t,c,a,s)},y=qP({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:h}}),b=y;if(null!=p){l.push(y);let e=Bf.getUndoAxesPermutation(p);b=rB({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},gj=[iB,lB,pB,hB,mB,bB,xB,wB,TB,_B,EB,AB,RB,MB,LB,BB,WB,GB,HB,jB,XB,tW,nW,rW,aW,uW,hW,mW,EP,bW,TW,DW,PW,WW,VW,UW,HW,qW,XW,ZW,nV,rV,aV,iV,uV,hV,cV,mV,yV,bV,wV,vV,IV,NV,_V,EV,FV,MV,PV,WV,GV,jV,XV,ZV,JV,eU,rU,sU,oU,_P,lU,IW,pU,hU,fU,FP,gU,bU,xU,vU,IU,NU,_U,EU,FU,DU,OU,zU,PU,BU,UU,GU,HU,jU,qU,XU,JU,eG,uG,jP,dG,cG,mG,yG,iW,xG,kG,IG,_G,EG,MP,$G,AG,FG,RG,MG,lW,rG,LG,PG,WG,KP,GG,jG,XG,ZG,eH,nH,aH,iH,uH,dH,cH,mH,yH,xH,vH,IH,eW,lG,NH,TH,_H,CH,EH,$H,AH,FH,MH,LH,BH,WH,VH,GH,HH,jH,qH,iG,nB,XH,ZH,JH,tj,ij,lj,aB,uj,pj,mj,vG];for(let e of gj)ga(e);!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(hj||(hj={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(cj||(cj={}));var yj={kernelName:ia,backendName:"wasm",setupFunc:function(e){fj=e.wasm.cwrap(ia,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:d}=r,h=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=cj[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],b=u?s.shape[1]:s.shape[2],x=Al.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),w=n.makeOutput([...x,y,b],a.dtype),v=n.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return fj(h,k,a.shape.length,c,I,s.shape.length,l,u,g,f,m,d||0,v),w}};function bj(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){let{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===ka.sizeFromShape(i.shape)||n(s,hj[a.dtype],o),i}}}var xj=bj(Ge),wj=bj(He),vj=bj(je);function kj(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,p=Bf.assertAndGetBroadcastShape(s.shape,i.shape),d=t.makeOutput(p,u);if(0===ka.sizeFromShape(p))return d;let h=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(d.dataId).id;return r(o,h,s.shape.length,l,c,i.shape.length,hj[s.dtype],f),d}}}var Ij,Sj=kj(qe);var Nj={kernelName:Ke,backendName:"wasm",setupFunc:function(e){Ij=e.wasm.cwrap(Ke,null,["array","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===ka.sizeFromShape(r.shape))return r;let a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return Ij(s,a.length,hj[r.dtype],i),r}};function Tj(e){let{inputs:{x:t},backend:n}=e;if("string"===t.dtype)return Us(n.readSync(t.dataId),t.shape,t.dtype);let r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var _j,Cj={kernelName:on,backendName:"wasm",kernelFunc:Tj};function Ej(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm),i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);let o=function(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let e=Tj({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),p=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(u.dataId).id,h=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return _j(p,c,l.shape.length,hj[l.dtype],d,h,s.length),u}var $j,Aj={kernelName:Zr,backendName:"wasm",kernelFunc:Ej,setupFunc:function(e){_j=e.wasm.cwrap(Zr,null,["number","array","number","number","number","array","number"])}};function Fj(e,t,n){let r=e.shape,a=e.shape.length,s=ka.parseAxisParam(t,r),i=s,o=Bf.getAxesPermutation(i,a),l=null,u=!1;if(null!=o){let t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=Bf.getInnerMostAxes(i.length,a),l=Ej({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var Rj,Dj={kernelName:Xe,backendName:"wasm",setupFunc:function(e){$j=e.wasm.cwrap(Xe,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:d,inputWasTransposed:h}=Fj(i,a,t);if(h){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;Bf.assertAxesAreInnerMostDims("all",p,c);let[f,m]=Bf.computeOutAndReduceShapes(l.shape,p),g=ka.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==ka.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;$j(o,g,e)}if(h&&t.disposeData(u.dataId),s){let e=Bf.expandShapeToKeepDim(y.shape,d);y.shape=e}return y}};var Mj={kernelName:Ye,backendName:"wasm",setupFunc:function(e){Rj=e.wasm.cwrap(Ye,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:d,inputWasTransposed:h}=Fj(i,a,t);if(h){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;Bf.assertAxesAreInnerMostDims("any",p,c);let[f,m]=Bf.computeOutAndReduceShapes(l.shape,p),g=ka.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==ka.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;Rj(o,g,e)}if(h&&t.disposeData(u.dataId),s){let e=Bf.expandShapeToKeepDim(y.shape,d);y.shape=e}return y}};function Oj(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number","number","number","number"])},kernelFunc:function(e){let{backend:n,inputs:r,attrs:a}=e,{axis:s}=a,{x:i}=r,o=n.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:d,inputWasTransposed:h}=Fj(i,s,n);if(h){let e=n.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e)}let c=u.shape.slice(0,-1),f=n.makeOutput(c,"int32"),m=n.dataIdMap.get(f.dataId).id,g=ka.sizeFromShape(f.shape),y=u.shape[d[0]];return t(l,hj[u.dtype],g,y,m),h&&n.disposeData(p.dataId),f}}}var Lj,zj=Oj(Ze),Pj=Oj(Je),Bj=bj(Qe),Wj=bj(et),Vj=bj(tt),Uj=kj(rt),Gj=bj(nt);var Hj,jj={kernelName:at,backendName:"wasm",setupFunc:function(e){Lj=e.wasm.cwrap(at,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,p=Bf.computePool2DInfo(a.shape,i,o,1,l,u),d=p.filterHeight,h=p.filterWidth,c=p.padInfo.top,f=p.padInfo.right,m=p.padInfo.bottom,g=p.padInfo.left,y=p.strideHeight,b=p.strideWidth,x=p.inChannels;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(1!==p.dilationWidth||1!==p.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);let w=r.makeOutput(p.outShape,"float32"),v=r.dataIdMap.get(w.dataId).id;return Lj(s,a.shape[0],a.shape[1],a.shape[2],d,h,c,f,m,g,y,b,x,v),w}};var qj,Kj={kernelName:it,backendName:"wasm",setupFunc:function(e){Hj=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,p=Bf.computePool3DInfo(a.shape,s,i,1,o,l,u),d=n.makeOutput(p.outShape,a.dtype);return Hj(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),d}};var Xj,Yj={kernelName:ot,backendName:"wasm",setupFunc:function(e){qj=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=Bf.computePool3DInfo(s.shape,i,o,1,l,u),d=n.makeOutput(s.shape,s.dtype);return qj(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left,p.filterDepth,p.filterHeight,p.filterWidth),d}};var Zj={kernelName:st,backendName:"wasm",setupFunc:function(e){Xj=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l}=r,u=Bf.computePool2DInfo(s.shape,i,o,1,l),p=n.makeOutput(s.shape,s.dtype);return Xj(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left,u.filterHeight,u.filterWidth),p}};function Jj(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=ka.sizeFromShape(r.shape),i=ka.inferFromImplicitShape(a,s);return ka.assert(s===ka.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var Qj,eq={kernelName:lr,backendName:"wasm",kernelFunc:Jj};var tq={kernelName:lt,backendName:"wasm",setupFunc:function(e){Qj=e.wasm.cwrap(lt,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,p=i?a.shape[l-2]:a.shape[l-1],d=o?s.shape[u-1]:s.shape[u-2],h=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=ka.sizeFromShape(f),y=ka.sizeFromShape(m),b=Al.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,c]);ka.assert(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let x=o?[y,c,d]:[y,d,c],w=Jj({inputs:{x:a},backend:n,attrs:{shape:i?[g,p,h]:[g,h,p]}}),v=Jj({inputs:{x:s},backend:n,attrs:{shape:x}}),k=n.dataIdMap.get(w.dataId).id,I=n.dataIdMap.get(v.dataId).id,S=i?w.shape[2]:w.shape[1],N=o?v.shape[1]:v.shape[2],T=Math.max(g,y),_=n.makeOutput([T,S,N],w.dtype),C=n.dataIdMap.get(_.dataId).id,E=new Uint8Array(new Int32Array(w.shape).buffer),$=new Uint8Array(new Int32Array(v.shape).buffer);return Qj(k,E,w.shape.length,I,$,v.shape.length,i,o,C),n.disposeData(w.dataId),n.disposeData(v.dataId),_.shape=b,_}};function nq(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=ff.parseSliceParams(t,n,r),o=ff.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),p=ka.computeStrides(t.shape),d=a.dataIdMap.get(u.dataId);if(o){let e=ff.computeFlatOffset(s,p);return"string"===t.dtype?d.stringBytes=l.slice(e,e+ka.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(e,e+ka.sizeFromShape(i))),u}if("string"===t.dtype){let e=uA(l,s,i,t.shape,t.dtype);return d.stringBytes=e,u}let h=a.typedArrayFromHeap(u),c=t.shape.length;if(2===c)!function(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let r=i;r<l;r++){let i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(l,p[0],h,s,i);else if(3===c)!function(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],p=o+s[0],d=l+s[1];for(let a=o;a<p;a++)for(let o=l;o<d;o++){let l=a*t+o*n+u;r.set(e.subarray(l,l+s[2]),i),i+=s[2]}}(l,p[0],p[1],h,s,i);else if(4===c)!function(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],p=s[2],d=l+i[0],h=u+i[1],c=p+i[2],f=s[3];for(let s=l;s<d;s++)for(let l=u;l<h;l++)for(let u=p;u<c;u++){let p=s*t+l*n+u*r+f;a.set(e.subarray(p,p+i[3]),o),o+=i[3]}}(l,p[0],p[1],p[2],h,s,i);else{let e=uA(l,s,i,t.shape,t.dtype);h.set(e)}return u}var rq={kernelName:kr,backendName:"wasm",kernelFunc:nq};var aq,sq={kernelName:ut,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),l=Bf.getReshaped(a.shape,s,o),u=Bf.getPermuted(l.length,s.length),p=Bf.getReshapedPermuted(a.shape,s,o),d=Bf.getSliceBeginCoords(i,s.length),h=Bf.getSliceSize(p,i,s.length),c=Jj({inputs:{x:a},backend:n,attrs:{shape:l}}),f=Ej({inputs:{x:c},backend:n,attrs:{perm:u}}),m=nq({inputs:{x:Jj({inputs:{x:f},backend:n,attrs:{shape:p}})},backend:n,attrs:{begin:d,size:h}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(c.dataId),m}};var iq={kernelName:pt,backendName:"wasm",setupFunc:function(e){aq=e.wasm.cwrap(pt,null,["number","number","boolean","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i}=r,o=0!==s.shape.reduce(((e,t)=>e*t),1),l=1===a.shape.length?[i]:[a.shape[0],i],u=t.makeOutput(l,s.dtype);function p(e){return t.dataIdMap.get(e.dataId).id}return aq(p(a),i,o,p(s),hj[s.dtype],p(u)),u}},oq=kj(dt);var lq={kernelName:ct,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.typedArrayFromHeap(r),i=n.typedArrayFromHeap(a),o=Bf.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeOutput([o.length],"int32",void 0,new Int32Array(o))}};function uq(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var pq,dq={kernelName:ft,backendName:"wasm",kernelFunc:uq},hq=bj(mt);var cq={kernelName:gt,backendName:"wasm",setupFunc:function(e){pq=e.wasm.cwrap(gt,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return pq(o,s,i,u),l}};function fq(e){let{inputs:t,backend:n}=e,r=ka.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=t.map((e=>e.shape));Bf.assertParamsConsistent(a,r);let s=Bf.computeOutShape(t.map((e=>e.shape)),r),i=t.filter((e=>ka.sizeFromShape(e.shape)>0));if(1===i.length)return Tj({inputs:{x:i[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(0===ka.sizeFromShape(s))return o;if("string"===i[0].dtype){let e=i.map((e=>{let t=[-1,ka.sizeFromShape(e.shape.slice(r))];return Jj({inputs:{x:e},backend:n,attrs:{shape:t}})})),a=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));s=Bf.computeOutShape(e.map((e=>e.shape)),1);let l=1===e[0].shape[0],u=UE(a,s,t[0].dtype,l),p=Bf.computeOutShape(i.map((e=>e.shape)),r);return o.shape=p,n.dataIdMap.get(o.dataId).stringBytes=Bf.fromStringArrayToUint8(u),e.forEach((e=>n.disposeData(e.dataId))),o}let l=ka.sizeFromShape(i[0].shape.slice(0,r)),u=0,p=i.map((e=>{let t=ka.sizeFromShape(e.shape.slice(r));return u+=t,t})),d=i.map((e=>n.typedArrayFromHeap(e))),h=n.typedArrayFromHeap(o);for(let e=0;e<l;e++){let t=e*u;for(let n=0;n<d.length;n++){let r=p[n],a=e*r,s=d[n].subarray(a,a+r);h.set(s,t),t+=r}}return o}var mq,gq={kernelName:xt,backendName:"wasm",kernelFunc:fq};var yq,bq={kernelName:wt,backendName:"wasm",setupFunc:function(e){mq=e.wasm.cwrap(wt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:p,dimRoundingMode:d,dataFormat:h}=n,c=Bf.convertConv2DDataFormat(h),f=Bf.computeConv2DInfo(a.shape,s.shape,l,u,p,d,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,T=f.outChannels,_="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return mq(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,w,_,v,k,I,S,N,T,E),C}};var xq,wq={kernelName:kt,backendName:"wasm",setupFunc:function(e){yq=e.wasm.cwrap(kt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:p}=r,d=Bf.convertConv2DDataFormat(l),h=Bf.computeConv2DInfo(p,s.shape,i,1,o,u,!1,d),{batchSize:c,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:w,outWidth:v,strideHeight:k,strideWidth:I}=h,S=f-1-h.padInfo.top,N=m-1-h.padInfo.left,T="channelsLast"===h.dataFormat,_=ka.computeStrides(h.inShape),C=ka.computeStrides(a.shape),[E,$,A]=ka.computeStrides(s.shape),F=_[0],R=T?_[1]:_[2],D=T?_[2]:1,M=T?1:_[1],O=C[0],L=T?C[1]:C[2],z=T?C[2]:1,P=T?1:C[1],B=t.makeOutput(h.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return yq(V,U,c,f,m,y,b,g,w,v,x,k,I,S,N,E,$,A,F,R,D,M,O,L,z,P,W),B}};var vq,kq={kernelName:It,backendName:"wasm",setupFunc:function(e){xq=e.wasm.cwrap(It,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if("float32"!==a.dtype)throw new Error(`Tensor x must have dtype float32, got ${a.dtype}`);if("float32"!==s.dtype)throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=Bf.computeConv3DInfo(a.shape,s.shape,i,l,o),p=n.makeOutput(u.outShape,a.dtype);return xq(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),p}};var Iq,Sq={kernelName:St,backendName:"wasm",setupFunc:function(e){vq=e.wasm.cwrap(St,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;if("float32"!==a.dtype)throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if("float32"!==s.dtype)throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=Bf.computeConv3DInfo(a.shape,l,i,1,o),p=n.makeOutput(u.filterShape,s.dtype);return vq(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),p}};var Nq,Tq,_q={kernelName:Nt,backendName:"wasm",setupFunc:function(e){Iq=e.wasm.cwrap(Nt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;if("float32"!==a.dtype)throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if("float32"!==s.dtype)throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=Bf.computeConv3DInfo(l,s.shape,o,1,i),p=n.makeOutput(u.inShape,a.dtype);return Iq(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),p}},Cq=bj(Tt),Eq=bj(_t);!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(Nq||(Nq={}));var $q,Aq={kernelName:$t,backendName:"wasm",setupFunc:function(e){Tq=e.wasm.cwrap($t,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{method:s,extrapolationValue:i,cropSize:o}=a,{image:l,boxes:u,boxInd:p}=r,d=u.shape[0],[h,c]=o,f=[d,h,c,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=uq({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,b=n.dataIdMap.get(p.dataId).id,x=n.makeOutput(f,"float32"),w=n.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(l.shape).buffer);return Tq(g,y,b,d,v,h,c,Nq[s],i,w),null!=t&&n.disposeData(t.dataId),x}};var Fq,Rq={kernelName:Ct,backendName:"wasm",setupFunc:function(e){$q=e.wasm.cwrap(Ct,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;ka.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`));let u=Bf.getAxesPermutation([s],l),p=a;null!==u&&(p=Ej({inputs:{x:a},attrs:{perm:u},backend:n}));let d=Bf.getInnerMostAxes(1,l)[0];Bf.assertAxesAreInnerMostDims("cumprod",[d],l);let h=n.makeOutput(p.shape,p.dtype),c=p.shape[d],f=n.dataIdMap.get(p.dataId).id,m=n.dataIdMap.get(h.dataId).id;$q(f,i?1:0,o?1:0,c,m,hj[a.dtype]);let g=h;if(null!==u){g=Ej({inputs:{x:h},attrs:{perm:Bf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(p.dataId),n.disposeData(h.dataId)}return g}};var Dq,Mq={kernelName:Et,backendName:"wasm",setupFunc:function(e){Fq=e.wasm.cwrap(Et,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;ka.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));let u=Bf.getAxesPermutation([s],l),p=a;null!==u&&(p=Ej({inputs:{x:a},attrs:{perm:u},backend:n}));let d=Bf.getInnerMostAxes(1,l)[0];Bf.assertAxesAreInnerMostDims("cumsum",[d],l);let h=n.makeOutput(p.shape,p.dtype),c=p.shape[d],f=n.dataIdMap.get(p.dataId).id,m=n.dataIdMap.get(h.dataId).id;Fq(f,i?1:0,o?1:0,c,m,hj[a.dtype]);let g=h;if(null!==u){g=Ej({inputs:{x:h},attrs:{perm:Bf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(p.dataId),n.disposeData(h.dataId)}return g}};var Oq,Lq={kernelName:At,backendName:"wasm",setupFunc:function(e){Dq=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i,binaryOutput:o}=r,l=0!==s.shape.reduce(((e,t)=>e*t),1),u=1===a.shape.length?[i]:[a.shape[0],i],p=t.makeOutput(u,s.dtype);function d(e){return t.dataIdMap.get(e.dataId).id}return Dq(d(a),new Uint8Array(new Int32Array(a.shape).buffer),a.shape.length,i,l,d(s),hj[s.dtype],o,d(p)),p}};var zq,Pq={kernelName:Ft,backendName:"wasm",setupFunc:function(e){Oq=e.wasm.cwrap(Ft,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,p=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),d="NHWC"===i?[o,l,u,p]:[o,p,l,u],h=t.makeOutput(d,"float32"),c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(ka.computeStrides(a.shape)).buffer),m=new Uint8Array(new Int32Array(d).buffer),g=new Uint8Array(new Int32Array(ka.computeStrides(d)).buffer),y=t.dataIdMap.get(h.dataId).id;return Oq(c,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,d.length,y),h}};var Bq,Wq={kernelName:Rt,backendName:"wasm",setupFunc:function(e){zq=e.wasm.cwrap(Rt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:p,dimRoundingMode:d}=n,h=null==u?[1,1]:u,c=Bf.computeConv2DInfo(a.shape,s.shape,l,h,p,d,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,w=c.dilationHeight,v=c.dilationWidth,k=c.strideHeight,I=c.strideWidth,S=c.inChannels,N=c.outChannels,T="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let _=r.makeOutput(c.outShape,"float32"),C=r.dataIdMap.get(_.dataId).id;return zq(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,T,w,v,k,I,S,N,C),_}};var Vq,Uq={kernelName:Ot,backendName:"wasm",setupFunc:function(e){Bq=e.wasm.cwrap("Diag",null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=ka.sizeFromShape(r.shape),s=n.makeOutput([...r.shape,...r.shape],r.dtype);return Bq(n.dataIdMap.get(r.dataId).id,hj[r.dtype],a,n.dataIdMap.get(s.dataId).id),s}};var Gq,Hq={kernelName:Lt,backendName:"wasm",setupFunc:function(e){Vq=e.wasm.cwrap(Lt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if(a.dtype!==s.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${a.dtype} and ${s.dtype}`);let u=Bf.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),p=n.makeOutput(u.outShape,a.dtype);return Vq(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,hj[a.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),p}};var jq,qq={kernelName:Pt,backendName:"wasm",setupFunc:function(e){Gq=e.wasm.cwrap(Pt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let p=Bf.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u),d=n.makeOutput(s.shape,s.dtype);return Gq(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,hj[a.dtype],p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.filterHeight,p.filterWidth,p.padInfo.top,p.padInfo.left),d}};var Kq,Xq={kernelName:zt,backendName:"wasm",setupFunc:function(e){jq=e.wasm.cwrap(zt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let p=Bf.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u),d=n.makeOutput(a.shape,a.dtype);return jq(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,hj[a.dtype],p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.filterHeight,p.filterWidth,p.padInfo.top,p.padInfo.left),d}},Yq=bj(Ut);var Zq={kernelName:Gt,backendName:"wasm",setupFunc:function(e){Kq=e.wasm.cwrap(Gt,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=n.makeOutput(a.shape,"float32"),i=e=>n.dataIdMap.get(e.dataId).id;return Kq(i(a),i(r),i(s)),s}},Jq=kj(jt,0,"bool"),Qq=bj(Ht),eK=bj(qt,"float32");function tK(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(ka.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),Jj({inputs:{x:a},backend:r,attrs:{shape:o}})}var nK={kernelName:Kt,backendName:"wasm",kernelFunc:tK},rK=bj(Xt,"float32");function aK(e){let{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var sK,iK={kernelName:Zt,backendName:"wasm",kernelFunc:aK};var oK,lK={kernelName:Jt,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,p]=r.shape;return sK(s,o,l,u,p,i),a},setupFunc:function(e){sK=e.wasm.cwrap(Jt,null,["number","number","number","number","number","number"])}},uK=bj(Qt),pK=kj(en);var dK,hK={kernelName:tn,backendName:"wasm",setupFunc:function(e){oK=e.wasm.cwrap(tn,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,p=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(i.dataId).id,h=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===ka.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return oK(p,d,h,c,f,a,g),m}};var cK,fK={kernelName:oa,backendName:"wasm",setupFunc:function(e){dK=e.wasm.cwrap(oa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dataFormat:d,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=n,m=Bf.computeConv2DInfo(a.shape,s.shape,l,p,u,h),g=cj[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,w=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}let v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,_=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,$=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==d)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return dK(y,R,D,M,b,v,k,w,I,S,N,T,F,_,C,E,$,A,x,g,z,f||0,L),O}};var mK,gK={kernelName:la,backendName:"wasm",setupFunc:function(e){cK=e.wasm.cwrap(la,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dataFormat:d,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=n,m=Bf.computeConv2DInfo(a.shape,s.shape,l,p,u,h,!0),g=cj[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,w=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}let v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,_=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,$=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==d)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return cK(y,R,D,M,b,v,k,w,I,S,N,T,F,_,C,E,$,A,x,g,z,f||0,L),O}};var yK,bK={kernelName:rn,backendName:"wasm",setupFunc:function(e){mK=e.wasm.cwrap(rn,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=hf.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;let p=a.shape,d=p[p.length-1],h=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return mK(h,hj[r.dtype],c,i,d,o,f,m),u}};var xK,wK={kernelName:nn,backendName:"wasm",setupFunc:function(e){yK=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=ka.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),p=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];ka.assert(t<=p-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${p-1}]`))}let d=Bf.segment_util.collectGatherOpShapeInfo(a,s,l,o),h=Jj({inputs:{x:a},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),c=ka.sizeFromShape(s.shape),f=Jj({inputs:{x:s},attrs:{shape:[d.batchSize,c/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],g=t.makeOutput(m,a.dtype);if(0===ka.sizeFromShape(a.shape))return g;let y=h.shape.length-1,b=t.dataIdMap.get(h.dataId).id,x=t.dataIdMap.get(f.dataId).id,w=t.dataIdMap.get(g.dataId).id,v=new Uint8Array(new Int32Array(ka.computeStrides(h.shape)).buffer),k=new Uint8Array(new Int32Array(ka.computeStrides(m)).buffer);return yK(b,hj[a.dtype],v,y,x,d.batchSize,k,w),t.disposeData(h.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}},vK=kj(an,0,"bool"),kK=kj(sn,0,"bool"),IK=bj(pn,"bool"),SK=bj(dn,"bool"),NK=bj(hn,"bool");var TK,_K={kernelName:cn,backendName:"wasm",setupFunc:function(e){xK=e.wasm.cwrap(cn,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==ka.sizeFromShape(t.shape)){let e=r.dataIdMap.get(s.dataId).id;xK(a,hj[t.dtype],n,e)}return s}},CK=kj(fn,0,"bool"),EK=kj(mn,0,"bool");var $K,AK={kernelName:gn,backendName:"wasm",setupFunc:function(e){TK=e.wasm.cwrap(gn,null,["number","number","number","number"])},kernelFunc:function(e){let{attrs:t,backend:n}=e,{start:r,stop:a,num:s}=t,i=Math.floor(s),o=n.makeOutput([i],"float32");return TK(n.dataIdMap.get(o.dataId).id,r,a,i),o}},FK=bj(yn),RK=bj(bn),DK=kj(xn,0,"bool"),MK=bj(wn),OK=kj(vn,0,"bool"),LK=kj(kn,0,"bool");var zK,PK={kernelName:Nn,backendName:"wasm",setupFunc:function(e){$K=e.wasm.cwrap(Nn,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;if("float32"!==a.dtype)throw new Error("LRN error: x must have dtype float32");let u=n.makeOutput(a.shape,a.dtype);return $K(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(u.dataId).id,a.shape[3],s,i,o,l),u}};var BK,WK={kernelName:Tn,backendName:"wasm",setupFunc:function(e){zK=e.wasm.cwrap(Tn,null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r;if("float32"!==a.dtype||"float32"!==s.dtype||"float32"!==i.dtype)throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let d=n.makeOutput(a.shape,a.dtype);return zK(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,i.shape[3],o,l,u,p),d}};var VK,UK={kernelName:Cn,backendName:"wasm",setupFunc:function(e){BK=e.wasm.cwrap(Cn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:d,inputWasTransposed:h}=Fj(i,a,t);if(h){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;Bf.assertAxesAreInnerMostDims("max",p,c);let[f,m]=Bf.computeOutAndReduceShapes(l.shape,p),g=ka.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==ka.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;BK(o,hj[i.dtype],g,e)}if(h&&t.disposeData(u.dataId),s){let e=Bf.expandShapeToKeepDim(y.shape,d);y.shape=e}return y}},GK=kj(En);var HK,jK={kernelName:$n,backendName:"wasm",setupFunc:function(e){VK=e.wasm.cwrap($n,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;ka.assert("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,p=Bf.computePool2DInfo(a.shape,i,o,1,l,u),d=p.filterHeight,h=p.filterWidth,c=p.padInfo.top,f=p.padInfo.right,m=p.padInfo.bottom,g=p.padInfo.left,y=p.dilationHeight,b=p.dilationWidth,x=p.strideHeight,w=p.strideWidth,v=p.inChannels,k=p.outChannels;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let I=r.makeOutput(p.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return VK(s,a.shape[0],a.shape[1],a.shape[2],d,h,c,f,m,g,y,b,x,w,v,k,S),I}};var qK,KK={kernelName:Fn,backendName:"wasm",setupFunc:function(e){HK=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,p=Bf.computePool3DInfo(a.shape,s,i,1,o,l,u),d=n.makeOutput(p.outShape,a.dtype);return HK(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),d}};var XK,YK={kernelName:Rn,backendName:"wasm",setupFunc:function(e){qK=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=Bf.computePool3DInfo(s.shape,i,o,1,l,u),d=n.makeOutput(s.shape,s.dtype);return qK(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),d}};var ZK,JK={kernelName:An,backendName:"wasm",setupFunc:function(e){XK=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=Bf.computePool2DInfo(s.shape,i,o,1,l,u),d=n.makeOutput(s.shape,s.dtype);return XK(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.top,p.padInfo.left),d}};var QK,eX={kernelName:Dn,backendName:"wasm",setupFunc:function(e){ZK=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=r;ka.assert(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));let u=[1,1];ka.assert(Bf.eitherStridesOrDilationsAreOne(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));let p=Bf.computePool2DInfo(a.shape,s,i,[1,1],o),d=n.makeOutput(p.outShape,a.dtype),h=n.makeOutput(p.outShape,"int32");return ZK(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,n.dataIdMap.get(h.dataId).id,hj[a.dtype],l,p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.top,p.padInfo.left),[d,h]}};var tX,nX={kernelName:Mn,backendName:"wasm",setupFunc:function(e){QK=e.wasm.cwrap(Mn,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:d,originalAxes:h,inputWasTransposed:c}=Fj(i,a,t),f=d;if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e,f=Bf.getInnerMostAxes(f.length,u.shape.length))}Bf.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=Bf.computeOutAndReduceShapes(u.shape,f),y=ka.sizeFromShape(g),b=u;"float32"!==u.dtype&&(b=uq({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(m,"float32");if(0!==ka.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;QK(l,y,e)}if(c&&t.disposeData(p.dataId),s){let e=Bf.expandShapeToKeepDim(x.shape,h);x.shape=e}return"float32"!==u.dtype&&t.disposeData(b.dataId),x}};var rX,aX,sX={kernelName:On,backendName:"wasm",setupFunc:function(e){tX=e.wasm.cwrap(On,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:d,originalAxes:h,inputWasTransposed:c}=Fj(i,a,t);if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e)}let f=u.shape.length;Bf.assertAxesAreInnerMostDims("min",d,f);let[m,g]=Bf.computeOutAndReduceShapes(u.shape,d),y=ka.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==ka.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;tX(l,hj[i.dtype],y,e)}if(c&&t.disposeData(p.dataId),s){let e=Bf.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}},iX=kj(Ln);!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(rX||(rX={}));var oX,lX={kernelName:zn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),p=r.map((e=>e[0])),d=r.map((e=>e[1])),h=new Uint8Array(new Int32Array(p).buffer),c=new Uint8Array(new Int32Array(d).buffer);return aX(i,u,t.shape.length,hj[t.dtype],h,c,rX[a],l),o},setupFunc:function(e){aX=e.wasm.cwrap(zn,null,["number","array","number","number","array","array","number","number"])}};function uX(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=ka.sizeFromShape(n.shape)/o;return 0===ka.sizeFromShape(s.shape)||oX(a,i,o,l),s}var pX,dX={kernelName:Fr,backendName:"wasm",setupFunc:function(e){oX=e.wasm.cwrap(Fr,null,["number","number","number","number"])},kernelFunc:uX};var hX,cX={kernelName:Bn,backendName:"wasm",setupFunc:function(e){pX=e.wasm.cwrap(Bn,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;if("float32"!==a.dtype)throw new Error(`Tensor logits must have dtype float32, got ${a.dtype}`);let l=o?a:uX({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),[u,p]=l.shape,d=n.makeOutput([u,s],"int32");return pX(n.dataIdMap.get(l.dataId).id,u,p,s,i,n.dataIdMap.get(d.dataId).id),o||n.disposeData(l.dataId),d}},fX=kj(Pn),mX=kj(Wn),gX=bj(Vn);function yX(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var bX,xX={kernelName:Gn,backendName:"wasm",setupFunc:function(e){hX=e.wasm.cwrap(Gn,"number",["number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(l.dataId).id,d=hX(u,p,s,a,i),{pSelectedIndices:h,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=yX(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",h)}};var wX,vX={kernelName:Hn,backendName:"wasm",setupFunc:function(e){bX=e.wasm.cwrap(Hn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,p=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(u.dataId).id,h=bX(p,d,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=yX(t,h);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}};var kX,IX={kernelName:jn,backendName:"wasm",setupFunc:function(e){wX=e.wasm.cwrap(jn,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,p=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(u.dataId).id,h=wX(p,d,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=yX(t,h);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}},SX=kj(Un,0,"bool");var NX={kernelName:Kn,backendName:"wasm",setupFunc:function(e){kX=e.wasm.cwrap(Kn,null,["number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=n.makeOutput([...a.shape,i],s),p=n.dataIdMap.get(u.dataId).id,d=n.dataIdMap.get(a.dataId).id;return kX(d,i,o,l,p),u}};var TX={kernelName:qn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}};var _X,CX={kernelName:Xn,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return tK({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ka.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ka.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=fq({inputs:t.map((e=>{let t=tK({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),l}};var EX,$X={kernelName:Yn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===ka.sizeFromShape(t.shape))return aK({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),p=r.map((e=>e[0])),d=r.map((e=>e[1])),h=new Uint8Array(new Int32Array(p).buffer),c=new Uint8Array(new Int32Array(d).buffer);return _X(i,u,t.shape.length,hj[t.dtype],h,c,a,l),o},setupFunc:function(e){_X=e.wasm.cwrap(Yn,null,["number","array","number","number","array","array","number","number"])}},AX=kj(Jn);var FX,RX={kernelName:Qn,backendName:"wasm",setupFunc:function(e){EX=e.wasm.cwrap(Qn,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,u=l;"float32"!==l.dtype&&(u=uq({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let p=n.makeOutput(r.shape,"float32"),d=n.dataIdMap.get(p.dataId).id;return EX(o,i,d),"float32"!==l.dtype&&n.disposeData(u.dataId),p}};var DX,MX={kernelName:er,backendName:"wasm",setupFunc:function(e){FX=e.wasm.cwrap(er,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:d,originalAxes:h,inputWasTransposed:c}=Fj(i,a,t),f=d;if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e,f=Bf.getInnerMostAxes(f.length,u.shape.length))}Bf.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=Bf.computeOutAndReduceShapes(u.shape,f),y=ka.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==ka.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;FX(l,y,hj[b.dtype],e)}if(c&&t.disposeData(p.dataId),s){let e=Bf.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}},OX={kernelName:ar,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=tA(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},LX=kj(Wt),zX=bj(ir),PX=bj(or),BX=bj(cr);var WX,VX={kernelName:dr,backendName:"wasm",setupFunc:function(e){DX=e.wasm.cwrap(dr,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{images:s}=r,{alignCorners:i,halfPixelCenters:o,size:l}=a,[u,p]=l,[d,h,c,f]=s.shape,m=[d,u,p,f],g=n.dataIdMap.get(s.dataId);"float32"!==g.dtype&&(t=uq({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let y=g.id,b=n.makeOutput(m,"float32");if(0===ka.sizeFromShape(s.shape))return b;let x=n.dataIdMap.get(b.dataId).id;return DX(y,d,h,c,f,u,p,i?1:0,o?1:0,x),null!=t&&n.disposeData(t.dataId),b}};var UX,GX={kernelName:hr,backendName:"wasm",setupFunc:function(e){WX=e.wasm.cwrap(hr,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{images:s,dy:i}=n,{alignCorners:o}=a,l=r.makeOutput(s.shape,"float32"),u=r.dataIdMap.get(s.dataId);return"float32"!==u.dtype&&(t=uq({backend:r,inputs:{x:s},attrs:{dtype:"float32"}}),u=r.dataIdMap.get(t.dataId)),WX(r.dataIdMap.get(s.dataId).id,r.dataIdMap.get(i.dataId).id,r.dataIdMap.get(l.dataId).id,new Uint8Array(new Int32Array(s.shape).buffer),new Uint8Array(new Int32Array(i.shape).buffer),o),null!=t&&r.disposeData(t.dataId),l}};var HX,jX={kernelName:ur,backendName:"wasm",setupFunc:function(e){UX=e.wasm.cwrap(ur,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[p,d,h,c]=a.shape,f=[p,l,u,c],m=t.makeOutput(f,"float32");if(0===ka.sizeFromShape(a.shape))return m;let g,y=t.dataIdMap.get(a.dataId);"float32"!==y.dtype&&(g=uq({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));let b=y.id,x=t.dataIdMap.get(m.dataId).id;return UX(b,p,d,h,c,l,u,s?1:0,i?1:0,x),null!=g&&t.disposeData(g.dataId),m}};var qX,KX={kernelName:pr,backendName:"wasm",setupFunc:function(e){HX=e.wasm.cwrap(pr,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{images:s,dy:i}=n,{alignCorners:o}=a,l=r.makeOutput(s.shape,"float32"),u=r.dataIdMap.get(s.dataId);return"float32"!==u.dtype&&(t=uq({backend:r,inputs:{x:s},attrs:{dtype:"float32"}}),u=r.dataIdMap.get(t.dataId)),HX(r.dataIdMap.get(s.dataId).id,r.dataIdMap.get(i.dataId).id,r.dataIdMap.get(l.dataId).id,new Uint8Array(new Int32Array(s.shape).buffer),new Uint8Array(new Int32Array(i.shape).buffer),o),null!=t&&r.disposeData(t.dataId),l}};var XX,YX={kernelName:fr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=ka.parseAxisParam(s,a.shape);if(0===a.shape.length)return Tj({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,p=new Uint8Array(new Int32Array(i).buffer),d=new Uint8Array(new Int32Array(a.shape).buffer);qX(l,p,i.length,d,a.shape.length,u);let h=Jj({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),h},setupFunc:function(e){qX=e.wasm.cwrap(fr,null,["number","array","number","array","number","number"])}};var ZX,JX={kernelName:sa,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(l.dataId).id,[d,h,c,f]=a.shape,[m,g]=Bf.getImageCenter(o,h,c),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return XX(u,d,h,c,f,s,m,g,b,y.length,p),l},setupFunc:function(e){XX=e.wasm.cwrap(sa,null,["number","number","number","number","number","number","number","number","array","number","number"])}},QX=bj(mr),eY=bj(gr);var tY,nY={kernelName:yr,backendName:"wasm",setupFunc:function(e){ZX=e.wasm.cwrap(yr,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===ka.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:p,strides:d,outputSize:h}=Md.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(d).buffer),g=t.dataIdMap.get(o.dataId).id;return ZX(c,f,hj[s.dtype],l,u,p,m,h,g),o}};var rY,aY={kernelName:xr,backendName:"wasm",setupFunc:function(e){tY=e.wasm.cwrap(xr,null,["number","number","number","number","number","number","bool","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r;if(a.dtype!==s.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${a.dtype} and ${s.dtype}`);let o=n.makeOutput(s.shape,"int32");function l(e){return n.dataIdMap.get(e.dataId).id}return tY(l(a),l(s),a.shape[0],a.shape[1],s.shape[1],hj[a.dtype],"left"===i,l(o)),o}};var sY,iY={kernelName:wr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),p=n.dataIdMap.get(u.dataId).id,d=r.shape.length,h=a.shape.length,c=0===d||d>1||1===h?1:ka.sizeFromShape(a.shape.slice(1));return rY(i,o,l,c,p),u},setupFunc:function(e){rY=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},oY=bj(vr);var lY={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){sY=e.wasm.cwrap(Tr,null,["number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===ka.sizeFromShape(a.shape)||sY(r,s),a}},uY=bj(Nr),pY=bj(Ir),dY=bj(Sr),hY=bj(_r);var cY,fY={kernelName:$r,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=ka.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=$X.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=Bf.getReshaped(u.shape,s,o,!1),d=Bf.getPermuted(p.length,s.length,!1),h=Bf.getReshapedPermuted(u.shape,s,o,!1),c=Jj({inputs:{x:u},backend:n,attrs:{shape:p}}),f=Ej({inputs:{x:c},backend:n,attrs:{perm:d}}),m=Jj({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(f.dataId),m}};var mY,gY={kernelName:Rr,backendName:"wasm",setupFunc:function(e){cY=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r}=e,{indices:a,values:s,denseShape:i,defaultValue:o}=r,l=a.shape[0],u=a.shape[1],p=n.readSync(i.dataId)[0],d=[l+p,u],h=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(d,a.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput(d.slice(0,1),s.dtype),b=n.dataIdMap.get(y.dataId).id,x=n.makeOutput([p],"bool"),w=n.dataIdMap.get(x.dataId).id,v=n.makeOutput([l],a.dtype),k=n.dataIdMap.get(v.dataId).id,I=n.makeOutput([4],"int32"),S=n.dataIdMap.get(I.dataId).id,N=cY(h,c,hj[s.dtype],l,p,u,f,g,b,w,k,S),T=n.readSync(I.dataId);switch(T[0]){case 1:t=Bf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(T[1]);break;case 2:t=Bf.getSparseFillEmptyRowsNegativeIndexErrorMessage(T[1],T[2]);break;case 3:t=Bf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(T[1],T[2],T[3]);break;default:t=""}if(n.disposeData(I.dataId),t)throw n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(x.dataId),n.disposeData(v.dataId),new Error(t);let _=m,C=y;return N!==d[0]&&(_=nq({inputs:{x:m},attrs:{begin:0,size:[N,u]},backend:n}),C=nq({inputs:{x:y},attrs:{begin:0,size:N},backend:n}),n.disposeData(m.dataId),n.disposeData(y.dataId)),[_,C,x,v]}};var yY,bY={kernelName:Dr,backendName:"wasm",setupFunc:function(e){mY=e.wasm.cwrap(Dr,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],p=ka.sizeFromShape(s.shape),d=t.makeOutput([u,p],r.dtype),h=t.dataIdMap.get(d.dataId).id,c=t.makeOutput([p],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;mY(i,o,l,u,h,f,g);let y,b=t.readSync(m.dataId);switch(b[0]){case 0:y=Bf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break;case 1:y=Bf.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break;case 2:y=Bf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=Bf.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=Bf.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(d.dataId),t.disposeData(c.dataId),new Error(y);return[d,c]}};function xY(e){yY=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function wY(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(Bf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=a.shape.slice();p[0]=u;let d=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(p,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;yY(d,hj[a.dtype],a.shape[0],h,c,m,y,t,0);let b,x=n.readSync(g.dataId);switch(x[0]){case 0:b=Bf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:b=Bf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:b=Bf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:b=Bf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:b=""}if(n.disposeData(g.dataId),b)throw n.disposeData(f.dataId),new Error(b);return f}var vY={kernelName:Mr,backendName:"wasm",setupFunc:xY,kernelFunc:function(e){return wY(e,!0)}};var kY,IY={kernelName:Or,backendName:"wasm",setupFunc:xY,kernelFunc:function(e){return wY(e,!1)}};var SY={kernelName:Lr,backendName:"wasm",setupFunc:function(e){kY=e.wasm.cwrap(Lr,null,["number","number","number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=n,{outputShape:o}=r,l=t.makeOutput(o,i.dtype);if(0===ka.sizeFromShape(o))return l;let{sliceRank:u,numUpdates:p,sliceSize:d,strides:h,outputSize:c}=Bf.calculateShapes(s,a,o),f=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(i.dataId).id,y=new Uint8Array(new Int32Array(h).buffer),b=t.dataIdMap.get(l.dataId).id;return kY(f,m,s.shape.length,g,hj[i.dtype],u,p,d,y,c,b),l}};var NY,TY={kernelName:Ar,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=ka.parseAxisParam(i,a.shape)[0],l=Bf.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),p=a.shape.slice();return l.map((e=>{let t=[...p];t[o]=e;let n=nq({inputs:{x:a},attrs:{begin:u,size:t},backend:r});return u[o]+=e,n}))}},_Y=bj(Cr),CY=bj(Pr),EY=kj(zr);var $Y,AY={kernelName:ra,backendName:"wasm",setupFunc:function(e){NY=e.wasm.cwrap(ra,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return NY(i,a,hj[s.dtype],l),o}};var FY={kernelName:Wr,backendName:"wasm",setupFunc:function(e){$Y=e.wasm.cwrap(Wr,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{x:s}=r,{begin:i,end:o,strides:l,beginMask:u,endMask:p,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:w,strides:v}=ff.sliceInfo(s.shape,i,o,l,u,p,d,h,c);if(g)t=Jj({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){ka.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=ff.computeOutShape(x,w,v),r=nq({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});t=Jj({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeData(r.dataId)}else{let e=n.makeOutput(f,"float32"),r=n.dataIdMap.get(s.dataId).id,a=new Uint8Array(new Int32Array(ka.computeStrides(s.shape)).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(w).buffer),l=new Uint8Array(new Int32Array(v).buffer),u=new Uint8Array(new Int32Array(f).buffer),p=new Uint8Array(new Int32Array(ka.computeStrides(f)).buffer),d=n.dataIdMap.get(e.dataId).id;$Y(r,a,s.shape.length,i,o,l,u,p,f.length,d),t=Jj({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeData(e.dataId)}return t}};var RY={kernelName:Vr,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:l,rightPad:u,padWidth:p,preserveShortSequences:d}=r,h=t.readSync(a.dataId),c=t.readSync(s.dataId),[f,m]=TA(h,c,i,o,l,u,p,d),g=t.makeOutput([f.length],"string");t.dataIdMap.get(g.dataId).stringBytes=f;let y=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(y).set(m),[g,y]}};var DY={kernelName:Ur,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,o=t.readSync(a.dataId),l=t.readSync(s.dataId),[u,p,d]=CA(o,l[0],i),h=p.length,c=t.makeOutput([h,2],"int32");t.typedArrayFromHeap(c).set(u);let f=t.makeOutput([h],"string");t.dataIdMap.get(f.dataId).stringBytes=p;let m=t.makeOutput([2],"int32");return t.typedArrayFromHeap(m).set(d),[c,f,m]}};var MY,OY={kernelName:Gr,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,i=EA(t.readSync(a.dataId),s),o=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(o).set(i),o}},LY=kj(Hr);var zY,PY={kernelName:Er,backendName:"wasm",setupFunc:function(e){MY=e.wasm.cwrap(Er,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:d,originalAxes:h,inputWasTransposed:c}=Fj(i,a,t),f=d;if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e,f=Bf.getInnerMostAxes(f.length,u.shape.length))}Bf.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=Bf.computeOutAndReduceShapes(u.shape,f),y=ka.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==ka.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;MY(l,y,hj[b.dtype],e)}if(c&&t.disposeData(p.dataId),s){let e=Bf.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}},BY=bj(jr),WY=bj(qr);var VY,UY={kernelName:br,backendName:"wasm",setupFunc:function(e){zY=e.wasm.cwrap(br,null,["number","number","number","number","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=n,{}=r,o=t.makeOutput(a.shape,a.dtype);if(0===ka.sizeFromShape(a.shape))return o;let{sliceRank:l,numUpdates:u,sliceSize:p,strides:d,outputSize:h}=Md.calculateShapes(i,s,a.shape),c=t.dataIdMap.get(s.dataId).id,f=t.dataIdMap.get(i.dataId).id,m=t.dataIdMap.get(a.dataId).id,g=new Uint8Array(new Int32Array(d).buffer),y=t.dataIdMap.get(o.dataId).id;return zY(c,f,hj[i.dtype],l,u,p,g,h,y,m),o}};var GY,HY={kernelName:Kr,backendName:"wasm",setupFunc:function(e){VY=e.wasm.cwrap(Kr,null,["number","array","number","array","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),p=n.makeOutput(o,a.dtype),d=n.dataIdMap.get(p.dataId).id;return VY(s,l,a.shape.length,u,o.length,hj[p.dtype],d),p}};var jY,qY={kernelName:Xr,backendName:"wasm",setupFunc:function(e){GY=e.wasm.cwrap(Xr,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,r.dtype),p=t.dataIdMap.get(u.dataId).id,d=t.makeOutput(l,"int32"),h=t.dataIdMap.get(d.dataId).id;return GY(i,o,r.shape.length,hj[r.dtype],a,s,p,h),[u,d]}};var KY={kernelName:Yr,backendName:"wasm",setupFunc:function(e){jY=e.wasm.cwrap(Yr,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{image:s,transforms:i}=r,{interpolation:o,fillMode:l,fillValue:u,outputShape:p}=a,[d,h,c,f]=s.shape,[m,g]=null!=p?p:[h,c],y=[d,m,g,f],b=new Uint8Array(new Int32Array(ka.computeStrides(s.shape)).buffer),x=new Uint8Array(new Int32Array(ka.computeStrides(y)).buffer),w=n.makeOutput(y,s.dtype),v=n.dataIdMap.get(w.dataId).id,k=n.dataIdMap.get(s.dataId).id,I=n.dataIdMap.get(i.dataId).id,S="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}return jY(k,I,i.shape[0]>1,d,m,g,f,c,h,b,s.shape.length-1,x,y.length-1,S,t,u,v),w}};var XY={kernelName:Jr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t,{outputValues:i,outputShape:o,indices:l}=zA(r.readSync(s.dataId),a,s.shape,s.dtype);return[r.makeOutput(o,s.dtype,void 0,i),r.makeOutput([l.length],"int32",void 0,l)]}};var YY={kernelName:Qr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=a.shape[e]);let p=new Array(i),d=new Array(o).fill(0),h=a.shape.slice();h[s]=1;for(let e=0;e<p.length;e++)d[s]=e,p[e]=nq({inputs:{x:a},attrs:{begin:d,size:h},backend:n});return p.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l})))}};var ZY={kernelName:na,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},JY=[yj,xj,wj,vj,Sj,Nj,Dj,Mj,zj,Pj,Bj,Wj,Vj,Uj,Gj,jj,Zj,Kj,Yj,tq,sq,iq,oq,lq,dq,hq,cq,gq,bq,wq,kq,Sq,_q,Cq,Eq,Aq,Rq,Mq,Lq,Pq,Wq,Uq,Hq,qq,Xq,Yq,Zq,Jq,Qq,eK,nK,rK,iK,lK,uK,pK,hK,fK,gK,bK,wK,vK,kK,Cj,IK,SK,NK,_K,CK,EK,AK,RK,FK,DK,MK,OK,LK,PK,WK,UK,GK,jK,KK,YK,JK,eX,nX,sX,iX,lX,cX,fX,mX,gX,xX,vX,IX,SX,NX,TX,CX,$X,AX,RX,MX,OX,LX,zX,PX,BX,eq,VX,GX,jX,KX,YX,JX,QX,eY,nY,aY,iY,oY,lY,uY,pY,dY,rq,dX,hY,fY,gY,bY,vY,IY,SY,TY,_Y,CY,EY,AY,FY,RY,DY,OY,LY,PY,BY,WY,UY,HY,qY,KY,Aj,XY,YY,ZY];for(let e of JY)ga(e);var QY=Pe();QY.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}})),QY.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(QY.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var eZ=y(O()),tZ=y(L()),nZ=y(z()),rZ=eZ.default||eZ,aZ=nZ.default||nZ,sZ=class extends B{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(gZ),yZ=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new P(this,Ki())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=ka.now();return e(),{kernelMs:ka.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if("string"===r){let i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}let i=ka.sizeFromShape(n),o=i*ka.bytesPerElement(r),l=this.wasm._malloc(o)>>>0;this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||ka.sizeFromShape(s);let o=ka.bytesPerElement(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,r){let a;if(null==n)a=this.write(null!=r?r:null,e,t);else{let r=this.dataIdNextNumber++;a={id:r},this.dataIdMap.set(a,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=ka.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,s,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=ka.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function iZ(e,t,n){if(null!=uZ)return uZ;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=dZ&&null!=dZ[r]?dZ[r]:n+r}async function oZ(){let[e,t]=await Promise.all([Pe().getAsync("WASM_HAS_SIMD_SUPPORT"),Pe().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{let a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){let e=tZ.wasmWorkerContents.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?iZ(e,t,null!=pZ?pZ:r):r+n}};cZ&&(a.instantiateWasm=function(e){return(t,n)=>(ka.fetch(e,{credentials:"same-origin"}).then((r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then((e=>{WebAssembly.instantiate(e,t).then((e=>{n(e.instance,e.module)}))}))})),{})}(iZ(e,t,null!=pZ?pZ:"")));let s,i=!1;a.onAbort=()=>{i||hZ||(hZ=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==uZ?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+rZ.toString()],{type:"text/javascript"}),s=rZ(a)):s=aZ(a),s.then((e=>{i=!0,hZ=!1;e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})})).catch(r)}))}var lZ=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],uZ=null,pZ=null,dZ={},hZ=!1,cZ=!1;function fZ(e,t=!1){if(ji("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),hZ)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");uZ=e,cZ=t}function mZ(e,t=!1){if(hZ)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)pZ=e;else{dZ=e;let t=lZ.filter((e=>null==dZ[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}cZ=t}var gZ=-1,yZ=-1;function bZ(e){gZ=e}function xZ(){if(-1===yZ)throw new Error("WASM backend not initialized.");return yZ}var wZ="4.7.0";oo("wasm",(async()=>{let{wasm:e}=await oZ();return new sZ(e)}),2);var vZ="4.7.0",kZ={tfjs:vZ,"tfjs-core":vZ,"tfjs-converter":"4.7.0","tfjs-backend-cpu":"4.7.0","tfjs-backend-webgl":"4.7.0","tfjs-backend-wasm":"4.7.0"},IZ={};function SZ(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach((({x:n,y:r},a)=>{let s=t[a];e.moveTo(s.x,s.y),e.lineTo(n,r)})),n){let n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}i(IZ,{AnchorPosition:()=>kJ,DrawBox:()=>TJ,DrawBoxOptions:()=>NJ,DrawFaceLandmarks:()=>SQ,DrawFaceLandmarksOptions:()=>IQ,DrawTextField:()=>SJ,DrawTextFieldOptions:()=>IJ,drawContour:()=>SZ,drawDetections:()=>_J,drawFaceExpressions:()=>wQ,drawFaceLandmarks:()=>NQ});var NZ={};i(NZ,{computeReshapedDimensions:()=>OZ,getCenterPoint:()=>LZ,isDimensions:()=>MZ,isEven:()=>RZ,isFloat:()=>FZ,isTensor:()=>_Z,isTensor1D:()=>CZ,isTensor2D:()=>EZ,isTensor3D:()=>$Z,isTensor4D:()=>AZ,isValidNumber:()=>PZ,isValidProbablitiy:()=>BZ,range:()=>zZ,round:()=>DZ});var TZ=class{constructor(e,t){if(!PZ(e)||!PZ(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new TZ(1/this.width,1/this.height)}};function _Z(e,t){return e instanceof rs&&e.shape.length===t}function CZ(e){return _Z(e,1)}function EZ(e){return _Z(e,2)}function $Z(e){return _Z(e,3)}function AZ(e){return _Z(e,4)}function FZ(e){return e%1!=0}function RZ(e){return e%2==0}function DZ(e,t=2){let n=10**t;return Math.floor(e*n)/n}function MZ(e){return e&&e.width&&e.height}function OZ({width:e,height:t},n){let r=n/Math.max(t,e);return new TZ(Math.round(e*r),Math.round(t*r))}function LZ(e){return e.reduce(((e,t)=>e.add(t)),new WZ(0,0)).div(new WZ(e.length,e.length))}function zZ(e,t,n){return Array(e).fill(0).map(((e,r)=>t+r*n))}function PZ(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function BZ(e){return PZ(e)&&e>=0&&e<=1}var WZ=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new WZ(this.x+e.x,this.y+e.y)}sub(e){return new WZ(this.x-e.x,this.y-e.y)}mul(e){return new WZ(this.x*e.x,this.y*e.y)}div(e){return new WZ(this.x/e.x,this.y/e.y)}abs(){return new WZ(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new WZ(Math.floor(this.x),Math.floor(this.y))}},VZ=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(PZ)}static assertIsValidBox(e,t,n=!1){if(!VZ.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){let n=e||{},r=[n.left,n.top,n.right,n.bottom].every(PZ),a=[n.x,n.y,n.width,n.height].every(PZ);if(!a&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(n)}`);let[s,i,o,l]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];VZ.assertIsValidBox({x:s,y:i,width:o,height:l},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=l}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new WZ(this.left,this.top)}get topRight(){return new WZ(this.right,this.top)}get bottomLeft(){return new WZ(this.left,this.bottom)}get bottomRight(){return new WZ(this.right,this.bottom)}round(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.round(e)));return new VZ({x:e,y:t,width:n,height:r})}floor(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.floor(e)));return new VZ({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this,a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new VZ({x:e,y:t,width:n,height:r})}rescale(e){let t=MZ(e)?e.width:e,n=MZ(e)?e.height:e;return new VZ({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){let[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new VZ({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){let{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),l=a-i,u=s-o,p=Math.min(l,e-i),d=Math.min(u,t-o);return new VZ({x:i,y:o,width:p,height:d}).floor()}shift(e,t){let{width:n,height:r}=this,a=this.x+e,s=this.y+t;return new VZ({x:a,y:s,width:n,height:r})}padAtBorders(e,t){let n=this.width+1,r=this.height+1,a=n,s=r,i=this.left,o=this.top,l=this.right,u=this.bottom;return l>t&&(a=-l+t+n,l=t),u>e&&(s=-u+e+r,u=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:u,x:i,ex:l,w:n,h:r}}calibrate(e){return new VZ({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},UZ=class extends VZ{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},GZ=class{constructor(e,t,n,r,a){this._imageDims=new TZ(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new VZ(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new VZ(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new GZ(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},HZ=class extends GZ{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){let{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new HZ(n,r,a)}};function jZ(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left))*Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top));return n?r/(e.area+t.area-r):r/Math.min(e.area,t.area)}function qZ(e){let t=e.map((e=>e.x)),n=e.map((e=>e.y)),r=t.reduce(((e,t)=>t<e?t:e),1/0),a=n.reduce(((e,t)=>t<e?t:e),1/0),s=t.reduce(((e,t)=>e<t?t:e),0),i=n.reduce(((e,t)=>e<t?t:e),0);return new UZ(r,a,s,i)}function KZ(e,t,n,r=!0){let a=t.map(((e,t)=>({score:e,boxIndex:t}))).sort(((e,t)=>e.score-t.score)).map((e=>e.boxIndex)),s=[];for(;a.length>0;){let t=a.pop();s.push(t);let i=a,o=[];for(let n=0;n<i.length;n++){let a=i[n],s=e[t],l=e[a];o.push(jZ(s,l,r))}a=a.filter(((e,t)=>o[t]<=n))}return s}function XZ(e,t){return Zi((()=>{let[n,r,a]=t,s=ul([...e.shape.slice(0,3),1],n,"float32"),i=ul([...e.shape.slice(0,3),1],r,"float32"),o=ul([...e.shape.slice(0,3),1],a,"float32"),l=jo([s,i,o],3);return zu(e,l)}))}function YZ(e,t=!1){return Zi((()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{let n=e.shape.slice();return n[i]=t,ul(n,0,"float32")},l=o(s),u=a-l.shape[i],p=[t&&u?o(u):null,e,l].filter((e=>!!e)).map((e=>Bi(e,"float32")));return jo(p,i)}))}function ZZ(e){let t=e.slice();for(let e=t.length-1;e>0;e--){let n=Math.floor(Math.random()*(e+1)),r=t[e];t[e]=t[n],t[n]=r}return t}function JZ(e){return 1/(1+Math.exp(-e))}function QZ(e){return Math.log(e/(1-e))}var eJ,tJ=class extends VZ{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},nJ=class{constructor(e,t,n=new WZ(0,0)){let{width:r,height:a}=t;this._imgDims=new TZ(r,a),this._shift=n,this._positions=e.map((e=>e.mul(new WZ(r,a)).add(n)))}get shift(){return new WZ(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map((e=>e.sub(this._shift).div(new WZ(this.imageWidth,this.imageHeight))))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new WZ(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let n=e instanceof HZ?e.box.floor():new VZ(e);return this.shiftBy(n.x,n.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/.45),o=LZ(e),l=Math.floor(Math.max(0,o.x-.5*i)),u=Math.floor(Math.max(0,o.y-.43*i));return new tJ(l,u,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+u))}alignMinBbox(e){let t=qZ(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},rJ=class extends nJ{getRefPointsForAlignment(){let e=this.positions;return[e[0],e[1],LZ([e[3],e[4]])]}},aJ=class extends nJ{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(LZ)}},sJ=class{constructor(e,t){this._label=e,this._distance=t}get label(){return this._label}get distance(){return this._distance}toString(e=!0){return`${this.label}${e?` (${DZ(this.distance)})`:""}`}},iJ=class extends VZ{constructor(e,t){super(e),this._label=t}static assertIsValidLabeledBox(e,t){if(VZ.assertIsValidBox(e,t),!PZ(e.label))throw new Error(`${t} - expected property label (${e.label}) to be a number`)}get label(){return this._label}},oJ=class{constructor(e,t){if("string"!=typeof e)throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(t)||t.some((e=>!(e instanceof Float32Array))))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=e,this._descriptors=t}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map((e=>Array.from(e)))}}static fromJSON(e){let t=e.descriptors.map((e=>new Float32Array(e)));return new oJ(e.label,t)}},lJ=class extends iJ{constructor(e,t,n,r){super(e,t),this._score=n,this._classScore=r}static assertIsValidPredictedBox(e,t){if(iJ.assertIsValidLabeledBox(e,t),!BZ(e.score)||!BZ(e.classScore))throw new Error(`${t} - expected properties score (${e.score}) and (${e.classScore}) to be a number between [0, 1]`)}get score(){return this._score}get classScore(){return this._classScore}};function uJ(e){return e.detection instanceof HZ}function pJ(e,t){return{...e,detection:t}}function dJ(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D:CanvasRenderingContext2D,Image:HTMLImageElement,ImageData:ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function hJ(){return"object"==typeof global&&"undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node}function cJ(e){let t="";if(!e&&hJ())try{e=s("fs")}catch(e){t=e.toString()}return{readFile:e?t=>new Promise(((n,r)=>{e.readFile(t,((e,t)=>e?r(e):n(t)))})):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function fJ(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=global.Video||global.HTMLVideoElement,r=global.fetch,a=cJ();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},createVideoElement:()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},fetch:r,...a}}function mJ(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function gJ(e){eJ=e}function yJ(){return mJ()?gJ(dJ()):hJ()?gJ(fJ()):null}var bJ={getEnv:function(){if(!eJ)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return eJ},setEnv:gJ,initialize:yJ,createBrowserEnv:dJ,createFileSystem:cJ,createNodejsEnv:fJ,monkeyPatch:function(e){if(eJ||yJ(),!eJ)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=eJ.Canvas,Image:n=eJ.Image}=e;eJ.Canvas=t,eJ.Image=n,eJ.createCanvasElement=e.createCanvasElement||(()=>new t),eJ.createImageElement=e.createImageElement||(()=>new n),eJ.ImageData=e.ImageData||eJ.ImageData,eJ.Video=e.Video||eJ.Video,eJ.fetch=e.fetch||eJ.fetch,eJ.readFile=e.readFile||eJ.readFile},isBrowser:mJ,isNodejs:hJ};function xJ(e){return bJ.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function wJ(e){let{Canvas:t,CanvasRenderingContext2D:n}=bJ.getEnv();if(e instanceof n)return e;let r=xJ(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d",{willReadFrequently:!0});if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}yJ();var vJ,kJ=((vJ=kJ||{}).TOP_LEFT="TOP_LEFT",vJ.TOP_RIGHT="TOP_RIGHT",vJ.BOTTOM_LEFT="BOTTOM_LEFT",vJ.BOTTOM_RIGHT="BOTTOM_RIGHT",vJ),IJ=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},SJ=class{constructor(e,t,n={}){this.text="string"==typeof e?[e]:e instanceof SJ?e.text:e,this.anchor=t,this.options=new IJ(n)}measureWidth(e){let{padding:t}=this.options;return this.text.map((t=>e.measureText(t).width)).reduce(((e,t)=>e<t?t:e),0)+2*t}measureHeight(){let{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){let{anchorPosition:n}=this.options,r="BOTTOM_RIGHT"===n||"TOP_RIGHT"===n,a="BOTTOM_LEFT"===n||"BOTTOM_RIGHT"===n,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,l=a?this.anchor.y-i:this.anchor.y;if(t){let{width:e,height:n}=t;return{x:Math.max(Math.min(o,e-s),0),y:Math.max(Math.min(l,n-i),0)}}return{x:o,y:l}}draw(e){let t=xJ(e),n=wJ(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;let l=this.measureWidth(n),u=this.measureHeight();n.fillStyle=r;let p=this.getUpperLeft(n,t);n.fillRect(p.x,p.y,l,u),n.fillStyle=a,this.text.forEach(((e,t)=>{let r=o+p.x,a=o+p.y+(t+1)*s;n.fillText(e,r,a)}))}},NJ=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new IJ({...s,...a})}},TJ=class{constructor(e,t={}){this.box=new VZ(e),this.options=new NJ(t)}draw(e){let t=wJ(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new SJ([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function _J(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof HZ?t.score:uJ(t)?t.detection.score:void 0,r=t instanceof HZ?t.box:uJ(t)?t.detection.box:new VZ(t),a=n?`${DZ(n)}`:void 0;new TJ(r,{label:a}).draw(e)}))}function CJ(e){let{Image:t,Video:n}=bJ.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function EJ(e){return new Promise(((t,n)=>{function r(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),t(e))}(e instanceof bJ.getEnv().Canvas||CJ(e))&&t(null),e.addEventListener("load",a),e.addEventListener("error",r)}))}function $J(e){return new Promise(((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));let r=new FileReader;r.onload=()=>{"string"!=typeof r.result&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));let e=bJ.getEnv().createImageElement();e.onload=()=>t(e),e.onerror=n,e.src=r.result},r.onerror=n,r.readAsDataURL(e)}))}function AJ(e){let{Image:t,Video:n}=bJ.getEnv();return e instanceof t?new TZ(e.naturalWidth,e.naturalHeight):e instanceof n?new TZ(e.videoWidth,e.videoHeight):new TZ(e.width,e.height)}function FJ({width:e,height:t}){let{createCanvasElement:n}=bJ.getEnv(),r=n();return r.width=e,r.height=t,r}function RJ(e,t){let{ImageData:n}=bJ.getEnv();if(!(e instanceof n||CJ(e)))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||AJ(e),s=FJ({width:r,height:a});return e instanceof n?wJ(s).putImageData(e,0,0):wJ(s).drawImage(e,0,0,r,a),s}async function DJ(e,t){let n=t||bJ.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(AZ(e)?1:0),i=Zi((()=>e.as3D(r,a,s).toInt()));return await tf.toPixels(i,n),i.dispose(),n}function MJ(e){let{Image:t,Canvas:n,Video:r}=bJ.getEnv();return e instanceof t||e instanceof n||e instanceof r}function OJ(e,t,n=!1){let{Image:r,Canvas:a}=bJ.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return FJ({width:1,height:1});let s=AJ(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=FJ({width:t,height:t}),p=e instanceof a?e:RJ(e),d=Math.abs(o-l)/2,h=n&&o<l?d:0,c=n&&l<o?d:0;return p.width>0&&p.height>0&&wJ(u).drawImage(p,h,c,o,l),u}var LJ=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach(((e,t)=>{if($Z(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(AZ(e)){let n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}let n=e instanceof bJ.getEnv().Canvas?e:RJ(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]}))}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return zZ(this.batchSize,0,1).map(((e,t)=>this.getReshapedInputDimensions(t)))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return OZ({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,Zi((()=>{let n=zZ(this.batchSize,0,1).map((n=>{let r=this.getInput(n);if(r instanceof rs){let n=AZ(r)?r:uu(r);return n=YZ(n,t),(n.shape[1]!==e||n.shape[2]!==e)&&(n=fc.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof bJ.getEnv().Canvas)return tf.fromPixels(OJ(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)}));return Nd(n.map((e=>Bi(e,"float32")))).as4D(this.batchSize,e,e,3)}))}};async function zJ(e){if(e instanceof LJ)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(xJ);return r.forEach(((e,r)=>{if(!MJ(e)&&!$Z(e)&&!AZ(e))throw"string"==typeof t[r]?new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`):new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(AZ(e)){let t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}})),await Promise.all(r.map((e=>MJ(e)&&EJ(e)))),new LJ(r,Array.isArray(e))}async function PJ(e,t){let{Canvas:n}=bJ.getEnv(),r=e;if(!(e instanceof n)){let t=await zJ(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let a=t.getInput(0);r=a instanceof n?a:await DJ(a)}let a=wJ(r);return t.map((e=>e instanceof HZ?e.forSize(r.width,r.height).box.floor():e)).map((e=>e.clipAtImageBorders(r.width,r.height))).map((({x:e,y:t,width:n,height:r})=>{let s=FJ({width:n,height:r});return n>0&&r>0&&wJ(s).putImageData(a.getImageData(e,t,n,r),0,0),s}))}async function BJ(e,t){if(!$Z(e)&&!AZ(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(AZ(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return Zi((()=>{let[n,r,a]=e.shape.slice(AZ(e)?1:0);return t.map((e=>e instanceof HZ?e.forSize(r,n).box:e)).map((e=>e.clipAtImageBorders(r,n))).filter((e=>e.width>0&&e.height>0)).map((({x:t,y:s,width:i,height:o})=>md(e.as3D(n,r,a),[s,t,0],[o,i,a])))}))}async function WJ(e,t){let{fetch:n}=bJ.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}async function VJ(e){let t=await WJ(e),n=await t.blob();if(!n.type.startsWith("image/"))throw new Error(`fetchImage - expected blob type to be of type image/*, instead have: ${n.type}, for url: ${t.url}`);return $J(n)}async function UJ(e){return(await WJ(e)).json()}async function GJ(e){return new Float32Array(await(await WJ(e)).arrayBuffer())}async function HJ(e){let t=await WJ(e),n=await t.blob();if(!n.type.startsWith("video/"))throw new Error(`fetchVideo - expected blob type to be of type video/*, instead have: ${n.type}, for url: ${t.url}`);return function(e){return new Promise(((t,n)=>{e instanceof Blob||n(new Error("bufferToVideo - expected buf to be of type: Blob"));let r=bJ.getEnv().createVideoElement();r.oncanplay=()=>t(r),r.onerror=n,r.playsInline=!0,r.muted=!0,r.src=URL.createObjectURL(e),r.play()}))}(n)}function jJ(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter((e=>e)),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:"/"===i?`/${s}`:`${i}/${s}`}}async function qJ(e,t){let{manifestUri:n,modelBaseUri:r}=jJ(e,t),a=await UJ(n);return Fc.loadWeights(a,r)}function KJ(e,t,n=!1){let{width:r,height:a}=n?AJ(t):t;return e.width=r,e.height=a,{width:r,height:a}}var XJ=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map((({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)})))}getTrainableParams(){return this.getParamList().filter((e=>e.tensor instanceof ss))}getFrozenParams(){return this.getParamList().filter((e=>!(e.tensor instanceof ss)))}variable(){this.getFrozenParams().forEach((({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())}))}freeze(){this.getTrainableParams().forEach((({path:e,tensor:t})=>{let n=Us(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)}))}dispose(e=!0){this.getParamList().forEach((t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()})),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map((({tensor:e})=>Array.from(e.dataSync()))).reduce(((e,t)=>e.concat(t))))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromUri - expected model uri`);let t=await qJ(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=bJ.getEnv(),{manifestUri:n,modelBaseUri:r}=jJ(e,this.getDefaultModelName()),a=Fc.weightsLoaderFactory((e=>Promise.all(e.map((e=>t(e).then((e=>e.buffer))))))),s=JSON.parse((await t(n)).toString()),i=await a(s,r);this.loadFromWeightMap(i)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce(((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}}),{nextObj:this.params}),{obj:n,objProp:r}=t;if(!(n&&r&&n[r]instanceof rs))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function YJ(e,t,n){return Zi((()=>{let r=ld(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=po(r,t.bias),r}))}function ZJ(e,t,n=!1){return Zi((()=>{let r=Jp(n?po(ml(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):YJ(e,t.conv0,[2,2])),a=YJ(r,t.conv1,[1,1]),s=YJ(Jp(po(r,a)),t.conv2,[1,1]);return Jp(po(r,po(a,s)))}))}function JJ(e,t,n=!1,r=!0){return Zi((()=>{let a=Jp(n?po(ml(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):YJ(e,t.conv0,r?[2,2]:[1,1])),s=YJ(a,t.conv1,[1,1]),i=YJ(Jp(po(a,s)),t.conv2,[1,1]),o=YJ(Jp(po(a,po(s,i))),t.conv3,[1,1]);return Jp(po(a,po(s,po(i,o))))}))}function QJ(e,t,n="same",r=!1){return Zi((()=>{let a=po(ml(e,t.filters,[1,1],n),t.bias);return r?Jp(a):a}))}function eQ(e,t){Object.keys(e).forEach((n=>{t.some((e=>e.originalPath===n))||e[n].dispose()}))}function tQ(e,t){return(n,r,a,s)=>{let i=Fd(e(n*r*a*a),[a,a,n,r]),o=Ed(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function nQ(e,t){return(n,r,a)=>{let s=$d(e(n*r),[n,r]),i=Ed(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var rQ=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function aQ(e,t){return(n,r,a)=>{let s=Fd(e(9*n),[3,3,n,1]),i=Fd(e(n*r),[1,1,n,r]),o=Ed(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new rQ(s,i,o)}}function sQ(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new rQ(n,r,a)}}function iQ(e,t){return(n,r,a)=>{let s=e[n];if(!_Z(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function oQ(e){let t=e;return{extractWeights:function(e){let n=t.slice(0,e);return t=t.slice(e),n},getRemainingWeights:function(){return t}}}function lQ(e,t){let n=tQ(e,t),r=aQ(e,t);function a(e,t,a,s=!1){return{conv0:s?n(e,t,3,`${a}/conv0`):r(e,t,`${a}/conv0`),conv1:r(t,t,`${a}/conv1`),conv2:r(t,t,`${a}/conv2`)}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function(e,t,n,s=!1){let{conv0:i,conv1:o,conv2:l}=a(e,t,n,s);return{conv0:i,conv1:o,conv2:l,conv3:r(t,t,`${n}/conv3`)}}}}function uQ(e){return t=>({filters:e(`${t}/filters`,4),bias:e(`${t}/bias`,1)})}function pQ(e,t){let n=iQ(e,t),r=uQ(n),a=sQ(n);return{extractDenseBlock3Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`)}},extractDenseBlock4Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`),conv3:a(`${e}/conv3`)}}}}var dQ=class extends XJ{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return Zi((()=>{let n=JJ(XZ(Bi(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=JJ(n,t.dense1),n=JJ(n,t.dense2),n=JJ(n,t.dense3),n=Go(n,[7,7],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await zJ(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock4Params:n}=pQ(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return eQ(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=oQ(e),{extractDenseBlock4Params:a}=lQ(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}(e)}};function hQ(e,t){return Zi((()=>po(qo(e,t.weights),t.bias)))}function cQ(e){let t={},n={};return Object.keys(e).forEach((r=>{(r.startsWith("fc")?n:t)[r]=e[r]})),{featureExtractorMap:t,classifierMap:n}}var fQ=class extends XJ{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return Zi((()=>{let n=e instanceof LJ?this.faceFeatureExtractor.forwardInput(e):e;return hQ(n.as2D(n.shape[0],-1),t.fc)}))}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=oQ(e),i=nQ(a,r)(t,n,"fc");if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=cQ(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=iQ(e,t),r={fc:(a="fc",{weights:n(`${a}/weights`,2),bias:n(`${a}/bias`,1)})};var a;return eQ(e,t),{params:r,paramMappings:t}}(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},mQ=["neutral","happy","sad","angry","fearful","disgusted","surprised"],gQ=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,7!==e.length)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);mQ.forEach(((t,n)=>{this[t]=e[n]}))}asSortedArray(){return mQ.map((e=>({expression:e,probability:this[e]}))).sort(((e,t)=>t.probability-e.probability))}},yQ=class extends fQ{constructor(e=new dQ){super("FaceExpressionNet",e)}forwardInput(e){return Zi((()=>yd(this.runNet(e))))}async forward(e){return this.forwardInput(await zJ(e))}async predictExpressions(e){let t=await zJ(e),n=await this.forwardInput(t),r=await Promise.all(Gd(n).map((async e=>{let t=e.dataSync();return e.dispose(),t})));n.dispose();let a=r.map((e=>new gQ(e)));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function bQ(e){return e.expressions instanceof gQ}function xQ(e,t){return{...e,expressions:t}}function wQ(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach((t=>{let a=t instanceof gQ?t:bQ(t)?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let s=a.asSortedArray().filter((e=>e.probability>n)),i=uJ(t)?t.detection.box.bottomLeft:r||new WZ(0,0);new SJ(s.map((e=>`${e.expression} (${DZ(e.probability)})`)),i).draw(e)}))}function vQ(e){return uJ(e)&&e.landmarks instanceof nJ&&e.unshiftedLandmarks instanceof nJ&&e.alignedRect instanceof HZ}function kQ(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new HZ(e.detection.score,a.rescale(s.reverse()),s),o=function(e){let t=e=>180*e/Math.PI,n=(e,t)=>Math.sqrt((e._x-t._x)**2+(e._y-t._y)**2),r={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||68!==e._positions.length)return r;let a=e._positions;return r.roll=((e,n)=>{let r=Math.hypot(n._x-e._x,n._y-e._y),a=n._y-e._y,s=Math.asin(a/r),i=t(s);return Math.floor(90-i)*(n._x-e._x<0?-1:1)})(a[27],a[66]),r.pitch=((e,r,a)=>{let s=n(e,a),i={_x:(e._x+a._x)/2,_y:(e._y+a._y)/2},o=n(r,i),l=Math.atan(o/s);return Math.floor(t(l))*(i._y-r._y<0?-1:1)})(a[14],a[30],a[2]),r.yaw=(s=a[14],i=a[33],o=a[2],Math.floor(s._x-i._x)-Math.floor(i._x-o._x)),r;var s,i,o}(t);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o}}var IQ=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},SQ=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new IQ(t)}draw(e){let t=wJ(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof aJ&&(t.strokeStyle=s,t.lineWidth=a,SZ(t,this.faceLandmarks.getJawOutline()),SZ(t,this.faceLandmarks.getLeftEyeBrow()),SZ(t,this.faceLandmarks.getRightEyeBrow()),SZ(t,this.faceLandmarks.getNose()),SZ(t,this.faceLandmarks.getLeftEye(),!0),SZ(t,this.faceLandmarks.getRightEye(),!0),SZ(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let e=e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(e)}}};function NQ(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof nJ?t:vQ(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new SQ(n).draw(e)}))}function TQ(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=oQ(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=function(e,t){let n=tQ(e,t),r=aQ(e,t);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function(e,t,a){return{separable_conv0:r(e,t,`${a}/separable_conv0`),separable_conv1:r(t,t,`${a}/separable_conv1`),expansion_conv:n(e,t,1,`${a}/expansion_conv`)}},extractMainBlockParams:function(e,t){return{separable_conv0:r(e,e,`${t}/separable_conv0`),separable_conv1:r(e,e,`${t}/separable_conv1`),separable_conv2:r(e,e,`${t}/separable_conv2`)}}}}(r,n),u={conv_in:s(3,32,3,"entry_flow/conv_in"),reduction_block_0:o(32,64,"entry_flow/reduction_block_0"),reduction_block_1:o(64,128,"entry_flow/reduction_block_1")},p={};zZ(t,0,1).forEach((e=>{p[`main_block_${e}`]=l(128,`middle_flow/main_block_${e}`)}));let d={reduction_block:o(128,256,"exit_flow/reduction_block"),separable_conv:i(256,512,"exit_flow/separable_conv")};if(0!==a().length)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:u,middle_flow:p,exit_flow:d}}}function _Q(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=function(e,t){let n=iQ(e,t),r=uQ(n),a=sQ(n);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),expansion_conv:r(`${e}/expansion_conv`)}},extractMainBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),separable_conv2:a(`${e}/separable_conv2`)}}}}(e,n),o={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},l={};zZ(t,0,1).forEach((e=>{l[`main_block_${e}`]=i(`middle_flow/main_block_${e}`)}));let u={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")};return eQ(e,n),{params:{entry_flow:o,middle_flow:l,exit_flow:u},paramMappings:n}}function CQ(e,t,n){return po(ml(e,t.filters,n,"same"),t.bias)}function EQ(e,t,n=!0){let r=n?Jp(e):e;return r=YJ(r,t.separable_conv0,[1,1]),r=YJ(Jp(r),t.separable_conv1,[1,1]),r=Ku(r,[3,3],[2,2],"same"),r=po(r,CQ(e,t.expansion_conv,[2,2])),r}var $Q=class extends XJ{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return Zi((()=>{let n=XZ(Bi(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),r=Jp(CQ(n,t.entry_flow.conv_in,[2,2]));return r=EQ(r,t.entry_flow.reduction_block_0,!1),r=EQ(r,t.entry_flow.reduction_block_1),zZ(this._numMainBlocks,0,1).forEach((e=>{r=function(e,t){let n=YJ(Jp(e),t.separable_conv0,[1,1]);return n=YJ(Jp(n),t.separable_conv1,[1,1]),n=YJ(Jp(n),t.separable_conv2,[1,1]),n=po(n,e),n}(r,t.middle_flow[`main_block_${e}`])})),r=EQ(r,t.exit_flow.reduction_block),r=Jp(YJ(r,t.exit_flow.separable_conv,[1,1])),r}))}async forward(e){return this.forwardInput(await zJ(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return _Q(e,this._numMainBlocks)}extractParams(e){return TQ(e,this._numMainBlocks)}};var AQ,FQ=((AQ=FQ||{}).FEMALE="female",AQ.MALE="male",AQ),RQ=class extends XJ{constructor(e=new $Q(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return Zi((()=>{let n=e instanceof LJ?this.faceFeatureExtractor.forwardInput(e):e,r=Go(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:hQ(r,t.fc.age).as1D(),gender:hQ(r,t.fc.gender)}}))}forwardInput(e){return Zi((()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:yd(n)}}))}async forward(e){return this.forwardInput(await zJ(e))}async predictAgeAndGender(e){let t=await zJ(e),n=await this.forwardInput(t),r=Gd(n.age),a=Gd(n.gender),s=r.map(((e,t)=>({ageTensor:e,genderTensor:a[t]}))),i=await Promise.all(s.map((async({ageTensor:e,genderTensor:t})=>{let n=e.dataSync()[0],r=t.dataSync()[0],a=r>.5,s=a?"male":"female",i=a?r:1-r;return e.dispose(),t.dispose(),{age:n,gender:s,genderProbability:i}})));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=oQ(e),a=nQ(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=cQ(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=iQ(e,t);function r(e){return{weights:n(`${e}/weights`,2),bias:n(`${e}/bias`,1)}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return eQ(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}},DQ=class extends fQ{postProcess(e,t,n){let r=n.map((({width:e,height:n})=>{let r=t/Math.max(n,e);return{width:e*r,height:n*r}})),a=r.length;return Zi((()=>{let n=(e,t)=>Nd([ul([68],e,"float32"),ul([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{let{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0};return e.mul(ul([a,136],t,"float32")).sub(Nd(Array.from(Array(a),((e,t)=>n((e=>s(e,((e,t)=>e<t)))(t),(e=>s(e,((e,t)=>t<e)))(t)))))).div(Nd(Array.from(Array(a),((e,t)=>n(r[t].width,r[t].height)))))}))}forwardInput(e){return Zi((()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map((([e,t])=>({height:e,width:t}))))}))}async forward(e){return this.forwardInput(await zJ(e))}async detectLandmarks(e){let t=await zJ(e),n=Zi((()=>Gd(this.forwardInput(t)))),r=await Promise.all(n.map((async(e,n)=>{let r=Array.from(e.dataSync()),a=r.filter(((e,t)=>RZ(t))),s=r.filter(((e,t)=>!RZ(t)));return new aJ(Array(68).fill(0).map(((e,t)=>new WZ(a[t],s[t]))),{height:t.getInputHeight(n),width:t.getInputWidth(n)})})));return n.forEach((e=>e.dispose())),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},MQ=class extends DQ{constructor(e=new dQ){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};var OQ=class extends XJ{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return Zi((()=>{let n=ZJ(XZ(Bi(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=ZJ(n,t.dense1),n=ZJ(n,t.dense2),n=Go(n,[14,14],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await zJ(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock3Params:n}=pQ(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return eQ(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=oQ(e),{extractDenseBlock3Params:a}=lQ(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}},LQ=class extends DQ{constructor(e=new OQ){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},zQ=class extends MQ{};function PQ(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=ml(e,s,n,a);return o=po(o,i),o=function(e,t){return po(fo(e,t.weights),t.biases)}(o,t.scale),r?Jp(o):o}function BQ(e,t){return PQ(e,t,[1,1],!1)}function WQ(e,t){return PQ(e,t,[2,2],!0,"valid")}function VQ(e,t){function n(n,r,a,s){let i=function(t,n,r){let a=e(t),s=a.length/(n*r*r);if(FZ(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return Zi((()=>Yd(Fd(a,[n,s,r,r]),[2,3,1,0])))}(n,r,a),o=Ed(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}function r(r,a,s,i){let o=n(r,a,s,`${i}/conv`),l=function(n,r){let a=Ed(e(n)),s=Ed(e(n));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/biases`}),{weights:a,biases:s}}(a,`${i}/scale`);return{conv:o,scale:l}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e,t,n,a,s=!1){return{conv1:r((s?.5:1)*e,t,n,`${a}/conv1`),conv2:r(e,t,n,`${a}/conv2`)}}}}function UQ(e,t){let n=iQ(e,t);function r(e){let t=n(`${e}/conv/filters`,4),r=n(`${e}/conv/bias`,1),a=function(e){return{weights:n(`${e}/scale/weights`,1),biases:n(`${e}/scale/biases`,1)}}(e);return{conv:{filters:t,bias:r},scale:a}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(`${e}/conv1`),conv2:r(`${e}/conv2`)}}}}function GQ(e,t){let n=function(e,t){return PQ(e,t,[1,1],!0)}(e,t.conv1);return n=BQ(n,t.conv2),n=po(n,e),n=Jp(n),n}function HQ(e,t){let n=WQ(e,t.conv1);n=BQ(n,t.conv2);let r=Go(e,2,2,"valid"),a=Qu(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let e=[...n.shape];e[1]=1;let t=Qu(e);n=jo([n,t],1);let r=[...n.shape];r[2]=1;let a=Qu(r);n=jo([n,a],2)}return r=s?jo([r,a],3):r,n=po(r,n),n=Jp(n),n}var jQ=class extends XJ{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return Zi((()=>{let n=WQ(XZ(Bi(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div(255),t.conv32_down);n=Ku(n,3,2,"valid"),n=GQ(n,t.conv32_1),n=GQ(n,t.conv32_2),n=GQ(n,t.conv32_3),n=HQ(n,t.conv64_down),n=GQ(n,t.conv64_1),n=GQ(n,t.conv64_2),n=GQ(n,t.conv64_3),n=HQ(n,t.conv128_down),n=GQ(n,t.conv128_1),n=GQ(n,t.conv128_2),n=HQ(n,t.conv256_down),n=GQ(n,t.conv256_1),n=GQ(n,t.conv256_2),n=HQ(n,t.conv256_down_out);let r=n.mean([1,2]);return qo(r,t.fc)}))}async forward(e){return this.forwardInput(await zJ(e))}async computeFaceDescriptor(e){var t;if(null!=(t=null==e?void 0:e.shape)&&t.some((e=>e<=0)))return new Float32Array(128);let n=await zJ(e),r=Zi((()=>Gd(this.forwardInput(n)))),a=await Promise.all(r.map((e=>e.data())));return r.forEach((e=>e.dispose())),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=UQ(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),u=r("conv64_1"),p=r("conv64_2"),d=r("conv64_3"),h=r("conv128_down"),c=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!EZ(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let w={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:p,conv64_3:d,conv128_down:h,conv128_1:c,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return eQ(e,t),{params:w,paramMappings:t}}(e)}extractParams(e){return function(e){let{extractWeights:t,getRemainingWeights:n}=oQ(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=VQ(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),p=s(36864,64,3,"conv64_down",!0),d=s(36864,64,3,"conv64_1"),h=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),w=s(589824,256,3,"conv256_down_out"),v=Zi((()=>Yd($d(t(32768),[128,256]),[1,0])));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:p,conv64_1:d,conv64_2:h,conv64_3:c,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:w,fc:v},paramMappings:r}}(e)}};function qQ(e){let t=new jQ;return t.extractWeights(e),t}function KQ(e,t){return{...e,descriptor:t}}function XQ(e){return"number"==typeof e.age}function YQ(e,t){return{...e,age:t}}function ZQ(e){return("male"===e.gender||"female"===e.gender)&&BZ(e.genderProbability)}function JQ(e,t,n){return{...e,gender:t,genderProbability:n}}function QQ(e,t){function n(n,r,a,s,i){let o=Fd(e(n*r*a*a),[a,a,n,r]),l=Ed(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:l}}function r(e,t,r,a){let{filters:s,bias:i}=n(e,t,r,a,!0);return{filters:s,batch_norm_offset:i}}function a(n,a,s){let i=function(n,r){let a=Fd(e(9*n),[3,3,n,1]),s=Ed(e(n)),i=Ed(e(n)),o=Ed(e(n)),l=Ed(e(n));return t.push({paramPath:`${r}/filters`},{paramPath:`${r}/batch_norm_scale`},{paramPath:`${r}/batch_norm_offset`},{paramPath:`${r}/batch_norm_mean`},{paramPath:`${r}/batch_norm_variance`}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:l}}(n,`${s}/depthwise_conv`);return{depthwise_conv:i,pointwise_conv:r(n,a,1,`${s}/pointwise_conv`)}}return{extractMobilenetV1Params:function(){return{conv_0:r(3,32,3,"mobilenetv1/conv_0"),conv_1:a(32,64,"mobilenetv1/conv_1"),conv_2:a(64,128,"mobilenetv1/conv_2"),conv_3:a(128,128,"mobilenetv1/conv_3"),conv_4:a(128,256,"mobilenetv1/conv_4"),conv_5:a(256,256,"mobilenetv1/conv_5"),conv_6:a(256,512,"mobilenetv1/conv_6"),conv_7:a(512,512,"mobilenetv1/conv_7"),conv_8:a(512,512,"mobilenetv1/conv_8"),conv_9:a(512,512,"mobilenetv1/conv_9"),conv_10:a(512,512,"mobilenetv1/conv_10"),conv_11:a(512,512,"mobilenetv1/conv_11"),conv_12:a(512,1024,"mobilenetv1/conv_12"),conv_13:a(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:r(1024,256,1,"prediction_layer/conv_0"),conv_1:r(256,512,3,"prediction_layer/conv_1"),conv_2:r(512,128,1,"prediction_layer/conv_2"),conv_3:r(128,256,3,"prediction_layer/conv_3"),conv_4:r(256,128,1,"prediction_layer/conv_4"),conv_5:r(128,256,3,"prediction_layer/conv_5"),conv_6:r(256,64,1,"prediction_layer/conv_6"),conv_7:r(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:n(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:n(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:n(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}function e0(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function(e,t){let n=iQ(e,t);function r(e,t,r){return{filters:n(`${e}/Conv2d_${t}_pointwise/weights`,4,`${r}/filters`),batch_norm_offset:n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,`${r}/batch_norm_offset`)}}function a(e){let t=`mobilenetv1/conv_${e}`,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=`${t}/depthwise_conv`,i=`${t}/pointwise_conv`;return{depthwise_conv:{filters:n(`${a}/depthwise_weights`,4,`${s}/filters`),batch_norm_scale:n(`${a}/BatchNorm/gamma`,1,`${s}/batch_norm_scale`),batch_norm_offset:n(`${a}/BatchNorm/beta`,1,`${s}/batch_norm_offset`),batch_norm_mean:n(`${a}/BatchNorm/moving_mean`,1,`${s}/batch_norm_mean`),batch_norm_variance:n(`${a}/BatchNorm/moving_variance`,1,`${s}/batch_norm_variance`)},pointwise_conv:r("MobilenetV1",e,i)}}function s(e,t){return{filters:n(`${e}/weights`,4,`${t}/filters`),bias:n(`${e}/biases`,1,`${t}/bias`)}}function i(e){return{box_encoding_predictor:s(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),class_predictor:s(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`)}}return{extractMobilenetV1Params:function(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!$Z(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return eQ(e,t),{params:s,paramMappings:t}}function t0(e,t,n){return Zi((()=>{let r=ml(e,t.filters,n,"same");return r=po(r,t.batch_norm_offset),pl(r,0,6)}))}function n0(e,t){return Zi((()=>{let n,r=t0(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach(((e,t)=>{let a=t+1,s=function(e){return[2,4,6,12].some((t=>t===e))?[2,2]:[1,1]}(a);r=function(e,t,n){return Zi((()=>{let r=Cl(e,t.filters,n,"same");return r=el(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,.0010000000474974513),pl(r,0,6)}))}(r,e.depthwise_conv,s),r=t0(r,e.pointwise_conv,[1,1]),11===a&&(n=r)})),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}}))}function r0(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),p=Math.max(r[n][0],r[n][2]),d=Math.max(r[n][1],r[n][3]),h=(i-a)*(o-s),c=(p-l)*(d-u);if(h<=0||c<=0)return 0;let f=Math.max(a,l),m=Math.max(s,u),g=Math.min(i,p),y=Math.min(o,d),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(h+c-b)}function a0(e,t){let{sizes:n,centers:r}=function(e){let t=Gd(Yd(e,[1,0])),n=[zu(t[2],t[0]),zu(t[3],t[1])];return{sizes:n,centers:[po(t[0],co(n[0],2)),po(t[1],co(n[1],2))]}}(e),a=Gd(Yd(t,[1,0])),s=co(fo(lu(co(a[2],5)),n[0]),2),i=po(fo(co(a[0],10),n[0]),r[0]),o=co(fo(lu(co(a[3],5)),n[1]),2),l=po(fo(co(a[1],10),n[1]),r[1]);return Yd(Nd([zu(i,s),zu(l,o),po(i,s),po(l,o)]),[1,0])}function s0(e,t){return Zi((()=>{let n=e.shape[0];return{boxPredictionEncoding:Uo(QJ(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:Uo(QJ(e,t.class_predictor),[n,-1,3])}}))}var i0=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if("number"!=typeof this._maxResults)throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},o0=class extends XJ{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return Zi((()=>{let n=Bi(e.toBatchTensor(512,!1),"float32"),r=n0(zu(co(n,127.5),1),t.mobilenetv1),{boxPredictions:a,classPredictions:s}=function(e,t,n){return Zi((()=>{let r=t0(e,n.conv_0,[1,1]),a=t0(r,n.conv_1,[2,2]),s=t0(a,n.conv_2,[1,1]),i=t0(s,n.conv_3,[2,2]),o=t0(i,n.conv_4,[1,1]),l=t0(o,n.conv_5,[2,2]),u=t0(l,n.conv_6,[1,1]),p=t0(u,n.conv_7,[2,2]),d=s0(t,n.box_predictor_0),h=s0(e,n.box_predictor_1),c=s0(a,n.box_predictor_2),f=s0(i,n.box_predictor_3),m=s0(l,n.box_predictor_4),g=s0(p,n.box_predictor_5);return{boxPredictions:jo([d.boxPredictionEncoding,h.boxPredictionEncoding,c.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:jo([d.classPrediction,h.classPrediction,c.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1)}}))}(r.out,r.conv11,t.prediction_layer);return function(e,t,n){return Zi((()=>{let r=e.shape[0],a=a0(Uo(du(n.extra_dim,[r,1,1]),[-1,4]),Uo(e,[-1,4]));a=Uo(a,[r,a.shape[0]/r,4]);let s=Ko(Xo(t,[0,0,1],[-1,-1,-1])),i=Xo(s,[0,0,0],[-1,-1,1]);return i=Uo(i,[r,i.shape[1]]),{boxes:Gd(a),scores:Gd(i)}}))}(a,s,t.output_layer)}))}async forward(e){return this.forwardInput(await zJ(e))}async locateFaces(e,t={}){let{maxResults:n,minConfidence:r}=new i0(t),a=await zJ(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],l=i[0];for(let e=1;e<s.length;e++)s[e].dispose(),i[e].dispose();let u=Array.from(l.dataSync()),p=function(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map(((e,t)=>({score:e,boxIndex:t}))).filter((e=>e.score>a)).sort(((e,t)=>t.score-e.score)),l=e=>e<=r?1:0,u=[];return o.forEach((t=>{if(u.length>=i)return;let n=t.score;for(let n=u.length-1;n>=0;--n){let r=r0(e,t.boxIndex,u[n]);if(0!==r&&(t.score*=l(r),t.score<=a))break}n===t.score&&u.push(t.boxIndex)})),u}(o,u,n,.5,r),d=a.getReshapedInputDimensions(0),h=a.inputSize,c=h/d.width,f=h/d.height,m=o.arraySync(),g=p.map((e=>{let[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map((e=>e*f)),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map((e=>e*c));return new HZ(u[e],new tJ(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})}));return o.dispose(),l.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return e0(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=oQ(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=QQ(n,t),i=a(),o=s(),l={extra_dim:Ad(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}(e)}};function l0(e){let t=new o0;return t.extractWeights(e),t}function u0(e){return l0(e)}var p0=class extends o0{},d0=[new WZ(.738768,.874946),new WZ(2.42204,2.65704),new WZ(4.30971,7.04493),new WZ(10.246,4.59428),new WZ(12.6868,11.8741)],h0=[new WZ(1.603231,2.094468),new WZ(6.041143,7.080126),new WZ(2.882459,3.518061),new WZ(4.266906,5.178857),new WZ(9.041765,10.66308)],c0=[117.001,114.697,97.404],f0=e=>"number"==typeof e;function m0(e){if(!e)throw new Error(`invalid config: ${e}`);if("boolean"!=typeof e.withSeparableConvs)throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!f0(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every((e=>"string"==typeof e)))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map((e=>e||{})).every((e=>f0(e.x)&&f0(e.y))))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(f0)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function g0(e){return Zi((()=>{let t=fo(e,tu(.10000000149011612));return po(Jp(zu(e,t)),t)}))}function y0(e,t){return Zi((()=>{let n=hp(e,[[0,0],[1,1],[1,1],[0,0]]);return n=ml(n,t.conv.filters,[1,1],"valid"),n=zu(n,t.bn.sub),n=fo(n,t.bn.truediv),n=po(n,t.conv.bias),g0(n)}))}function b0(e,t){return Zi((()=>{let n=hp(e,[[0,0],[1,1],[1,1],[0,0]]);return n=ld(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=po(n,t.bias),g0(n)}))}function x0(e,t){let n=tQ(e,t);let r=aQ(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:function(r,a,s){let i=n(r,a,3,`${s}/conv`),o=function(n,r){let a=Ed(e(n)),s=Ed(e(n));return t.push({paramPath:`${r}/sub`},{paramPath:`${r}/truediv`}),{sub:a,truediv:s}}(a,`${s}/bn`);return{conv:i,bn:o}},extractSeparableConvParams:r}}function w0(e,t){let n=iQ(e,t);function r(e){return{filters:n(`${e}/filters`,4),bias:n(`${e}/bias`,1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){let t=r(`${e}/conv`),a=function(e){return{sub:n(`${e}/sub`,1),truediv:n(`${e}/truediv`,1)}}(`${e}/bn`);return{conv:t,bn:a}},extractSeparableConvParams:sQ(n)}}var v0=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},k0=class extends XJ{constructor(e){super("TinyYolov2"),m0(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=y0(e,t.conv0);return n=Ku(n,[2,2],[2,2],"same"),n=y0(n,t.conv1),n=Ku(n,[2,2],[2,2],"same"),n=y0(n,t.conv2),n=Ku(n,[2,2],[2,2],"same"),n=y0(n,t.conv3),n=Ku(n,[2,2],[2,2],"same"),n=y0(n,t.conv4),n=Ku(n,[2,2],[2,2],"same"),n=y0(n,t.conv5),n=Ku(n,[2,2],[1,1],"same"),n=y0(n,t.conv6),n=y0(n,t.conv7),QJ(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?g0(QJ(e,t.conv0,"valid",!1)):b0(e,t.conv0);return n=Ku(n,[2,2],[2,2],"same"),n=b0(n,t.conv1),n=Ku(n,[2,2],[2,2],"same"),n=b0(n,t.conv2),n=Ku(n,[2,2],[2,2],"same"),n=b0(n,t.conv3),n=Ku(n,[2,2],[2,2],"same"),n=b0(n,t.conv4),n=Ku(n,[2,2],[2,2],"same"),n=b0(n,t.conv5),n=Ku(n,[2,2],[1,1],"same"),n=t.conv6?b0(n,t.conv6):n,n=t.conv7?b0(n,t.conv7):n,QJ(n,t.conv8,"valid",!1)}forwardInput(e,t){let{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return Zi((()=>{let r=Bi(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?XZ(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)}))}async forward(e,t){return this.forwardInput(await zJ(e),t)}async detect(e,t={}){let{inputSize:n,scoreThreshold:r}=new v0(t),a=await zJ(e),s=await this.forwardInput(a,n),i=Zi((()=>Gd(s)[0].expandDims())),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},l=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();let u=l.map((e=>e.box)),p=l.map((e=>e.score)),d=l.map((e=>e.classScore)),h=l.map((e=>this.config.classes[e.label]));return KZ(u.map((e=>e.rescale(n))),p,this.config.iouThreshold,!0).map((e=>new GZ(p[e],d[e],h[e],u[e],o)))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function(e,t){let n,r=[],{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}=w0(e,r);if(t.withSeparableConvs){let e=t.filterSizes&&t.filterSizes.length||9;n={conv0:t.isFirstLayerConv2d?a("conv0"):i("conv0"),conv1:i("conv1"),conv2:i("conv2"),conv3:i("conv3"),conv4:i("conv4"),conv5:i("conv5"),conv6:e>7?i("conv6"):void 0,conv7:e>8?i("conv7"):void 0,conv8:a("conv8")}}else n={conv0:s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:s("conv6"),conv7:s("conv7"),conv8:a("conv8")};return eQ(e,r),{params:n,paramMappings:r}}(e,this.config)}extractParams(e){let t=this.config.filterSizes||k0.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return function(e,t,n,r){let a,{extractWeights:s,getRemainingWeights:i}=oQ(e),o=[],{extractConvParams:l,extractConvWithBatchNormParams:u,extractSeparableConvParams:p}=x0(s,o);if(t.withSeparableConvs){let[e,s,i,o,u,d,h,c,f]=r;a={conv0:t.isFirstLayerConv2d?l(e,s,3,"conv0"):p(e,s,"conv0"),conv1:p(s,i,"conv1"),conv2:p(i,o,"conv2"),conv3:p(o,u,"conv3"),conv4:p(u,d,"conv4"),conv5:p(d,h,"conv5"),conv6:c?p(h,c,"conv6"):void 0,conv7:f?p(c,f,"conv7"):void 0,conv8:l(f||c||h,5*n,1,"conv8")}}else{let[e,t,s,i,o,p,d,h,c]=r;a={conv0:u(e,t,"conv0"),conv1:u(t,s,"conv1"),conv2:u(s,i,"conv2"),conv3:u(i,o,"conv3"),conv4:u(o,p,"conv4"),conv5:u(p,d,"conv5"),conv6:u(d,h,"conv6"),conv7:u(h,c,"conv7"),conv8:l(c,5*n,1,"conv8")}}if(0!==i().length)throw new Error(`weights remaing after extract: ${i().length}`);return{params:a,paramMappings:o}}(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){let{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,l=e.shape[1],u=this.config.anchors.length,[p,d,h]=Zi((()=>{let t=e.reshape([l,l,u,this.boxEncodingSize]);return[t.slice([0,0,0,0],[l,l,u,4]),t.slice([0,0,0,4],[l,l,u,1]),this.withClassScores?yd(t.slice([0,0,0,5],[l,l,u,this.config.classes.length]),3):tu(0)]})),c=[],f=await d.array(),m=await p.array();for(let e=0;e<l;e++)for(let t=0;t<l;t++)for(let r=0;r<u;r++){let a=JZ(f[e][t][r][0]);if(!n||a>n){let n=(t+JZ(m[e][t][r][0]))/l*i,s=(e+JZ(m[e][t][r][1]))/l*o,u=Math.exp(m[e][t][r][2])*this.config.anchors[r].x/l*i,p=Math.exp(m[e][t][r][3])*this.config.anchors[r].y/l*o,d=n-u/2,f=s-p/2,g={row:e,col:t,anchor:r},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(h,g):{classScore:1,label:0};c.push({box:new UZ(d,f,d+u,f+p),score:a,classScore:a*y,label:b,...g})}}return p.dispose(),d.dispose(),h.dispose(),c}async extractPredictedClass(e,t){let{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map(((e,t)=>s[n][r][a][t])).map(((e,t)=>({classScore:e,label:t}))).reduce(((e,t)=>e.classScore>t.classScore?e:t))}},I0=k0;I0.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var S0=class extends I0{constructor(e=!0){super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:h0,meanRgb:c0}:{anchors:d0,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new HZ(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};function N0(e,t=!0){let n=new S0(t);return n.extractWeights(e),n}var T0=class extends v0{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},_0=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function C0(e,t,n,r,a=({alignedRect:e})=>e){let s=e.map((e=>vQ(e)?a(e):e.detection)),i=r||(t instanceof rs?await BJ(t,s):await PJ(t,s)),o=await n(i);return i.forEach((e=>e instanceof rs&&e.dispose())),o}async function E0(e,t,n,r,a){return C0([e],t,(async e=>n(e[0])),r,a)}var $0=[new WZ(1.603231,2.094468),new WZ(6.041143,7.080126),new WZ(2.882459,3.518061),new WZ(4.266906,5.178857),new WZ(9.041765,10.66308)],A0=[117.001,114.697,97.404],F0=class extends I0{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:$0,meanRgb:A0,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new HZ(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},R0={ssdMobilenetv1:new o0,tinyFaceDetector:new F0,tinyYolov2:new S0,faceLandmark68Net:new MQ,faceLandmark68TinyNet:new LQ,faceRecognitionNet:new jQ,faceExpressionNet:new yQ,ageGenderNet:new RQ},D0=(e,t)=>R0.ssdMobilenetv1.locateFaces(e,t),M0=(e,t)=>R0.tinyFaceDetector.locateFaces(e,t),O0=(e,t)=>R0.tinyYolov2.locateFaces(e,t),L0=e=>R0.faceLandmark68Net.detectLandmarks(e),z0=e=>R0.faceLandmark68TinyNet.detectLandmarks(e),P0=e=>R0.faceRecognitionNet.computeFaceDescriptor(e),B0=e=>R0.faceExpressionNet.predictExpressions(e),W0=e=>R0.ageGenderNet.predictAgeAndGender(e),V0=e=>R0.ssdMobilenetv1.load(e),U0=e=>R0.tinyFaceDetector.load(e),G0=e=>R0.tinyYolov2.load(e),H0=e=>R0.faceLandmark68Net.load(e),j0=e=>R0.faceLandmark68TinyNet.load(e),q0=e=>R0.faceRecognitionNet.load(e),K0=e=>R0.faceExpressionNet.load(e),X0=e=>R0.ageGenderNet.load(e),Y0=V0,Z0=D0,J0=L0,Q0=class extends _0{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},e1=class extends Q0{async run(){let e=await this.parentTask,t=await C0(e,this.input,(async e=>Promise.all(e.map((e=>R0.faceExpressionNet.predictExpressions(e))))),this.extractedFaces);return e.map(((e,n)=>xQ(e,t[n])))}withAgeAndGender(){return new s1(this,this.input)}},t1=class extends Q0{async run(){let e=await this.parentTask;if(e)return xQ(e,await E0(e,this.input,(e=>R0.faceExpressionNet.predictExpressions(e)),this.extractedFaces))}withAgeAndGender(){return new i1(this,this.input)}},n1=class extends e1{withAgeAndGender(){return new o1(this,this.input)}withFaceDescriptors(){return new p1(this,this.input)}},r1=class extends t1{withAgeAndGender(){return new l1(this,this.input)}withFaceDescriptor(){return new d1(this,this.input)}},a1=class extends _0{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},s1=class extends a1{async run(){let e=await this.parentTask,t=await C0(e,this.input,(async e=>Promise.all(e.map((e=>R0.ageGenderNet.predictAgeAndGender(e))))),this.extractedFaces);return e.map(((e,n)=>{let{age:r,gender:a,genderProbability:s}=t[n];return YQ(JQ(e,a,s),r)}))}withFaceExpressions(){return new e1(this,this.input)}},i1=class extends a1{async run(){let e=await this.parentTask;if(!e)return;let{age:t,gender:n,genderProbability:r}=await E0(e,this.input,(e=>R0.ageGenderNet.predictAgeAndGender(e)),this.extractedFaces);return YQ(JQ(e,n,r),t)}withFaceExpressions(){return new t1(this,this.input)}},o1=class extends s1{withFaceExpressions(){return new n1(this,this.input)}withFaceDescriptors(){return new p1(this,this.input)}},l1=class extends i1{withFaceExpressions(){return new r1(this,this.input)}withFaceDescriptor(){return new d1(this,this.input)}},u1=class extends _0{constructor(e,t){super(),this.parentTask=e,this.input=t}},p1=class extends u1{async run(){let e=await this.parentTask;return(await C0(e,this.input,(e=>Promise.all(e.map((e=>R0.faceRecognitionNet.computeFaceDescriptor(e))))),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0})))).map(((t,n)=>KQ(e[n],t)))}withFaceExpressions(){return new n1(this,this.input)}withAgeAndGender(){return new o1(this,this.input)}},d1=class extends u1{async run(){let e=await this.parentTask;if(e)return KQ(e,await E0(e,this.input,(e=>R0.faceRecognitionNet.computeFaceDescriptor(e)),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0}))))}withFaceExpressions(){return new r1(this,this.input)}withAgeAndGender(){return new l1(this,this.input)}},h1=class extends _0{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?R0.faceLandmark68TinyNet:R0.faceLandmark68Net}},c1=class extends h1{async run(){let e=await this.parentTask,t=e.map((e=>e.detection)),n=this.input instanceof rs?await BJ(this.input,t):await PJ(this.input,t),r=await Promise.all(n.map((e=>this.landmarkNet.detectLandmarks(e))));return n.forEach((e=>e instanceof rs&&e.dispose())),e.filter(((e,t)=>r[t])).map(((e,t)=>kQ(e,r[t])))}withFaceExpressions(){return new n1(this,this.input)}withAgeAndGender(){return new o1(this,this.input)}withFaceDescriptors(){return new p1(this,this.input)}},f1=class extends h1{async run(){let e=await this.parentTask;if(!e)return;let{detection:t}=e,n=this.input instanceof rs?await BJ(this.input,[t]):await PJ(this.input,[t]),r=await this.landmarkNet.detectLandmarks(n[0]);return n.forEach((e=>e instanceof rs&&e.dispose())),kQ(e,r)}withFaceExpressions(){return new r1(this,this.input)}withAgeAndGender(){return new l1(this,this.input)}withFaceDescriptor(){return new d1(this,this.input)}},m1=class extends _0{constructor(e,t=new i0){super(),this.input=e,this.options=t}},g1=class extends m1{async run(){let e,{input:t,options:n}=this;if(n instanceof T0)e=R0.tinyFaceDetector.locateFaces(t,n);else if(n instanceof i0)e=R0.ssdMobilenetv1.locateFaces(t,n);else{if(!(n instanceof v0))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");e=R0.tinyYolov2.locateFaces(t,n)}return e}runAndExtendWithFaceDetections(){return new Promise(((e,t)=>{this.run().then((t=>e(t.map((e=>pJ({},e)))))).catch((e=>t(e)))}))}withFaceLandmarks(e=!1){return new c1(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new e1(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new s1(this.runAndExtendWithFaceDetections(),this.input)}},y1=class extends m1{async run(){let e=await new g1(this.input,this.options),t=e[0];return e.forEach((e=>{e.score>t.score&&(t=e)})),t}runAndExtendWithFaceDetection(){return new Promise((async e=>{let t=await this.run();e(t?pJ({},t):void 0)}))}withFaceLandmarks(e=!1){return new f1(this.runAndExtendWithFaceDetection(),this.input,e)}withFaceExpressions(){return new t1(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new i1(this.runAndExtendWithFaceDetection(),this.input)}};function b1(e,t=new i0){return new y1(e,t)}function x1(e,t=new i0){return new g1(e,t)}async function w1(e,t){return x1(e,new i0(t?{minConfidence:t}:{})).withFaceLandmarks().withFaceDescriptors()}async function v1(e,t={}){return x1(e,new v0(t)).withFaceLandmarks().withFaceDescriptors()}var k1=w1;function I1(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");let n=Array.from(e),r=Array.from(t);return Math.sqrt(n.map(((e,t)=>e-r[t])).reduce(((e,t)=>e+t*t),0))}var S1=class{constructor(e,t=.6){this._distanceThreshold=t;let n=Array.isArray(e)?e:[e];if(!n.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let r=1,a=()=>"person "+r++;this._labeledDescriptors=n.map((e=>{if(e instanceof oJ)return e;if(e instanceof Float32Array)return new oJ(a(),[e]);if(e.descriptor&&e.descriptor instanceof Float32Array)return new oJ(a(),[e.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")}))}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(e,t){return t.map((t=>I1(t,e))).reduce(((e,t)=>e+t),0)/(t.length||1)}matchDescriptor(e){return this.labeledDescriptors.map((({descriptors:t,label:n})=>new sJ(n,this.computeMeanDistance(e,t)))).reduce(((e,t)=>e.distance<t.distance?e:t))}findBestMatch(e){let t=this.matchDescriptor(e);return t.distance<this._distanceThreshold?t:new sJ("unknown",t.distance)}toJSON(){return{distanceThreshold:this._distanceThreshold,labeledDescriptors:this._labeledDescriptors.map((e=>e.toJSON()))}}static fromJSON(e){let t=e.labeledDescriptors.map((e=>oJ.fromJSON(e)));return new S1(t,e.distanceThreshold)}};function N1(e){let t=new F0;return t.extractWeights(e),t}function T1(e,t){let{width:n,height:r}=new TZ(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map((e=>T1(e,{width:n,height:r})));if(vQ(e)){let t=e.detection.forSize(n,r),a=e.unshiftedLandmarks.forSize(t.box.width,t.box.height);return kQ(pJ(e,t),a)}return uJ(e)?pJ(e,e.detection.forSize(n,r)):e instanceof nJ||e instanceof HZ?e.forSize(n,r):e}var _1="1.7.12";return(e=>((e,s,i,o)=>{if(s&&"object"==typeof s||"function"==typeof s)for(let l of r(s))!a.call(e,l)&&l!==i&&t(e,l,{get:()=>s[l],enumerable:!(o=n(s,l))||o.enumerable});return e})(t({},"__esModule",{value:!0}),e))(o)})();
//# sourceMappingURL=/sm/0a8e6ec756a79b4a8d693db18d7be4e1e86bf9365d9d98e32077305e60ff82b0.map